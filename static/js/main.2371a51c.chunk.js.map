{"version":3,"sources":["reportWebVitals.ts","constants/DefaultValues.ts","constants/SolidProviders.ts","components/auth/providers/index.tsx","contexts/TranslateContext.ts","components/auth/index.tsx","contexts/SpinnerContext.ts","components/common/spinnerContextComponent/spinner/index.tsx","helpers/SpinnerCounter.ts","components/common/infoModal/index.tsx","components/common/spinnerContextComponent/index.tsx","components/common/translateContextComponent/languageSelector/index.tsx","components/common/translateContextComponent/index.tsx","i18n/Locales.ts","contexts/PageSwitcherContext.ts","components/common/pageSwitcherComponent/index.tsx","contexts/WorkspaceContext.ts","helpers/SOLIDQUIZ.js","constants/SolidQuizMissingValues.ts","helpers/LangReader.ts","components/common/quizListLoader/quizList/quizBtn/index.tsx","services/WorkspaceService.ts","services/SharesService.ts","services/QuizService.ts","helpers/QuizListHelper.ts","components/common/quizListLoader/quizList/index.tsx","components/common/quizListLoader/index.tsx","contexts/GameContext.ts","components/common/gameContextComponent/index.tsx","helpers/GameHelper.ts","services/ShareLinksService.ts","services/AclService.ts","helpers/SharesHelper.ts","components/page/playGame/gameLoader/gameController/gameResult/shareGameResult/index.tsx","components/page/playGame/gameLoader/gameController/gameResult/index.tsx","components/page/playGame/gameLoader/gameController/questionController/question/answerLoader/answerController/answer/index.tsx","services/QuizResultService.ts","components/page/playGame/gameLoader/gameController/questionController/question/answerLoader/answerController/index.tsx","components/page/playGame/gameLoader/gameController/questionController/question/answerLoader/index.tsx","components/page/playGame/gameLoader/gameController/questionController/question/index.tsx","helpers/QuizResultsListHelper.ts","components/page/playGame/gameLoader/gameController/questionController/index.tsx","components/common/buttonToYesNoModal/yesNoModal/index.tsx","components/common/buttonToYesNoModal/customButtonYesNo/index.tsx","components/page/playGame/gameLoader/gameController/gameContainer/index.tsx","components/page/playGame/gameLoader/gameController/index.tsx","components/page/playGame/gameLoader/index.tsx","components/page/playGame/index.tsx","components/common/formBase/index.tsx","components/common/formBase/basicInput/index.tsx","components/page/createQuiz/quizForm/multiLang/index.tsx","components/page/createQuiz/quizForm/monoLang/index.tsx","components/page/createQuiz/quizForm/index.tsx","services/QuestionService.ts","helpers/QuizContainerConverter.ts","contexts/QuestionCreationContext.ts","components/common/quizModification/answerInput/index.tsx","components/common/quizModification/toggleBtnCheck/index.tsx","components/page/createQuiz/questionForm/questionAnswers/questionAnswerLoader/questionAnswerSelector/langQuestionAnswer/index.tsx","components/page/createQuiz/questionForm/questionAnswers/questionAnswerLoader/questionAnswerSelector/questionAnswer/index.tsx","helpers/AnswerArrayHelper.ts","components/page/createQuiz/questionForm/questionAnswers/questionAnswerLoader/questionAnswerSelector/index.tsx","components/page/createQuiz/questionForm/questionAnswers/questionAnswerLoader/index.tsx","components/page/createQuiz/questionForm/questionAnswers/index.tsx","helpers/QuestionCreateModelValidator.ts","components/page/createQuiz/questionForm/questionNavigationButtons/index.tsx","components/common/quizModification/questionTextInput/index.tsx","components/page/createQuiz/questionForm/questionTextLoader/questionText/langText/index.tsx","components/page/createQuiz/questionForm/questionTextLoader/questionText/monoText/index.tsx","components/page/createQuiz/questionForm/questionTextLoader/questionText/index.tsx","components/page/createQuiz/questionForm/questionTextLoader/index.tsx","components/page/createQuiz/questionForm/index.tsx","components/common/questionCreationContextComponent/index.tsx","components/common/quizShare/quizShareModeModal/index.tsx","components/common/quizShare/quizShareModal/quizShareModalBody/index.tsx","components/common/quizShare/quizShareModal/index.tsx","components/common/quizShare/index.tsx","components/page/createQuiz/creationResult/index.tsx","components/page/createQuiz/index.tsx","helpers/ShareLinksHelper.ts","components/common/linkWithTooltip/index.tsx","components/page/leaderboard/resultsLoader/resultsList/resultsListElement/index.tsx","components/page/leaderboard/resultsLoader/resultsList/index.tsx","components/page/leaderboard/resultsLoader/index.tsx","components/page/leaderboard/index.tsx","components/page/helpPage/index.tsx","components/page/modifyQuiz/quizList/quizRow/quizBtn/index.tsx","components/common/buttonToYesNoModal/closeButtonYesNo/index.tsx","components/page/modifyQuiz/quizList/quizRow/index.tsx","components/page/modifyQuiz/quizList/index.tsx","components/page/modifyQuiz/index.tsx","components/page/shares/shareList/shareRow/shareTypeSpecific/index.tsx","components/page/shares/shareList/shareRow/index.tsx","components/page/shares/shareList/index.tsx","components/page/shares/index.tsx","components/page/mainMenu/index.tsx","components/common/workspaceContextComponent/index.tsx","components/page/index.tsx","components/App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","QUIZZES_CONTAINER","SHARE_LINKS_CONTAINER_DATASET","SOLID_QUIZ_POD_PROFILE","SOLID_QUIZ_POD_SHARES_DATASET","SOLID_PROVIDERS","Providers","props","providers","map","provider","value","id","defaultTranslateState","lang","t","key","TranslateContext","React","createContext","Authenticate","useContext","authOptions","clientName","useState","oidcIssuer","setOidcIssuer","Container","className","Row","Col","type","name","list","onChange","event","target","redirectUrl","window","location","href","Button","variant","size","Alert","defaultSpinnerState","Spinner","ShowSpinner","HideSpinner","SpinAround","delegate","Error","SpinnerContext","useEffect","timer","setTimeout","clearTimeout","SpinnerCounter","counter","this","showSpinner","InfoModal","Modal","show","onHide","centered","Header","closeButton","Title","Body","body","Footer","onClick","SpinnerContextComponent","setShowSpinner","spinnerCounter","error","setError","useCallback","spinner","Increase","Decrease","a","catch","console","log","translatedError","message","undefined","length","finally","Provider","children","toString","LanguageSelector","selectedLangLabel","langSelectorClass","innerWidth","md","DropdownButton","title","onSelect","eventKey","changeLang","Dropdown","Item","TranslateContextComponent","setLang","language","userLang","navigator","hu","en","translate","defaultPageSwitcherState","ActualPage","SwitchTo","GoBack","PageSwitcherContext","PageSwitcherComponent","defaultPage","actualPage","setActualPage","page","defaultWorkspaceContext","workspace","getWorkspace","workspaceUrl","webId","WorkspaceContext","require","_VocabTerm","VocabTerm","getLocalStore","_DataFactory","_namedNode","namedNode","_NS","localName","SOLIDQUIZ","PREFIX","NAMESPACE","PREFIX_AND_NAMESPACE","NS","Quiz","addLabel","addComment","Question","Answer","QuizResult","QuestionResult","Share","ShareLink","createdBy","quizQuestion","answerOption","correctAnswerOption","quizResultOf","quizResultCreatedBy","firstQuestionResult","nextQuestionResult","previousQuestionResult","questionResultOf","questionResultsAnswer","sharedResource","sharedResourceType","shareLinksLink","shareLinksIndividual","TITLE","CREATED","MULTI_LANGUAGE_SUPPORT","QUESTION_TEXT","ANSWER_TEXT","NUMBER_OF_QUESTIONS","QUIZ_RESULT_CREATED","SUCCESS_OF_QUESTION_RESULT","NUMBER_OF_CORRECT_ANSWERS","SHARE_CREATED","getString","thing","propertyUri","multiLangSupport","getStringWithLocale","getStringNoLocale","getMutliLang","textEn","textHu","text","QuizBtn","quizTitle","setQuizTitle","getBoolean","datasetAndThing","onQuizSelected","getProfileThing","fetch","getSolidDataset","profileDataset","profileThing","getThing","getWorkSpaceLocation","podRoot","getUrl","WS","storage","getOrCreateWorkSpace","workspaceUri","statusCode","saveSolidDatasetAt","createSolidDataset","deleteDataset","dataset","uri","getSourceUrl","deleteSolidDataset","getFirstThingByRDFType","rdfType","allThings","getThingAll","i","RDF","getAllThingByUris","uris","result","forEach","encodeURI","push","publishQuiz","quizUri","getOrCreateShares","publicSharesDataset","newPublicShareThing","createPublishedThing","setThing","updatedDataset","savedThingUri","getSavedShareThingsUri","savedThing","shareQuiz","friendsShareSpace","tryGetFirendsShareDataset","friendsSharesDataset","publishQuizResult","quizResultUri","getPublishedShares","shareTypeFilter","tryGetShares","publicSharesThings","rv","getLocalShares","sharesDatasetUri","sharesDataset","localSharesThings","getSharesDataset","createSharesIndexForPublic","sharesUri","isLocalSharesExists","hasAccessibleAcl","ownerAcl","createAcl","ownerUpdatedAcl","setAgentResourceAccess","read","append","write","control","saveAclFor","publicAcl","updatedPublicAcl","setPublicResourceAccess","shares","sharedResourceUri","sharedType","buildThing","createThing","addUrl","addDatetime","Date","build","localThing","indexOfSeparator","url","lastIndexOf","substring","datasetUri","createQuizContainer","quizName","quizFormModel","quizThingBuilder","addBoolean","multiLang","addStringWithLocale","quizTitleEn","quizTitleHu","addStringNoLocale","addTitlesToQuizBasedOnLang","quiz","questions","getQuizzesContainer","getSpecificQuizUri","createQuizzesContainer","quizzesWorkspace","isQuizzesExists","checkQuizTitleIsAlreadyReserved","quizUrl","saveNewQuiz","quizContainer","addQuestionsToQuiz","localeDataset","addQuestionsToDataset","nestedDateset","getSavedQuizThingsUri","questionContainer","questionUrl","questionName","addInteger","nestedDataset","question","addAnswersToDataset","answers","answer","getOwnQuizzes","containerUri","quizService","containerDataset","datasetThing","containedResources","getUrlAll","LDP","contains","getQuizDatasets","quizDatasets","getQuizzesFromDatasets","quizThings","quizDataset","quizThing","workspaceService","getPublicDatasets","sharesService","publicQuizThings","tryGetSharedDatasetsAtOnce","fetchedDatasets","getLocalSharesDatasets","localSharesUri","localSharesQuizThings","mergeQuizzes","localResults","publicSharesResults","localharesResults","publisResult","find","item","localShareResult","tryGetDataset","quizContainerContainedUris","promiseList","tryGetQuizUri","tryGetQuizDataset","Promise","all","fetchedPromises","promiseResult","endsWith","lastWord","indexOfLast","getLastWordFromUri","validateDatasetForQuizType","sharedQuizThings","promises","quizDatasetUri","QuizList","quizBtns","setQuizBtns","quizData","indx","QuizListLoader","session","useSession","setQuizDatasets","fetchedQuizDatasets","fetchedPublicQuizDatasets","fetchedLocalSharesQuizDatasets","mergedQuizDatasets","defaultGameState","getQuizData","gameStatus","actQuestionIndex","allQuestions","quizResultNameUri","quizResultThing","questionResultThings","setGameStatus","GameContext","GameContextComponent","generateRandomSeries","count","seriesValues","generateSeries","selected","Math","floor","random","fromSeries","splice","addNewQuestionResult","newQuestionResultThing","getFutureUrl","lastQuestionResultThing","questionResultThing","getLastQuestionResult","indexOf","addNumberOfSuccessToQuizResult","successCounter","str","createShareLink","individualWebId","shareUri","linksUrl","getOrCreateLinksDataset","linksDataset","shareLinkThing","getAllShareLink","linksDatasetUri","getShareLinksDatasetUri","createPublicAclForNewResource","newAcl","updatedAcl","createAgentAclForNewResource","friendsWebId","createFallbackAclForOwner","checkForOwnerRights","newFallbackAcl","takeAwayPublicAcl","resourceUri","getSolidDatasetWithAcl","resourceDataset","resourceAcl","getResourceAcl","takeAwayAgentAcl","agentWebId","datasetWithAcl","hasResourceAcl","agentAccess","getAgentAccess","handlePublishQuiz","shareThing","shareLinksService","aclService","handlePublishQuizResult","quizResultData","shareQuizWithFriend","ownWorkSpace","getFriendsShareSpace","checkForQuizShare","getFriendsList","friendUris","FOAF","knows","friendsProfileDataset","friendsProfileThing","friendsWorkspace","ShareGameResult","shared","setShared","disabled","IoMdShare","GameResult","answersSucceded","setAnswersSucceded","actualQuizTitle","gameResult","actualAnswersSucceded","getInteger","savedQuizResultData","answerText","setAnswerText","btnVariant","setBtnVariant","answerThing","answerSelectedResult","onAnswerSelected","saveQuizResult","addQuestionResultssToDataset","getQuizResultsContainer","createQuizResultsContainer","quizResultsWorkspace","isQuizResultsExists","AnswerController","correctAnswer","setCorrectAnswer","answerSelected","setAnswerSelected","answerBtns","setAnswerBtns","success","act","questionThing","quizResultService","correctAnswerThingUri","answerThings","AnswerLoader","setAnswerThings","answerUris","series","answersInRandOrder","index","questionText","setQuestionText","FloatingLabel","controlId","label","Form","Control","as","placeholder","defaultValue","getQuizResultsFromContainer","tryGetQuizResultDataset","getQuizResultDatasets","quizResultDatasets","getQuizResultsFromDatasets","quizResultsThings","quizResultDataset","sortQuizResultDatas","quizResultDatas","sort","b","byCorrectAnswer","thingA","thingB","correctAnswersA","compareByCorrectAnswer","dateA","getDatetime","getTime","compareByNewer","getSavedQuizResultName","resultsName","getQuizNameFromQuizThing","getPublicQuizResultDatasets","publicQuizResultThings","quizResultDatasetUri","checkQuizResultsQuizOf","quizResultsDataset","mergeQuizResults","publicResults","QuestionController","onCompleteGame","actQuestion","setActQuestion","savedThingName","updatedThing","YesNoModal","onConfirm","CustomButtonYesNo","modalShow","setModalShow","style","modalText","GameContainer","GameController","setQuestions","setGameResult","questionUris","questionThings","questionsInRandOrder","GameLoader","setMultiLang","newGameStatus","setNewGameStatus","questionsCount","PlayGame","selectedQuiz","setSelectedQuiz","FormBase","validationSchema","schema","onSubmit","initialValues","submitLabel","BasicInput","useField","formikId","field","meta","isInvalid","touched","Feedback","MultiLang","Yup","required","max","matches","MonoLang","values","langValues","QuizForm","isMultiLang","setIsMultiLang","afterFormSubmit","formContent","Check","checked","createQuestionContainer","questionModel","questionNumber","createQuestionName","answerContainers","arr","answerOptions","answerName","createAnswerName","answerThingBuilder","addTextToAnswerBasedOnLang","createAnswerThings","questionThingBuilder","addTextToQuestionBasedOnLang","correctAnswerId","correctAnswerUri","answerId","getCorrectAnswerUri","answerFutureUri","addAnswersToQuestion","getQuestionContainer","createQuestionNameFromNumber","container","getAnswerNumber","convert","multiLangData","createQuizFormModel","getFragmentFromUri","removeUrl","numberOfQuestins","getIntegerAll","removeInteger","questionContainers","quiestionContainer","answerContainer","createAnswerContainer","createAnswerContainers","questionService","answerModels","answerModel","createAnswerCreateModel","createAnswerCreateModels","createQuestionCreateModel","createQuiestionContainer","createQuestionContainers","defaultQuestionCreationState","setQuestionNumber","answerNumber","setAnswerNumber","getQuizContainer","isCrurrentQuestionCreatedYet","isNextQuestionNew","QuestionCreationContext","AnswerInput","actValue","setActValue","ToggleBtnCheck","defaultChecked","setChecked","ToggleButton","IoMdCheckmark","LangQuestionAnswer","labelEn","onChangeEn","defaultValueEn","labelHu","onChangeHu","defaultValueHu","CloseButton","onCloseAnswer","QuestionAnswer","getOCreateAnswerInArray","QuestionAnswerSelector","handleChange","model","answerResult","answerArrayHelper","handleChangeEn","handleChangeHu","content","QuestionAnswerLoader","multiLangText","QuestionAnswers","setAnswers","closeAnswer","toClose","toCloseIndex","addAnswer","isCloseDisabled","validateModel","validateText","validateAnswers","QuestionNavigationButtons","alert","setAlert","onPrev","questionCreateModelValidator","onNextNew","onNext","onFinishClick","QuestionTextInput","LangText","MonoText","QuestionText","QuestionTextLoader","QuestionForm","setQuestionModel","titleCreateOrModify","setTitleCreateOrModify","questionCreateModel","setToNewEmptyForm","questionSubmitted","prevQuestionModel","nextQuestionModel","finishQuiz","QuestionCreationContextComponent","QuizShareModeModal","QuizShareModalBody","friendList","setSelected","elements","setElements","elementActive","setElementActive","onSelectChange","onSelectClick","friend","QuizShareModal","selectedPerson","setSelectedPerson","QuizShare","shareModeModalShow","setShareModeModalShow","infoModal","setInfoModal","shareModalShow","setShareModalShow","setFriendList","handlePublish","isPublish","agentUri","CreationResult","setTitle","actTitle","actQuestionNumber","isModify","CreateQuiz","setQuizContainer","firstFormModel","setFirstFormModel","modalErrorMsg","setModalErrorMsg","creationResult","setCreationResult","propQuizContainer","quizContainerConverter","element","savedQuizThing","getAllShareThingByShareLink","shareLinks","shareLink","tryGetShare","shareLinkFetchModel","shareDataset","isPubliclyShared","checkIfPubliclyShared","tryGetShareWhitoutFetch","tryGetShareWitchFetch","fetchQuizTitle","fetchQuizTitleFromResult","removeSharing","shareLinkModel","removePublicShares","removeAgentShares","removeShareLink","tryGetName","firstName","removeThing","shareLinkDataset","LinkWithTooltip","tooltipText","setName","OverlayTrigger","placement","delay","hide","overlay","Tooltip","rel","ResultsListElement","correctAnswers","setCorrectAnswers","setCreatedBy","created","setCreated","actCorrectAnswers","resultThing","actCreatedBy","actCreated","toLocaleString","orderId","ResultsList","loadedQuizTitle","ResultsLoader","setQuizResultDatasets","quizzesContainerUri","quizResultsService","fetchedQuizResultDatasets","filteredQuizResultsData","fetchedPublicQuizResultDatasets","mergedQuizResultsData","Leaderboard","HelpPage","CloseButtonYesNo","QuizRow","handleDelete","quizRows","setQuizRows","ModifyQuiz","syncState","setSyncState","ShareTypeSpecific","isQuizShare","ShareRow","setIsQuizShare","individual","setIndividual","showInfoModal","setShowInfoModal","typeUri","actIndividual","ShareList","shareLinkModels","Shares","setShareLinkModels","actShareLinkModels","MainMenu","WorkspaceContextComponent","setWorkspace","setWorkspaceUrl","setWebId","info","isLoggedIn","workSpaceLocation","fetchedWorkspace","Page","App","appContent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2371a51c.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export const APP_NAME = \"Solid quiz\";\r\n\r\nexport const SOLID_QUIZ_WORKSPACE = \"workspace/solidQuiz/\";\r\n\r\nexport const QUIZZES_CONTAINER = \"quizzes/\";\r\n\r\nexport const QUIZ_RESULTS_CONTAINER = \"quizResults/\";\r\n\r\nexport const SHARES_CONTAINER_DATASET = \"shares/index.ttl\";\r\nexport const SHARE_LINKS_CONTAINER_DATASET = \"shares/links.ttl\";\r\n\r\nexport const SOLID_QUIZ_POD_PROFILE = \"https://solid-quiz.solidcommunity.net/profile/card#me\";\r\nexport const SOLID_QUIZ_POD_SHARES_DATASET = \"https://solid-quiz.solidcommunity.net/workspace/solidQuiz/shares/index.ttl\";","export const SOLID_PROVIDERS = [\r\n    'https://inrupt.net/',\r\n    'https://solidcommunity.net/',\r\n    \"https://solidweb.org/\"\r\n  ];","import React from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { SOLID_PROVIDERS } from '../../../constants/SolidProviders';\r\n\r\nexport const Providers: React.FC<Props> = (props: Props) => {\r\n    const providers = SOLID_PROVIDERS.map((provider) => \r\n        <option key={provider} value={provider}/>\r\n    );\r\n\r\n\treturn (\r\n        <datalist id={props.id}>\r\n            {providers}\r\n        </datalist>\r\n\t);\r\n}","import React from \"react\";\r\n\r\nexport interface ITranslateContext {\r\n    lang: string,\r\n    t: (key: string) => string\r\n  }\r\n  \r\nexport const defaultTranslateState = {\r\n    lang: \"en\",\r\n    t: (key: string) => \"Unknown\"\r\n  };\r\n  \r\nexport const TranslateContext = React.createContext<ITranslateContext>(defaultTranslateState);","import { LoginButton } from '@inrupt/solid-ui-react';\r\nimport React, { useContext, useState } from 'react';\r\nimport { APP_NAME } from '../../constants/DefaultValues';\r\nimport { Props } from './types';\r\nimport { Providers } from './providers';\r\nimport './styles.scoped.css';\r\nimport { TranslateContext } from '../../contexts/TranslateContext';\r\nimport { Alert, Button, Col, Container, Row } from 'react-bootstrap';\r\n\r\nexport const Authenticate: React.FC<Props> = (props: Props) => {\r\n\tconst { t } = useContext(TranslateContext);\r\n\r\n    const authOptions = {\r\n        clientName: APP_NAME,\r\n      };\r\n\r\n    const [oidcIssuer, setOidcIssuer] = useState(\"\");\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      setOidcIssuer(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <Container className='square-box d-flex flex-column text-center'>\r\n            <h1>{t(\"auth.title\")}</h1>\r\n            <Container className='px-4 inner-box'>\r\n                <p>{t(\"auth.label\")}</p>\r\n                <Row className='mt-3'>\r\n                    <Col>\r\n                        <input\r\n                            className=\"inner-box-dropDown\"\r\n                            type=\"text\"\r\n                            name=\"oidcIssuer\"\r\n                            list=\"providers\"\r\n                            value={oidcIssuer}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <Providers id=\"providers\" />\r\n                    </Col>\r\n                </Row>\r\n                <Row className='mt-4'>\r\n                    <Col>\r\n                        <LoginButton\r\n                            oidcIssuer={oidcIssuer}\r\n                            redirectUrl={window.location.href}\r\n                            authOptions={authOptions}\r\n                        >\r\n                            <Button variant=\"primary\" size='lg' className='login-btn'>{t(\"auth.button.login\")}</Button>\r\n                        </LoginButton>\r\n                    </Col>\r\n                </Row>\r\n                <Row className='mt-3'>\r\n                    <Alert>{t(\"auth.button.note\")}</Alert>\r\n                </Row>\r\n            </Container>\r\n        </Container>\r\n    );\r\n}","import React from \"react\";\r\n\r\nexport interface ISpinnerContext {\r\n  Spinner: boolean;\r\n  ShowSpinner: () => void;\r\n  HideSpinner: () => void;\r\n  SpinAround: (delegate: () => Promise<void>) => Promise<void>;\r\n}\r\n  \r\nexport const defaultSpinnerState = {\r\n  Spinner: true,\r\n  ShowSpinner: () => {},\r\n  HideSpinner: () => {},\r\n  SpinAround: (delegate: () => Promise<void>) => { throw new Error('This is a default value, you should not call it!') }\r\n};\r\n  \r\n  export const SpinnerContext = React.createContext<ISpinnerContext>(defaultSpinnerState);","import React, { useContext, useEffect } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { SpinnerContext } from '../../../../contexts/SpinnerContext';\r\n\r\nexport const Spinner: React.FC<Props> = (props: Props) => {\r\n\tconst { Spinner, HideSpinner } = useContext(SpinnerContext);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst timer = setTimeout(() => {\r\n\t\t\tHideSpinner();\r\n\t\t}, 1000);\r\n\t\treturn () => clearTimeout(timer);\r\n\t  }, [HideSpinner]);\r\n\r\n\treturn (\t\r\n\t\t<>\r\n\t\t\t{Spinner &&\r\n\t\t\t<div className=\"spinner-uter-container\">\r\n\t\t\t\t<div className='flex-container-spinner'>\r\n\t\t\t\t\t<div className=\"spinner-container\">\r\n\t\t\t\t\t\t<div className=\"loading-spinner\">\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>}\t\r\n\t\t</>\t\r\n\t);\r\n}","export default class SpinnerCounter{\r\n    private counter: number = 0;\r\n\r\n    private showSpinner(): boolean{\r\n        return this.counter > 0;\r\n    }\r\n\r\n    public Increase(): boolean{\r\n        this.counter++;\r\n\r\n        return this.showSpinner();\r\n    }\r\n\r\n    public Decrease(): boolean{\r\n        if (this.counter !== 0) {\r\n            this.counter--;\r\n        }\r\n        \r\n        return this.showSpinner();\r\n    }\r\n}","import React, { useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport { TranslateContext } from '../../../contexts/TranslateContext';\r\n\r\nexport const InfoModal: React.FC<Props> = (props: Props) => {\t\r\n\tconst { t } = useContext(TranslateContext);\r\n\r\n\treturn (\r\n\t\t<> \r\n\t\t\t<Modal show={props.show} onHide={props.onHide} centered>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>{t(\"page.common.info.title\")}</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t{props.body}\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer className='justify-content-center'>\r\n\t\t\t\t\t<Button variant=\"primary\" onClick={() => props.onHide()}>{t(\"page.common.info.btnOk\")}</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n}","import React, { useCallback, useState, useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { defaultSpinnerState, SpinnerContext } from '../../../contexts/SpinnerContext';\r\nimport { Spinner } from './spinner';\r\nimport SpinnerCounter from '../../../helpers/SpinnerCounter';\r\nimport { InfoModal } from '../infoModal';\r\nimport { TranslateContext } from './../../../contexts/TranslateContext';\r\n\r\nexport const SpinnerContextComponent: React.FC<Props> = (props: Props) => {\r\n\tconst { t } = useContext(TranslateContext);\r\n\tconst [showSpinner, setShowSpinner] = useState(defaultSpinnerState.Spinner);\r\n\tconst [spinnerCounter] = useState<SpinnerCounter>(new SpinnerCounter());\r\n\tconst [error, setError] = useState<string | null>(null);\r\n\r\n\tconst ShowSpinner = useCallback(() => {\r\n\t\tconst spinner = spinnerCounter.Increase();\r\n\t\tsetShowSpinner(spinner);\r\n\t}, [spinnerCounter]);\r\n\r\n\tconst HideSpinner = useCallback(() => {\r\n\t\tconst spinner = spinnerCounter.Decrease();\r\n\t\tsetShowSpinner(spinner);\r\n\t}, [spinnerCounter]);\r\n\r\n\tconst SpinAround = useCallback(async (delegate: () => Promise<void>) => {\r\n\t\tShowSpinner();\r\n\t\tawait delegate().catch((error: any) => {\r\n\t\t\tconsole.log(error);\r\n\r\n\t\t\tconst translatedError = t(error.message);\r\n\t\t\tif (translatedError !== undefined && translatedError !== null && translatedError.length > 0) {\r\n\t\t\t\tsetError(translatedError);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tsetError(error);\r\n\t\t\t}\r\n\t\t}).finally(() =>{\r\n\t\t  HideSpinner();\r\n\t\t});\r\n\t}, [ShowSpinner, HideSpinner, t]);\r\n\r\n\treturn (\r\n\t\t<SpinnerContext.Provider value={{\r\n\t\t\t\tSpinner: showSpinner,\r\n\t\t\t\tShowSpinner,\r\n\t\t\t\tHideSpinner,\r\n\t\t\t\tSpinAround,\r\n\t\t\t}}>\r\n\t\t\t\t{props.children}\r\n\t\t\t\t<Spinner />\r\n\t\t\t\t<InfoModal show={error !== null} onHide={() => setError(null)} body={error?.toString() ?? \"error\"} />\r\n\t\t</SpinnerContext.Provider>\r\n\t);\r\n}","import React, { useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Col, Container, Dropdown, DropdownButton, Row } from 'react-bootstrap';\r\nimport { TranslateContext } from '../../../../contexts/TranslateContext';\r\n\r\nexport const LanguageSelector: React.FC<Props> = (props: Props) => {\r\n\tconst { t, lang } = useContext(TranslateContext);\t\r\n\r\n\tconst selectedLangLabel = lang === \"hu\" ? t(\"lang.hungarian\") : t(\"lang.english\");\r\n\r\n\tconst langSelectorClass = window.innerWidth > 1400 ? \"language-wide-selector\" : \"language-narrow-selector\";\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Row className=\"justify-content-end\">\r\n\t\t\t\t<Col md=\"auto\">\r\n\t\t\t\t\t<DropdownButton \r\n\t\t\t\t\t\tid=\"dropdown-basic-button\" \r\n\t\t\t\t\t\ttitle={selectedLangLabel} \r\n\t\t\t\t\t\tvariant='outline-secondary' \r\n\t\t\t\t\t\tonSelect={(eventKey: any, event: Object) => props.changeLang(eventKey)}\r\n\t\t\t\t\t\tclassName={langSelectorClass}>\r\n\t\t\t\t\t\t<Dropdown.Item eventKey=\"en\">{t(\"lang.english\")}</Dropdown.Item>\r\n\t\t\t\t\t\t<Dropdown.Item eventKey=\"hu\">{t(\"lang.hungarian\")}</Dropdown.Item>\r\n\t\t\t\t\t</DropdownButton>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { defaultTranslateState, TranslateContext } from '../../../contexts/TranslateContext';\r\nimport { isSupportedLanguage, translate } from '../../../i18n/Locales';\r\nimport { LanguageSelector } from './languageSelector';\r\n\r\nexport const TranslateContextComponent: React.FC<Props> = (props: Props) => {\r\n\tconst [lang, setLang] = useState(defaultTranslateState.lang);\r\n\r\n\tuseEffect(() => {\r\n\t\tvar userLang = navigator.language;\r\n\t\tif (userLang && isSupportedLanguage(userLang)) {\r\n\t\t\tsetLang(userLang);\r\n\t\t}\r\n\t  }, []);\r\n\r\n\tconst t = (key: string) => {\r\n\t\treturn translate(key, lang);\r\n\t}\r\n\r\n\tconst changeLang = (language: string) => {\r\n\t\tsetLang(language);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<TranslateContext.Provider value={{\r\n\t\t\tlang,\r\n\t\t\tt\r\n\t\t}}>\r\n\t\t\t<LanguageSelector changeLang={changeLang} />\r\n\t\t\t{props.children}\r\n\t\t</TranslateContext.Provider>\r\n\t);\r\n}","import en from './en.json'\r\nimport hu from './hu.json'\r\n\r\nexport const isSupportedLanguage = (language: string): boolean => {\r\n    return language === 'hu' ||\r\n        language === 'en';\r\n}\r\n\r\nexport const translate = (key: string, language: string): string => {\r\n    let languageFile: { [key: string]: string } = {};\r\n\r\n    if (language === 'hu') {\r\n        languageFile = hu;\r\n    }\r\n    else{\r\n        languageFile = en;\r\n    }\r\n\r\n    return languageFile[key];\r\n}","import React from \"react\";\r\n\r\nexport interface IPageSwitcherContext {\r\n  ActualPage: JSX.Element | null;\r\n  SwitchTo: (page: JSX.Element) => void;\r\n  GoBack: () => void;\r\n  }\r\n  \r\nexport const defaultPageSwitcherState = {\r\n    ActualPage: null,\r\n    SwitchTo: () => {},\r\n    GoBack: () => {},\r\n  };\r\n  \r\n  export const PageSwitcherContext = React.createContext<IPageSwitcherContext>(defaultPageSwitcherState);","import React, { useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { PageSwitcherContext } from '../../../contexts/PageSwitcherContext';\r\n\r\nexport const PageSwitcherComponent: React.FC<Props> = (props: Props) => {\r\n\tconst [actualPage, setActualPage] = useState(props.defaultPage);\r\n\r\n\treturn (\r\n\t\t<PageSwitcherContext.Provider value={{\r\n\t\t\tActualPage: actualPage,\r\n\t\t\tSwitchTo: (page: JSX.Element) => setActualPage(page),\r\n\t\t\tGoBack: () => setActualPage(props.defaultPage),\r\n\t\t}}>\r\n\t\t\t{actualPage}\r\n\t\t</PageSwitcherContext.Provider>\r\n\t);\r\n}","import React from \"react\";\r\nimport { SolidDataset_Type } from \"../constants/SolidDatasetType\";\r\n\r\nexport interface IWorkspaceContext {\r\n    workspace: SolidDataset_Type | null,\r\n    getWorkspace: () => SolidDataset_Type,\r\n    workspaceUrl: string,\r\n    webId: string\r\n  }\r\n  \r\nexport const defaultWorkspaceContext = {\r\n    workspace: null,\r\n    getWorkspace: () => { throw new Error('Workspace not found!') },\r\n    workspaceUrl: \"unknown\",\r\n    webId: \"unknown\"\r\n  };\r\n  \r\nexport const WorkspaceContext = React.createContext<IWorkspaceContext>(defaultWorkspaceContext);","/**\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\n * as part of artifact: [generated-vocab-solidquiz], version: [0.0.1]\n * on 'Wednesday, May 11, 2022 11:14 PM'.\n *\n * Vocabulary built from input: [solidQuiz.ttl].\n *\n * \n    The solidQuiz ontology describes quizzes, quiz results, and their sharing objects.\n    \n */\n\n// We prefix our local variables with underscores to (hopefully!) prevent\n// potential names clashes with terms from vocabularies.\nconst { VocabTerm: _VocabTerm, getLocalStore } = require(\"@inrupt/solid-common-vocab\");\nconst _DataFactory = require(\"@rdfjs/data-model\");\n\nconst { namedNode: _namedNode } = _DataFactory;\n\nfunction _NS(localName) {\n  return _namedNode(`https://solid-quiz.solidcommunity.net/public/voc/SolidQuiz/v1p0/solidQuiz.ttl#${localName}`);\n}\n\n/**\n * \n    The solidQuiz ontology describes quizzes, quiz results, and their sharing objects.\n    \n */\nconst SOLIDQUIZ = {\n  PREFIX: \"solidQuiz\",\n  NAMESPACE: \"https://solid-quiz.solidcommunity.net/public/voc/SolidQuiz/v1p0/solidQuiz.ttl#\",\n  PREFIX_AND_NAMESPACE: { \"solidQuiz\": \"https://solid-quiz.solidcommunity.net/public/voc/SolidQuiz/v1p0/solidQuiz.ttl#\" },\n  NS: _NS,\n\n  // *****************\n  // All the Classes.\n  // *****************\n\n  /**\n   * An quiz is a multiple-choice test made for fun purposes.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  Quiz: new _VocabTerm(\n    _NS(\"Quiz\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`Quiz`, \"en\")\n    .addLabel(`Kvíz`, \"hu\")\n    .addComment(`An quiz is a multiple-choice test made for fun purposes.`, \"en\")\n    .addComment(`A kvíz egy felelet választós feladatsor szórakoztató jelleggel.`, \"hu\"),\n\n  /**\n   * Question for quiz, a quiz should have a few questions.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  Question: new _VocabTerm(\n    _NS(\"Question\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`question`, \"en\")\n    .addLabel(`kérdés`, \"hu\")\n    .addComment(`Question for quiz, a quiz should have a few questions.`, \"en\")\n    .addComment(`Kérdés kvízhez, egy kvíznek tartalmaznia kell kérdéseket.`, \"hu\"),\n\n  /**\n   * Answer for a question. This is mainly an option, might not be the correct answer.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  Answer: new _VocabTerm(\n    _NS(\"Answer\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`answer`, \"en\")\n    .addLabel(`válasz`, \"hu\")\n    .addComment(`Answer for a question. This is mainly an option, might not be the correct answer.`, \"en\")\n    .addComment(`Válasz a kérdésre. A válasz nem feltétlenül helyes, mivel ez egy válaszlehetőség.`, \"hu\"),\n\n  /**\n   * The result of a Quiz.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  QuizResult: new _VocabTerm(\n    _NS(\"QuizResult\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`Quiz result`, \"en\")\n    .addLabel(`Kvíz eredmény`, \"hu\")\n    .addComment(`The result of a Quiz.`, \"en\")\n    .addComment(`Egy kvíz eredménye.`, \"hu\"),\n\n  /**\n   * Question result for quiz result. Indicates the result of a specific question.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  QuestionResult: new _VocabTerm(\n    _NS(\"QuestionResult\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`question result`, \"en\")\n    .addLabel(`kérdés eredménye`, \"hu\")\n    .addComment(`Question result for quiz result. Indicates the result of a specific question.`, \"en\")\n    .addComment(`Kérdés eredménye kvíz eredményéhez. Egy konkrét kérdés eredményét jelöli.`, \"hu\"),\n\n  /**\n   * Solid quiz resource sharing. Shared resources are the quizzes and quiz result.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  Share: new _VocabTerm(\n    _NS(\"Share\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`share`, \"en\")\n    .addLabel(`megosztás`, \"hu\")\n    .addComment(`Solid quiz resource sharing. Shared resources are the quizzes and quiz result.`, \"en\")\n    .addComment(`Solid kvíz erőforrások megosztása. Megoszthatók a kvízek és kvíz eredmények`, \"hu\"),\n\n  /**\n   * Link to a share\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  ShareLink: new _VocabTerm(\n    _NS(\"ShareLink\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`share link`, \"en\")\n    .addLabel(`megosztás hivatkozás`, \"hu\")\n    .addComment(`Link to a share`, \"en\")\n    .addComment(`Hivatkozás egy megosztásra.`, \"hu\"),\n\n\n  // *******************\n  // All the Properties.\n  // *******************\n\n  /**\n   * Relationship between the quiz and the person who created it.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  createdBy: new _VocabTerm(\n    _NS(\"createdBy\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`created by`, \"en\")\n    .addLabel(`készítette`, \"hu\")\n    .addComment(`Relationship between the quiz and the person who created it.`, \"en\")\n    .addComment(`A kapcsolat a kvíz és az alkotója között.`, \"hu\"),\n\n  /**\n   * The relationship between the question and the quiz. An quiz has a few questions.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  quizQuestion: new _VocabTerm(\n    _NS(\"quizQuestion\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`question of the quiz`, \"en\")\n    .addLabel(`kérdés a kvízhez`, \"hu\")\n    .addComment(`The relationship between the question and the quiz. An quiz has a few questions.`, \"en\")\n    .addComment(`Kapcsolat a kérdés és a kvíz között. Egy kvízhez több kérdés kapcsolódik (általában).`, \"hu\"),\n\n  /**\n   * Relationship between the answer and the question. An question has at least two answer options.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  answerOption: new _VocabTerm(\n    _NS(\"answerOption\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`answer option for the question`, \"en\")\n    .addLabel(`válaszlehetőség a kérdésre`, \"hu\")\n    .addComment(`Relationship between the answer and the question. An question has at least two answer options.`, \"en\")\n    .addComment(`A válasz és a kérdés közötti kapcsolat. Egy kérdés legalább két válaszlehetőséggel rendelkezik.`, \"hu\"),\n\n  /**\n   * Relationship between the correct answer and the question.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  correctAnswerOption: new _VocabTerm(\n    _NS(\"correctAnswerOption\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`the correct answer option for the question`, \"en\")\n    .addLabel(`a helyes válaszlehetőség a kérdésre`, \"hu\")\n    .addComment(`Relationship between the correct answer and the question.`, \"en\")\n    .addComment(`A helyes válasz és a kérdés közötti kapcsolat.`, \"hu\"),\n\n  /**\n   * The relationship between the quiz result and the completed quiz.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  quizResultOf: new _VocabTerm(\n    _NS(\"quizResultOf\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`quiz result of`, \"en\")\n    .addLabel(`kvíz eredménye a`, \"hu\")\n    .addComment(`The relationship between the quiz result and the completed quiz.`, \"en\")\n    .addComment(`A kvíz eredménye és a megvalósított kvíz közötti kapcsolat.`, \"hu\"),\n\n  /**\n   * Relationship between the quiz result and the person who created it.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  quizResultCreatedBy: new _VocabTerm(\n    _NS(\"quizResultCreatedBy\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`quiz result created by`, \"en\")\n    .addLabel(`kvíz eredményét készítette`, \"hu\")\n    .addComment(`Relationship between the quiz result and the person who created it.`, \"en\")\n    .addComment(`A kapcsolat a kvíz eredménye és az alkotója között.`, \"hu\"),\n\n  /**\n   * The relationship between the quiz result and the question result, this is the first questions result.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  firstQuestionResult: new _VocabTerm(\n    _NS(\"firstQuestionResult\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`first question result`, \"en\")\n    .addLabel(`első kérdés eredménye`, \"hu\")\n    .addComment(`The relationship between the quiz result and the question result, this is the first questions result.`, \"en\")\n    .addComment(`A kvíz eredménye és a kérdés eredménye közötti kapcsolat, a kvíz első kérdésének eredménye.`, \"hu\"),\n\n  /**\n   * The relationship between two questions result, the domain is the previous and the range is the next.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  nextQuestionResult: new _VocabTerm(\n    _NS(\"nextQuestionResult\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`next question result`, \"en\")\n    .addLabel(`következő kérdés eredménye`, \"hu\")\n    .addComment(`The relationship between two questions result, the domain is the previous and the range is the next.`, \"en\")\n    .addComment(`Kapcsolat két kérdés eredménye között, a domain az előző, a range a következő.`, \"hu\"),\n\n  /**\n   * The relationship between two questions result, the domain is the next and the range is the previous.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  previousQuestionResult: new _VocabTerm(\n    _NS(\"previousQuestionResult\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`previous question result`, \"en\")\n    .addLabel(`előző kérdés eredménye`, \"hu\")\n    .addComment(`The relationship between two questions result, the domain is the next and the range is the previous.`, \"en\")\n    .addComment(`Kapcsolat két kérdés eredménye között, a domain az következő, a range az előző.`, \"hu\"),\n\n  /**\n   * The relationship between the question result and the question.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  questionResultOf: new _VocabTerm(\n    _NS(\"questionResultOf\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`the question for the result`, \"en\")\n    .addLabel(`a kérdés az eredményhez`, \"hu\")\n    .addComment(`The relationship between the question result and the question.`, \"en\")\n    .addComment(`A kérdés eredménye és a kérdés közötti kapcsolat.`, \"hu\"),\n\n  /**\n   * The relationship between the question result and the answer.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  questionResultsAnswer: new _VocabTerm(\n    _NS(\"questionResultsAnswer\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`the answer for the question in the result`, \"en\")\n    .addLabel(`a kérdésre adott válasz az eredményben`, \"hu\")\n    .addComment(`The relationship between the question result and the answer.`, \"en\")\n    .addComment(`A kérdés eredménye és a konkrét válasz közötti kapcsolat.`, \"hu\"),\n\n  /**\n   * The relationship between the shares and resource. You should access the shared resource, but the owner can revert it.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  sharedResource: new _VocabTerm(\n    _NS(\"sharedResource\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`shared resource`, \"en\")\n    .addLabel(`megosztott adat`, \"hu\")\n    .addComment(`The relationship between the shares and resource. You should access the shared resource, but the owner can revert it.`, \"en\")\n    .addComment(`A megosztás és az adat közötti kapcsolat. Az erőforrásnak elérhetőnek kell lennie számodra, the a tulajdonos megvonhatja azt.`, \"hu\"),\n\n  /**\n   * Shared resource's type. Shared types are the type of the quiz or type of quiz result.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  sharedResourceType: new _VocabTerm(\n    _NS(\"sharedResourceType\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`shared resource type`, \"en\")\n    .addLabel(`megosztott adat típusa`, \"hu\")\n    .addComment(`Shared resource's type. Shared types are the type of the quiz or type of quiz result.`, \"en\")\n    .addComment(`A megosztott adat típusa. Megosztás típusa vagy a kvíz típusa vagy a kvíz eredményének típusa.`, \"hu\"),\n\n  /**\n   * The relationship between share link and share.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  shareLinksLink: new _VocabTerm(\n    _NS(\"shareLinksLink\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`share link's link`, \"en\")\n    .addLabel(`megosztás hivatkozás hivatkozása`, \"hu\")\n    .addComment(`The relationship between share link and share.`, \"en\")\n    .addComment(`A megosztás hivatkozása és a megosztás közötti kapcsolat.`, \"hu\"),\n\n  /**\n   * The relationship between share link and individual / person, who got the share.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  shareLinksIndividual: new _VocabTerm(\n    _NS(\"shareLinksIndividual\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`share link's individual`, \"en\")\n    .addLabel(`megosztás hivatkozás egyéne`, \"hu\")\n    .addComment(`The relationship between share link and individual / person, who got the share.`, \"en\")\n    .addComment(`A megosztás hivatkozása és a megosztást fogadó egyén / személy kapcsolata.`, \"hu\"),\n\n}\n\nexport default SOLIDQUIZ;\n","import SOLIDQUIZ from \"../helpers/SOLIDQUIZ\";\r\n\r\nexport const TITLE = SOLIDQUIZ.NAMESPACE + \"title\";\r\nexport const CREATED = SOLIDQUIZ.NAMESPACE + \"created\";\r\nexport const FIRST_QUESTION = SOLIDQUIZ.NAMESPACE + \"firstQuestion\";\r\nexport const MULTI_LANGUAGE_SUPPORT = SOLIDQUIZ.NAMESPACE + \"multiLanguageSupport\";\r\nexport const QUESTION_TEXT = SOLIDQUIZ.NAMESPACE + \"questionText\";\r\nexport const ANSWER_TEXT = SOLIDQUIZ.NAMESPACE + \"answerText\";\r\nexport const NUMBER_OF_QUESTIONS = SOLIDQUIZ.NAMESPACE + \"numberOfQuestions\";\r\nexport const QUIZ_RESULT_CREATED = SOLIDQUIZ.NAMESPACE + \"quizResultCreated\";\r\nexport const SUCCESS_OF_QUESTION_RESULT = SOLIDQUIZ.NAMESPACE + \"successOfQuestionResult\";\r\nexport const NUMBER_OF_CORRECT_ANSWERS = SOLIDQUIZ.NAMESPACE + \"numberOfCorrectAnswers\";\r\nexport const SHARE_CREATED = SOLIDQUIZ.NAMESPACE + \"shareCreated\";","import { getStringNoLocale, getStringWithLocale, Thing } from '@inrupt/solid-client';\r\nimport { MultiLangText } from '../models/MultiLangText';\r\n\r\nexport function getString(thing: Thing, propertyUri: string, multiLangSupport: boolean, lang: string): string {\r\n    let str: string | null = null;\r\n\r\n    if (multiLangSupport) {\r\n        str = getStringWithLocale(thing, propertyUri, lang);\r\n    }\r\n    else{\r\n        str = getStringNoLocale(thing, propertyUri);\r\n    }\r\n\r\n    return str ?? \"error\";\r\n}\r\n\r\nexport function getMutliLang(thing: Thing, propertyUri: string, multiLangSupport: boolean, lang: string): MultiLangText {\r\n    if (multiLangSupport) {\r\n        const textEn = getStringWithLocale(thing, propertyUri, 'en') ?? \"error\";\r\n        const textHu = getStringWithLocale(thing, propertyUri, 'hu') ?? \"error\";\r\n\r\n        return { textEn, textHu };\r\n    }\r\n    else{\r\n        const text = getStringNoLocale(thing, propertyUri) ?? \"error\";\r\n\r\n        if (lang === 'hu') {\r\n            return { textEn: \"\", textHu: text };\r\n        }\r\n        else{\r\n            return { textEn: text, textHu: \"\" };\r\n        }\r\n    }\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { getBoolean } from '@inrupt/solid-client';\r\nimport { MULTI_LANGUAGE_SUPPORT, TITLE } from '../../../../../constants/SolidQuizMissingValues';\r\nimport { TranslateContext } from '../../../../../contexts/TranslateContext';\r\nimport { getString } from '../../../../../helpers/LangReader';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nexport const QuizBtn: React.FC<Props> = (props: Props) => {\r\n\tconst { lang } = useContext(TranslateContext);\r\n\tconst [quizTitle, setQuizTitle] = useState<string>(\"\");\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst multiLangSupport = getBoolean(props.datasetAndThing.thing, MULTI_LANGUAGE_SUPPORT);\r\n\r\n\t\tlet title = getString(props.datasetAndThing.thing, TITLE, multiLangSupport ?? false, lang);\r\n\r\n\t\tsetQuizTitle(title);\r\n\t}, [props.datasetAndThing.thing, lang]);\r\n\r\n\treturn (\r\n\t\t\t<Button variant=\"secondary\" size=\"lg\" onClick={() => props.onQuizSelected(props.datasetAndThing)} >{quizTitle}</Button>\r\n\t);\r\n}","import { createSolidDataset, deleteSolidDataset, getSolidDataset, getSourceUrl, getThing, getThingAll, getUrl, saveSolidDatasetAt, Thing, Url, UrlString } from \"@inrupt/solid-client\";\r\nimport { RDF } from '@inrupt/vocab-common-rdf';\r\nimport { WS } from \"@inrupt/vocab-solid\";\r\nimport { SOLID_QUIZ_WORKSPACE } from \"../constants/DefaultValues\";\r\nimport { SolidFetch_Type, SolidDataset_Type } from \"../constants/SolidDatasetType\";\r\n  \r\nexport async function getProfileThing(webId: string, fetch: SolidFetch_Type): Promise<Thing> {\r\n  const profileDataset = await getSolidDataset(webId, {\r\n    fetch: fetch,\r\n  });\r\n  const profileThing = getThing(profileDataset, webId);\r\n\r\n  if (profileThing !== null) {\r\n    return profileThing;\r\n  }\r\n  \r\n  throw new Error('Fetching profile failed!');\r\n}\r\n\r\nexport function getWorkSpaceLocation(profileThing: Thing): string {\r\n  const podRoot = getUrl(profileThing, WS.storage);\r\n\r\n  if (podRoot === null) {\r\n    throw new Error('Determining pod root failed!');\r\n  }\r\n\r\n  return `${podRoot}${SOLID_QUIZ_WORKSPACE}`;\r\n}\r\n\r\nexport async function getOrCreateWorkSpace(workspaceUri: string, fetch: SolidFetch_Type): Promise<SolidDataset_Type> {\r\n    try {\r\n      const workspace = await getSolidDataset(workspaceUri, { fetch });\r\n      return workspace;\r\n    } catch (error: any) {\r\n      if (error.statusCode === 404) {\r\n        const workspace = await saveSolidDatasetAt(\r\n          workspaceUri,\r\n          createSolidDataset(),\r\n          {\r\n            fetch,\r\n          }\r\n        );\r\n        return workspace;\r\n      }\r\n\r\n      console.log(error);\r\n    }\r\n\r\n    throw new Error('unkown error in getOrCreateWorkSpace');\r\n  }\r\n  \r\nexport async function deleteDataset(dataset: SolidDataset_Type, fetch: SolidFetch_Type) {\r\n    const uri = getSourceUrl(dataset);\r\n\r\n    deleteSolidDataset(uri, { fetch });\r\n  }\r\n\r\nexport function getFirstThingByRDFType(workspace: SolidDataset_Type, rdfType: Url | UrlString): Thing | null {\r\n    const allThings = getThingAll(workspace);\r\n\r\n    for (let i = 0; i < allThings.length; i++) {\r\n        const thing = allThings[i];\r\n        const typeUrl = getUrl(thing, RDF.type);\r\n        if (typeUrl === rdfType) {\r\n            return thing;\r\n        }\r\n    }\r\n\r\n    return null;    \r\n}\r\n\r\nexport function getAllThingByRDFType(workspace: SolidDataset_Type, rdfType: Url | UrlString): Array<Thing> {\r\n    const allThings = getThingAll(workspace);\r\n    let result: Array<Thing> = [];\r\n\r\n    allThings.forEach(thing => {\r\n        const typeUrl = getUrl(thing, RDF.type);\r\n        if (typeUrl === rdfType) {\r\n            result.push(thing);\r\n        }\r\n    });\r\n\r\n    return result;    \r\n}\r\n\r\nexport function getAllThingByUris(workspace: SolidDataset_Type, uris: string[]): Array<Thing> {\r\n    let result: Array<Thing> = [];\r\n\r\n    uris.forEach(uri => {\r\n        const thing = getThing(workspace, encodeURI(uri));\r\n\r\n        if (thing !== null) {\r\n          result.push(thing);\r\n        }\r\n    });\r\n\r\n    return result;    \r\n}\r\n","import { getSolidDataset, saveSolidDatasetAt, createSolidDataset, setThing, createThing, buildThing, hasAccessibleAcl, createAcl, setPublicResourceAccess, saveAclFor, getSourceUrl, setAgentResourceAccess } from '@inrupt/solid-client';\r\nimport { SHARES_CONTAINER_DATASET, SOLID_QUIZ_POD_SHARES_DATASET } from '../constants/DefaultValues';\r\nimport { SolidDataset_Type, SolidFetch_Type } from '../constants/SolidDatasetType';\r\nimport SOLIDQUIZ from './../helpers/SOLIDQUIZ';\r\nimport { Thing } from '@inrupt/solid-client';\r\nimport { RDF } from '@inrupt/vocab-common-rdf';\r\nimport { SHARE_CREATED } from '../constants/SolidQuizMissingValues';\r\nimport { getThingAll } from '@inrupt/solid-client';\r\nimport { getUrl } from '@inrupt/solid-client';\r\nimport { getThing } from '@inrupt/solid-client';\r\n\r\nexport async function publishQuiz(quizUri: string): Promise<Thing> {\r\n    let publicSharesDataset = await getOrCreateShares(SOLID_QUIZ_POD_SHARES_DATASET);\r\n    const newPublicShareThing = createPublishedThing(quizUri, SOLIDQUIZ.Quiz.value);\r\n\r\n    publicSharesDataset = setThing(publicSharesDataset, newPublicShareThing);\r\n\r\n    const updatedDataset = await saveSolidDatasetAt(SOLID_QUIZ_POD_SHARES_DATASET, publicSharesDataset);\r\n\r\n    const savedThingUri = getSavedShareThingsUri(newPublicShareThing, updatedDataset);\r\n    const savedThing = getThing(updatedDataset, savedThingUri);\r\n\r\n    if (savedThing === null) {\r\n        throw new Error(\"creating share failed, cannot load it\");\r\n    }\r\n\r\n    return savedThing;\r\n}\r\n\r\nexport async function shareQuiz(friendsShareSpace: string, quizUri: string): Promise<Thing> {\r\n    const friendsSharesDataset = await tryGetFirendsShareDataset(friendsShareSpace);\r\n    const newPublicShareThing = createPublishedThing(quizUri, SOLIDQUIZ.Quiz.value);\r\n\r\n    let publicSharesDataset = setThing(friendsSharesDataset, newPublicShareThing);\r\n\r\n    const updatedDataset = await saveSolidDatasetAt(friendsShareSpace, publicSharesDataset);\r\n\r\n    const savedThingUri = getSavedShareThingsUri(newPublicShareThing, updatedDataset);\r\n    const savedThing = getThing(updatedDataset, savedThingUri);\r\n\r\n    if (savedThing === null) {\r\n        throw new Error(\"creating share failed, cannot load it\");\r\n    }\r\n\r\n    return savedThing;\r\n}\r\n\r\nexport async function publishQuizResult(quizResultUri: string): Promise<Thing> {\r\n    let publicSharesDataset = await getOrCreateShares(SOLID_QUIZ_POD_SHARES_DATASET);\r\n    const newPublicShareThing = createPublishedThing(quizResultUri, SOLIDQUIZ.QuizResult.value);\r\n\r\n    publicSharesDataset = setThing(publicSharesDataset, newPublicShareThing);\r\n\r\n    const updatedDataset = await saveSolidDatasetAt(SOLID_QUIZ_POD_SHARES_DATASET, publicSharesDataset);\r\n\r\n    const savedThingUri = getSavedShareThingsUri(newPublicShareThing, updatedDataset);\r\n    const savedThing = getThing(updatedDataset, savedThingUri);\r\n\r\n    if (savedThing === null) {\r\n        throw new Error(\"creating share failed, cannot load it\");\r\n    }\r\n\r\n    return savedThing;\r\n}\r\n\r\nexport async function getPublishedShares(shareTypeFilter: string): Promise<Thing[]> {\r\n    const publicSharesDataset = await tryGetShares(SOLID_QUIZ_POD_SHARES_DATASET);\r\n\r\n    if (publicSharesDataset === null) {\r\n        console.log(\"Public shares not found, returns empty array!\");\r\n        return [];\r\n    }\r\n\r\n    const publicSharesThings = getThingAll(publicSharesDataset);\r\n\r\n    const rv: Thing[] = [];\r\n\r\n    publicSharesThings.forEach(thing => {\r\n        const shareType = getUrl(thing, SOLIDQUIZ.sharedResourceType.value);\r\n\r\n        if (shareType === shareTypeFilter) {\r\n            rv.push(thing);\r\n        }\r\n    });\r\n\r\n    return rv;\r\n}\r\n\r\nexport async function getLocalShares(sharesDatasetUri: string, shareTypeFilter: string, fetch: SolidFetch_Type): Promise<Thing[]> {\r\n    const sharesDataset = await getSolidDataset(sharesDatasetUri, { fetch });\r\n    const localSharesThings = getThingAll(sharesDataset);\r\n\r\n    const rv: Thing[] = [];\r\n\r\n    localSharesThings.forEach(thing => {\r\n        const shareType = getUrl(thing, SOLIDQUIZ.sharedResourceType.value);\r\n\r\n        if (shareType === shareTypeFilter) {\r\n            rv.push(thing);\r\n        }\r\n    });\r\n\r\n    return rv;\r\n}\r\n\r\nexport function getSharesDataset(workspaceUri: string) {\r\n    return `${workspaceUri}${SHARES_CONTAINER_DATASET}`;\r\n}\r\n\r\nexport async function createSharesIndexForPublic(workspaceUri: string, webId:string, fetch: SolidFetch_Type) {\r\n    const sharesUri = getSharesDataset(workspaceUri);\r\n\r\n    if (await isLocalSharesExists(sharesUri)) {\r\n        return;\r\n    }\r\n\r\n    const sharesDataset = await saveSolidDatasetAt(sharesUri, createSolidDataset(), {fetch});\r\n\r\n    if (!hasAccessibleAcl(sharesDataset)) {\r\n        throw new Error(\"Has no control right!\");\r\n    }\r\n\r\n    const ownerAcl = createAcl(sharesDataset);\r\n\r\n    const ownerUpdatedAcl = setAgentResourceAccess(\r\n        ownerAcl,\r\n        webId,\r\n        { read: true, append: true, write: true, control: true }\r\n      );\r\n      \r\n    // save the new public Acl:\r\n    await saveAclFor(sharesDataset, ownerUpdatedAcl, { fetch });\r\n\r\n    const publicAcl = createAcl(sharesDataset);\r\n\r\n    const updatedPublicAcl = setPublicResourceAccess(\r\n        publicAcl,\r\n        { read: true, append: true, write: true, control: false }\r\n      );\r\n      \r\n      // save the new public Acl:\r\n      await saveAclFor(sharesDataset, updatedPublicAcl, { fetch });\r\n}\r\n\r\n\r\n//privates\r\nasync function getOrCreateShares(uri: string): Promise<SolidDataset_Type> {\r\n    try {\r\n      const sharesDataset = await getSolidDataset(uri);\r\n      return sharesDataset;\r\n    } catch (error: any) {\r\n      if (error.statusCode === 404) {\r\n        const sharesDataset = await saveSolidDatasetAt(\r\n            uri,\r\n            createSolidDataset()\r\n        );\r\n        return sharesDataset;\r\n      }\r\n\r\n      console.log(error);\r\n    }\r\n\r\n    throw new Error('error.share.notFoundSharesGlobal');\r\n}\r\n\r\nasync function tryGetShares(uri: string): Promise<SolidDataset_Type | null> {\r\n    try {\r\n        const shares = await getOrCreateShares(uri);\r\n\r\n        return shares;\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function isLocalSharesExists(uri: string): Promise<boolean> {\r\n    try {\r\n      await getSolidDataset(uri);\r\n      return true;\r\n    } catch (error: any) {\r\n        return false;\r\n    }\r\n}\r\n\r\nfunction createPublishedThing(sharedResourceUri: string, sharedType: string): Thing {\r\n    const shareThing = buildThing(createThing())\r\n    .addUrl(RDF.type, SOLIDQUIZ.Share.value)\r\n    .addDatetime(SHARE_CREATED, new Date())\r\n    .addUrl(SOLIDQUIZ.sharedResource.value, sharedResourceUri)\r\n    .addUrl(SOLIDQUIZ.sharedResourceType.value, sharedType)\r\n    .build();\r\n\r\n    return shareThing;\r\n}\r\n\r\nfunction getSavedShareThingsUri(localThing: Thing, updatedDataset: SolidDataset_Type): string {\r\n    const indexOfSeparator = localThing.url.lastIndexOf('/');\r\n\r\n    const name = localThing.url.substring(indexOfSeparator + 1);\r\n\r\n    const datasetUri = getSourceUrl(updatedDataset);\r\n\r\n    return `${datasetUri}#${name}`;\r\n}\r\n\r\nasync function tryGetFirendsShareDataset(friendsShareSpace: string): Promise<SolidDataset_Type> {    \r\n    try {\r\n        const friendsSharesDataset = await getSolidDataset(friendsShareSpace);\r\n\r\n        return friendsSharesDataset;\r\n    } catch (error: any) {\r\n        if (error.statusCode === 401 || error.statusCode === 403 || error.statusCode === 404) {\r\n            throw new Error(\"error.share.notFoundShares\");\r\n        }\r\n\r\n        throw error;\r\n    }\r\n}\r\n","import { addInteger, addUrl, buildThing, createSolidDataset, createThing, getSolidDataset, getSourceUrl, getThing, saveSolidDatasetAt, setThing, ThingBuilder, ThingLocal } from '@inrupt/solid-client';\r\nimport { RDF } from '@inrupt/vocab-common-rdf';\r\nimport { QUIZZES_CONTAINER } from '../constants/DefaultValues';\r\nimport { CREATED, MULTI_LANGUAGE_SUPPORT, NUMBER_OF_QUESTIONS, TITLE } from '../constants/SolidQuizMissingValues';\r\nimport { SolidDataset_Type, SolidFetch_Type } from '../constants/SolidDatasetType';\r\nimport SOLIDQUIZ from '../helpers/SOLIDQUIZ';\r\nimport { QuizFormModel } from '../models/QuizFormModel';\r\nimport { QuizContainer } from './../models/QuizContainer';\r\nimport { QuestionContainer } from './../models/QuestionContainer';\r\nimport { NestedLocalDataset } from '../models/NestedLocalDataset';\r\nimport { DatasetAndThing } from '../models/DatasetAndThing';\r\n\r\nexport function createQuizContainer(quizName: string, quizFormModel: QuizFormModel, webId: string): QuizContainer {\r\n    const quizThingBuilder = buildThing(createThing({ name: quizName }))\r\n      .addUrl(RDF.type, SOLIDQUIZ.Quiz.value)\r\n      .addDatetime(CREATED, new Date())\r\n      .addUrl(SOLIDQUIZ.createdBy.value, webId)\r\n      .addBoolean(MULTI_LANGUAGE_SUPPORT, quizFormModel.multiLang);\r\n\r\n    addTitlesToQuizBasedOnLang(quizThingBuilder, quizFormModel);\r\n\r\n    const quizThing = quizThingBuilder.build();\r\n\r\n    return { quizName, quizFormModel, quiz: quizThing, questions: [] };\r\n}\r\n\r\n//quiz resource name, contained inside the pod, when saving will get file extension: .ttl\r\nexport function createQuizResourceName(quizFormModel: QuizFormModel): string {\r\n  return new Date().getTime().toString();\r\n    /*const trimedEn = quizFormModel.quizTitleEn.replace(/\\s/g, \"\");\r\n    const trimedHu = quizFormModel.quizTitleHu.replace(/\\s/g, \"\");\r\n    return `${trimedEn}_${trimedHu}`;*/\r\n}\r\n\r\nexport function getQuizzesContainer(workspaceUri: string) {\r\n    return `${workspaceUri}${QUIZZES_CONTAINER}`;\r\n}\r\n\r\nexport function getSpecificQuizUri(workspaceUri: string, quizTitle: string) {\r\n    return `${getQuizzesContainer(workspaceUri)}${quizTitle}/${quizTitle}.ttl`;\r\n}\r\n\r\nexport async function createQuizzesContainer(workspaceUri: string, fetch: SolidFetch_Type) {\r\n    const quizzesWorkspace = getQuizzesContainer(workspaceUri);\r\n\r\n    if (await isQuizzesExists(quizzesWorkspace)) {\r\n        return;\r\n    }\r\n\r\n    await saveSolidDatasetAt(quizzesWorkspace, createSolidDataset(), { fetch });\r\n}\r\n\r\nexport async function checkQuizTitleIsAlreadyReserved(quizTitle: string, workspaceUri: string, fetch: SolidFetch_Type): Promise<boolean> {\r\n  const quizUrl = getSpecificQuizUri(workspaceUri, quizTitle);\r\n  try {\r\n    await getSolidDataset(quizUrl, { fetch });\r\n    return true;\r\n  } catch (error: any) {\r\n    if (error.statusCode === 404) {\r\n      return false;\r\n    }\r\n\r\n    console.log(error);\r\n  }\r\n\r\n  throw new Error('unkown error in checkQuizTitleIsAlreadyReserved');\r\n}\r\n\r\nexport async function saveNewQuiz(quizContainer: QuizContainer, workspaceUri: string, fetch: SolidFetch_Type): Promise<DatasetAndThing> {\r\n  const quizUrl = getSpecificQuizUri(workspaceUri, quizContainer.quizName);\r\n\r\n  addQuestionsToQuiz(quizContainer, quizUrl);\r\n\r\n\r\n  let localeDataset = createSolidDataset();\r\n  localeDataset = setThing(localeDataset, quizContainer.quiz);\r\n  const nestedDateset = { localeDataset };\r\n  addQuestionsToDataset(nestedDateset, quizContainer);\r\n  \r\n  const updatedDataset = await saveSolidDatasetAt(quizUrl, nestedDateset.localeDataset, {\r\n    fetch: fetch,\r\n  });\r\n  \r\n  const savedThingUri = getSavedQuizThingsUri(quizContainer.quizName, updatedDataset);\r\n  const savedThing = getThing(updatedDataset, savedThingUri);\r\n\r\n  if (savedThing === null) {\r\n      throw new Error(\"creating share failed, cannot load it\");\r\n  }\r\n\r\n  return { dataset: updatedDataset, thing: savedThing };\r\n}\r\n\r\n\r\n//privates\r\nfunction addTitlesToQuizBasedOnLang(quizThingBuilder: ThingBuilder<ThingLocal>, quizFormModel: QuizFormModel) {\r\n    if (quizFormModel.multiLang) {\r\n        quizThingBuilder.addStringWithLocale(TITLE, quizFormModel.quizTitleEn, \"en\")\r\n                        .addStringWithLocale(TITLE, quizFormModel.quizTitleHu, \"hu\");\r\n    }\r\n    else if (quizFormModel.lang === 'hu') {\r\n        quizThingBuilder.addStringNoLocale(TITLE, quizFormModel.quizTitleHu);\r\n    }\r\n    else{\r\n        quizThingBuilder.addStringNoLocale(TITLE, quizFormModel.quizTitleEn);\r\n    }\r\n}\r\n\r\nfunction addQuestionsToQuiz(quizContainer: QuizContainer, quizUrl: string){\r\n  for (let i = 0; i < quizContainer.questions.length; i++) {\r\n    const questionContainer = quizContainer.questions[i];\r\n    \r\n    const questionUrl = `${quizUrl}#${questionContainer.questionName}`;\r\n\r\n    quizContainer.quiz = addUrl(quizContainer.quiz, SOLIDQUIZ.quizQuestion.value, questionUrl);\r\n  }\r\n\r\n  quizContainer.quiz = addInteger(quizContainer.quiz, NUMBER_OF_QUESTIONS, quizContainer.questions.length);\r\n}\r\n\r\nfunction addQuestionsToDataset(nestedDataset: NestedLocalDataset, quizContainer: QuizContainer) {\r\n  for (let i = 0; i < quizContainer.questions.length; i++) {\r\n    const questionContainer = quizContainer.questions[i];\r\n    \r\n    nestedDataset.localeDataset = setThing(nestedDataset.localeDataset, questionContainer.question);\r\n    addAnswersToDataset(nestedDataset, questionContainer);\r\n  }\r\n}\r\n\r\nfunction addAnswersToDataset(nestedDataset: NestedLocalDataset, questionContainer: QuestionContainer) {\r\n  for (let i = 0; i < questionContainer.answers.length; i++) {\r\n    const answer = questionContainer.answers[i].answer;\r\n    \r\n    nestedDataset.localeDataset = setThing(nestedDataset.localeDataset, answer);\r\n  }\r\n}\r\n\r\nfunction getSavedQuizThingsUri(quizName: string, updatedDataset: SolidDataset_Type): string {\r\n    const datasetUri = getSourceUrl(updatedDataset);\r\n\r\n    return `${datasetUri}#${quizName}`;\r\n}\r\n\r\nasync function isQuizzesExists(uri: string): Promise<boolean> {\r\n    try {\r\n      await getSolidDataset(uri);\r\n      return true;\r\n    } catch (error: any) {\r\n        return false;\r\n    }\r\n}\r\n","import { DatasetAndThing } from \"../models/DatasetAndThing\";\r\nimport { SolidDataset_Type, SolidFetch_Type } from \"../constants/SolidDatasetType\";\r\nimport * as workspaceService from '../services/WorkspaceService';\r\nimport SOLIDQUIZ from \"./SOLIDQUIZ\";\r\nimport * as sharesService from '../services/SharesService';\r\nimport * as quizService from '../services/QuizService';\r\nimport { getSolidDataset, getSourceUrl, getThing, getUrl, getUrlAll, Thing } from \"@inrupt/solid-client\";\r\nimport { LDP, RDF } from \"@inrupt/vocab-common-rdf\";\r\n\r\nexport async function getOwnQuizzes(workspaceUri: string, fetch: SolidFetch_Type): Promise<SolidDataset_Type[]> {\r\n    const containerUri = quizService.getQuizzesContainer(workspaceUri);\r\n    const containerDataset = await getSolidDataset(containerUri, { fetch });\r\n    const datasetThing = getThing(containerDataset, containerUri);\r\n\r\n    if (datasetThing === null) {\r\n        console.log(\"Cannot found container: \" + containerDataset);\r\n        return [];\r\n    }\r\n\r\n    const containedResources = getUrlAll(datasetThing, LDP.contains);\r\n\r\n    const quizDatasets = await getQuizDatasets(containedResources, fetch);\r\n\r\n    return quizDatasets;\r\n}\r\n\r\nexport function getQuizzesFromDatasets(quizDatasets: SolidDataset_Type[]): DatasetAndThing[] {\r\n    const quizThings: DatasetAndThing[] = [];\r\n\r\n    for (let i = 0; i < quizDatasets.length; i++) {\r\n        const quizDataset = quizDatasets[i];\r\n        \r\n        const quizThing = workspaceService.getFirstThingByRDFType(quizDataset, SOLIDQUIZ.Quiz.value);\r\n\r\n        if (quizThing !== null) {\r\n            quizThings.push({ dataset: quizDataset, thing: quizThing });\r\n        }\r\n    }\r\n\r\n    return quizThings;\r\n}\r\n\r\nexport async function getPublicDatasets(): Promise<SolidDataset_Type[]> {\r\n    const publicQuizThings = await sharesService.getPublishedShares(SOLIDQUIZ.Quiz.value);\r\n\r\n    const rv: SolidDataset_Type[] = [];\r\n\r\n    const fetchedDatasets = await tryGetSharedDatasetsAtOnce(publicQuizThings, undefined);\r\n\r\n    for (let i = 0; i < fetchedDatasets.length; i++) {\r\n        const dataset = fetchedDatasets[i];\r\n        \r\n        if (dataset !== null) {\r\n            rv.push(dataset);\r\n        }\r\n    }\r\n\r\n    return rv;\r\n}\r\n\r\nexport async function getLocalSharesDatasets(workspaceUri: string, fetch: SolidFetch_Type): Promise<SolidDataset_Type[]> {\r\n    const localSharesUri = sharesService.getSharesDataset(workspaceUri);\r\n    const localSharesQuizThings = await sharesService.getLocalShares(localSharesUri, SOLIDQUIZ.Quiz.value, fetch);\r\n\r\n    const rv: SolidDataset_Type[] = [];\r\n\r\n    const fetchedDatasets = await tryGetSharedDatasetsAtOnce(localSharesQuizThings, fetch);\r\n\r\n    for (let i = 0; i < fetchedDatasets.length; i++) {\r\n        const dataset = fetchedDatasets[i];\r\n        \r\n        if (dataset !== null) {\r\n            rv.push(dataset);\r\n        }\r\n    }\r\n\r\n    return rv;\r\n}\r\n\r\nexport function mergeQuizzes(localResults: SolidDataset_Type[], publicSharesResults: SolidDataset_Type[], localharesResults: SolidDataset_Type[]): SolidDataset_Type[] {    \r\n    const rv: SolidDataset_Type[] = [...localResults];\r\n\r\n    publicSharesResults.forEach(publisResult => {\r\n        const conflict = rv.find(item => {\r\n            const publishedUri = getSourceUrl(publisResult);\r\n            const localUri = getSourceUrl(item);\r\n\r\n            return publishedUri === localUri;\r\n        });\r\n\r\n        if (conflict === undefined) {\r\n            rv.push(publisResult);\r\n        }\r\n    });\r\n\r\n    localharesResults.forEach(localShareResult => {\r\n        const conflict = rv.find(item => {\r\n            const publishedUri = getSourceUrl(localShareResult);\r\n            const localUri = getSourceUrl(item);\r\n\r\n            return publishedUri === localUri;\r\n        });\r\n\r\n        if (conflict === undefined) {\r\n            rv.push(localShareResult);\r\n        }\r\n    });\r\n\r\n    return rv;\r\n}\r\n\r\nasync function tryGetDataset(datasetUri: string, fetch: SolidFetch_Type | undefined): Promise<SolidDataset_Type | null> {\r\n    try {        \r\n        let dataset: SolidDataset_Type | null = null;\r\n\r\n        if (fetch === undefined) {\r\n            dataset = await getSolidDataset(datasetUri);\r\n        }\r\n        else {\r\n            dataset = await getSolidDataset(datasetUri, { fetch });\r\n        }\r\n\r\n        return dataset;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nasync function getQuizDatasets(quizContainerContainedUris: string[], fetch: SolidFetch_Type): Promise<SolidDataset_Type[]> {\r\n    const rv: SolidDataset_Type[] = [];\r\n\r\n    //fetch together\r\n    const promiseList: Promise<SolidDataset_Type | null>[] = [];\r\n    for (let i = 0; i < quizContainerContainedUris.length; i++) {\r\n        const quizUri = tryGetQuizUri(quizContainerContainedUris[i]);\r\n\r\n        if (quizUri !== null) {\r\n            promiseList.push(tryGetQuizDataset(quizUri, fetch));\r\n        }\r\n    }    \r\n    const fetchedPromises = await Promise.all(promiseList);\r\n\r\n    for (let i = 0; i < fetchedPromises.length; i++) {\r\n        const promiseResult = fetchedPromises[i];\r\n           \r\n        if (promiseResult !== null) {\r\n            rv.push(promiseResult); \r\n        }\r\n    }\r\n\r\n    return rv;\r\n}\r\n\r\nfunction tryGetQuizUri(uri: string): string | null {\r\n    if (!uri.endsWith('/')) {\r\n        return null;\r\n    }\r\n\r\n    const lastWord = getLastWordFromUri(uri);\r\n\r\n    return `${uri}${lastWord}.ttl#${lastWord}`;\r\n}\r\n\r\nfunction getLastWordFromUri(uri: string) {\r\n    uri = uri.substring(0, uri.length - 1);\r\n\r\n    const indexOfLast = uri.lastIndexOf('/');\r\n\r\n    const uriLastWord = uri.substring(indexOfLast + 1);\r\n\r\n    return uriLastWord;\r\n}\r\n\r\nasync function tryGetQuizDataset(quizUri: string, fetch: SolidFetch_Type): Promise<SolidDataset_Type | null> {\r\n    try {\r\n        const dataset = await getSolidDataset(quizUri, { fetch });\r\n\r\n        if (validateDatasetForQuizType(quizUri, dataset)) {\r\n            return dataset;\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction validateDatasetForQuizType(quizUri: string, dataset: SolidDataset_Type): boolean {\r\n    const quizThing = getThing(dataset, quizUri);\r\n\r\n    if (quizThing === null) {\r\n        return false;\r\n    }\r\n\r\n    const typeUrls = getUrlAll(quizThing, RDF.type);\r\n  \r\n    const quizTypeUrl = typeUrls.find((item) => item === SOLIDQUIZ.Quiz.value);\r\n\r\n    return quizTypeUrl !== undefined;\r\n}\r\n\r\nasync function tryGetSharedDatasetsAtOnce(sharedQuizThings: Thing[], fetch: SolidFetch_Type | undefined) {\r\n    \r\n    //fetch together\r\n    const promises: Promise<SolidDataset_Type | null>[] = [];\r\n    for (let i = 0; i < sharedQuizThings.length; i++) {\r\n        const thing = sharedQuizThings[i];\r\n        \r\n        const quizDatasetUri = getUrl(thing, SOLIDQUIZ.sharedResource.value) ?? \"error\";\r\n\r\n        promises.push(tryGetDataset(quizDatasetUri, fetch));\r\n    }\r\n    const fetchedPromises = await Promise.all(promises);\r\n\r\n    return fetchedPromises;\r\n}\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { QuizBtn } from './quizBtn';\r\nimport { getQuizzesFromDatasets } from '../../../../helpers/QuizListHelper';\r\nimport { TranslateContext } from '../../../../contexts/TranslateContext';\r\n\r\nexport const QuizList: React.FC<Props> = (props: Props) => {\r\n\tconst { t } = useContext(TranslateContext);\t\r\n\tconst [quizBtns, setQuizBtns] = useState<JSX.Element[]>([]);\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst quizData = getQuizzesFromDatasets(props.quizDatasets);\r\n\r\n\t\tsetQuizBtns(\r\n\t\t\tquizData.map((datasetAndThing, indx) => \r\n\t\t\t\t<QuizBtn key={indx} datasetAndThing={datasetAndThing} onQuizSelected={props.onQuizSelected} />)\r\n\t\t);\r\n\t}, [props.quizDatasets, props.onQuizSelected]);\r\n\r\n\tif (quizBtns.length === 0) {\r\n\t\treturn <h2 className='empty-list-style'>{t(\"page.common.list.empty\")}</h2>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='d-grid gap-3'>\r\n\t\t\t{quizBtns}\r\n\t\t</div>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { useSession } from '@inrupt/solid-ui-react';\r\nimport { WorkspaceContext } from '../../../contexts/WorkspaceContext';\r\nimport { SolidDataset_Type } from '../../../constants/SolidDatasetType';\r\nimport { SpinnerContext } from '../../../contexts/SpinnerContext';\r\nimport { QuizList } from './quizList';\r\nimport { getLocalSharesDatasets, getOwnQuizzes, getPublicDatasets, mergeQuizzes } from '../../../helpers/QuizListHelper';\r\nimport { PageSwitcherContext } from '../../../contexts/PageSwitcherContext';\r\nimport { Button } from 'react-bootstrap';\r\nimport { TranslateContext } from '../../../contexts/TranslateContext';\r\n\r\nexport const QuizListLoader: React.FC<Props> = (props: Props) => {\r\n\tconst { t } = useContext(TranslateContext);\r\n\tconst { session } = useSession();\r\n\tconst { workspaceUrl } = useContext(WorkspaceContext);\r\n\tconst { SpinAround } = useContext(SpinnerContext);\r\n\tconst { GoBack } = useContext(PageSwitcherContext);\r\n\tconst [quizDatasets, setQuizDatasets] = useState<SolidDataset_Type[]>([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tSpinAround(async () => {\r\n\t\t\t//load locales\r\n\t\t\tconst fetchedQuizDatasets = await getOwnQuizzes(workspaceUrl, session.fetch);\r\n\r\n\t\t\t//load public shares\r\n\t\t\tconst fetchedPublicQuizDatasets = await getPublicDatasets();\r\n\r\n\t\t\t//load local shares\r\n\t\t\tconst fetchedLocalSharesQuizDatasets = await getLocalSharesDatasets(workspaceUrl, session.fetch);\r\n\r\n\t\t\t//merge\r\n\t\t\tconst mergedQuizDatasets = mergeQuizzes(fetchedQuizDatasets, fetchedPublicQuizDatasets, fetchedLocalSharesQuizDatasets);\r\n\t\r\n\t\t\tsetQuizDatasets(mergedQuizDatasets);\r\n\t\t});\t\r\n\t}, [workspaceUrl, session.fetch, SpinAround]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<QuizList quizDatasets={quizDatasets} onQuizSelected={props.onQuizSelected} />\r\n\r\n\t\t\t<Button variant='light' className='back-btn' onClick={() => GoBack()}>{t(\"page.common.back\")}</Button>\r\n\t\t</>\r\n\t);\r\n}","import React from \"react\";\r\nimport { GameStatus } from \"../models/GameStatus\";\r\nimport { DatasetAndThing } from './../models/DatasetAndThing';\r\nimport { createThing } from '@inrupt/solid-client';\r\n\r\nexport interface IGameContext {\r\n    getQuizData: () => DatasetAndThing,\r\n    multiLang: boolean,\r\n    gameStatus: GameStatus,\r\n    setGameStatus: (delegate: (val: GameStatus) => GameStatus) => void\r\n}\r\n  \r\nexport const defaultGameState = {\r\n    getQuizData: () => {throw new Error(\"you should not call this (defaultPageSwitcherState.getQuizData)!\")},\r\n    multiLang: false,\r\n    gameStatus: { actQuestionIndex: -1, allQuestions: -1, quizResultNameUri: \"\", quizResultThing: createThing(), questionResultThings: [], multiLang: false },\r\n    setGameStatus: () => {}\r\n};\r\n  \r\nexport const GameContext = React.createContext<IGameContext>(defaultGameState);","import React, { useCallback, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { GameContext } from '../../../contexts/GameContext';\r\n\r\nexport const GameContextComponent: React.FC<Props> = (props: Props) => {\r\n\tconst [gameStatus, setGameStatus] = useState(props.gameStatus);\r\n\r\n\tconst getQuizData = useCallback(() => {\r\n\t\treturn props.quizData;\r\n\t}, [props.quizData])\r\n\r\n\treturn (\r\n\t\t<GameContext.Provider value={{\r\n\t\t\tgetQuizData,\r\n\t\t\tmultiLang: props.multiLang,\r\n\t\t\tgameStatus,\r\n\t\t\tsetGameStatus\r\n\t\t}}>\r\n\t\t\t{props.children}\r\n\t\t</GameContext.Provider>\r\n\t);\r\n}","import { GameStatus } from '../models/GameStatus';\r\nimport { Thing, addUrl, getBoolean, addInteger } from '@inrupt/solid-client';\r\nimport SOLIDQUIZ from './SOLIDQUIZ';\r\nimport { getUrl } from '@inrupt/solid-client';\r\nimport { NUMBER_OF_CORRECT_ANSWERS, SUCCESS_OF_QUESTION_RESULT } from '../constants/SolidQuizMissingValues';\r\n\r\nexport function generateRandomSeries(count: number): number[] {\r\n    const rv: number[] = [];\r\n    const seriesValues = generateSeries(count);\r\n\r\n    for (let i = count; i > 0; i--) {\r\n        const selected = Math.floor(Math.random() * i);\r\n        \r\n        const fromSeries = seriesValues.splice(selected, 1)[0];\r\n\r\n        rv.push(fromSeries);\r\n    }\r\n\r\n    return rv;\r\n}\r\n\r\nexport function addNewQuestionResult(gameStatus: GameStatus, newQuestionResultThing: Thing) {\r\n    //if first question result\r\n    if (gameStatus.questionResultThings.length === 0) {\r\n        gameStatus.quizResultThing = addUrl(\r\n            gameStatus.quizResultThing, \r\n            SOLIDQUIZ.firstQuestionResult.value, \r\n            getFutureUrl(gameStatus.quizResultNameUri, newQuestionResultThing));\r\n        gameStatus.questionResultThings.push(newQuestionResultThing);\r\n\r\n        return;\r\n    }\r\n\r\n    //get last question result, will be modified -> add nextQuestionResult url to it\r\n    const lastQuestionResultThing = getLastQuestionResult(gameStatus.questionResultThings);\r\n\r\n    const indexOfLast = gameStatus.questionResultThings.indexOf(lastQuestionResultThing);\r\n\r\n    gameStatus.questionResultThings[indexOfLast] = addUrl(\r\n        lastQuestionResultThing, \r\n        SOLIDQUIZ.nextQuestionResult.value, \r\n        getFutureUrl(gameStatus.quizResultNameUri, newQuestionResultThing));\r\n\r\n    //set (need to overwrite) previousQuestionResult to the lastQuestionResultThing\r\n    newQuestionResultThing = addUrl(\r\n        newQuestionResultThing, \r\n        SOLIDQUIZ.previousQuestionResult.value, \r\n        getFutureUrl(gameStatus.quizResultNameUri, lastQuestionResultThing));\r\n\r\n    //push to arr\r\n    gameStatus.questionResultThings.push(newQuestionResultThing);\r\n}\r\n\r\nexport function addNumberOfSuccessToQuizResult(gameStatus: GameStatus) {\r\n    let successCounter = 0;\r\n\r\n    gameStatus.questionResultThings.forEach((questionResultThing) => {\r\n        const success = getBoolean(questionResultThing, SUCCESS_OF_QUESTION_RESULT) ?? false;\r\n\r\n        if (success) {\r\n            successCounter++;\r\n        }\r\n    });\r\n\r\n    gameStatus.quizResultThing = addInteger(gameStatus.quizResultThing, NUMBER_OF_CORRECT_ANSWERS, successCounter);\r\n}\r\n\r\n\r\n//privates\r\nfunction getLastQuestionResult(questionResultThings: Thing[]): Thing {\r\n    for (let i = 0; i < questionResultThings.length; i++) {\r\n        const questionResultThing = questionResultThings[i];\r\n        \r\n        const nextUri = getUrl(questionResultThing, SOLIDQUIZ.nextQuestionResult.value);\r\n\r\n        //if missing nextQuestionResult, will be set and next time will pass this statement\r\n        if (nextUri === null) {\r\n            return questionResultThing;\r\n        }\r\n    }\r\n\r\n    throw new Error(\"something went wrong (getLastQuestionResult)\");\r\n}\r\n\r\nfunction getFutureUrl(quizResultNameUri: string, thing: Thing): string {\r\n    const indexOfSeparator = thing.url.lastIndexOf('/');\r\n\r\n    const str = thing.url.substring(indexOfSeparator + 1);\r\n\r\n    return `${quizResultNameUri}#${str}`;\r\n}\r\n\r\nfunction generateSeries(count: number): number[] {\r\n    const rv: number[] = [];\r\n\r\n    for (let i = 0; i < count; i++) {\r\n        rv.push(i);    \r\n    }\r\n\r\n    return rv;\r\n}\r\n","import { buildThing, createSolidDataset, createThing, getSolidDataset, getThingAll, saveSolidDatasetAt, setThing, Thing } from \"@inrupt/solid-client\";\r\nimport { RDF } from \"@inrupt/vocab-common-rdf\";\r\nimport { SHARE_LINKS_CONTAINER_DATASET } from \"../constants/DefaultValues\";\r\nimport { SolidDataset_Type, SolidFetch_Type } from \"../constants/SolidDatasetType\";\r\nimport SOLIDQUIZ from \"../helpers/SOLIDQUIZ\";\r\n\r\nexport async function createShareLink(workspaceUri: string, individualWebId: string, shareUri: string, fetch: SolidFetch_Type) {\r\n    const linksUrl = `${workspaceUri}${SHARE_LINKS_CONTAINER_DATASET}`;\r\n    let linksDataset = await getOrCreateLinksDataset(linksUrl, fetch);\r\n\r\n    const shareLinkThing = buildThing(createThing())\r\n      .addUrl(RDF.type, SOLIDQUIZ.ShareLink.value)\r\n      .addUrl(SOLIDQUIZ.shareLinksLink.value, shareUri)\r\n      .addUrl(SOLIDQUIZ.shareLinksIndividual.value, individualWebId)\r\n      .build();\r\n\r\n    linksDataset = setThing(linksDataset, shareLinkThing);\r\n\r\n    await saveSolidDatasetAt(linksUrl, linksDataset, {\r\n        fetch: fetch,\r\n    });\r\n}\r\n\r\nexport async function getAllShareLink(workspaceUri: string, fetch: SolidFetch_Type): Promise<Thing[]> {\r\n    const linksDatasetUri = getShareLinksDatasetUri(workspaceUri);\r\n\r\n    const linksDataset = await getOrCreateLinksDataset(linksDatasetUri, fetch);\r\n\r\n    return getThingAll(linksDataset);\r\n}\r\n\r\nexport function getShareLinksDatasetUri(workspaceUri: string) {\r\n    return `${workspaceUri}${SHARE_LINKS_CONTAINER_DATASET}`;\r\n}\r\n\r\n\r\n//privates\r\nasync function getOrCreateLinksDataset(linksUrl: string, fetch: SolidFetch_Type): Promise<SolidDataset_Type> {\r\n    try {\r\n      const workspace = await getSolidDataset(linksUrl, { fetch });\r\n      return workspace;\r\n    } catch (error: any) {\r\n      if (error.statusCode === 404) {\r\n        const workspace = await saveSolidDatasetAt(\r\n            linksUrl,\r\n            createSolidDataset(),\r\n            {\r\n                fetch,\r\n            }\r\n        );\r\n        return workspace;\r\n      }\r\n\r\n      console.log(error);\r\n    }\r\n\r\n    throw new Error('unkown error in getOrCreateWorkSpace');\r\n}\r\n","import { createAcl, getAgentAccess, getResourceAcl, getSolidDatasetWithAcl, getSourceUrl, hasAccessibleAcl, hasResourceAcl, saveAclFor, setAgentResourceAccess, setPublicResourceAccess } from \"@inrupt/solid-client\";\r\nimport { SolidDataset_Type, SolidFetch_Type } from \"../constants/SolidDatasetType\";\r\n\r\nexport async function createPublicAclForNewResource(dataset: SolidDataset_Type, fetch: SolidFetch_Type) {\r\n    try {\r\n        //check for control right (createAcl wont work if this check missing)\r\n        if (!hasAccessibleAcl(dataset)) {\r\n            throw new Error(\"Has no control right!\");\r\n        }\r\n\r\n        const newAcl = createAcl(dataset);\r\n\r\n        const updatedAcl = setPublicResourceAccess(\r\n            newAcl,\r\n            { read: true, append: false, write: false, control: false }\r\n          );\r\n          \r\n          // save the new public Acl:\r\n          await saveAclFor(dataset, updatedAcl, { fetch });\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport async function createAgentAclForNewResource(friendsWebId: string, dataset: SolidDataset_Type, fetch: SolidFetch_Type) {\r\n    try {\r\n        //check for control right (createAcl wont work if this check missing)\r\n        if (!hasAccessibleAcl(dataset)) {\r\n            throw new Error(\"Has no control right!\");\r\n        }\r\n\r\n        const newAcl = createAcl(dataset);\r\n\r\n        const updatedAcl = setAgentResourceAccess(\r\n            newAcl,\r\n            friendsWebId,\r\n            { read: true, append: false, write: false, control: false }\r\n          );\r\n          \r\n          // save the new public Acl:\r\n          await saveAclFor(dataset, updatedAcl, { fetch });\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport async function createFallbackAclForOwner(webId: string, dataset: SolidDataset_Type, fetch: SolidFetch_Type) {\r\n    try {\r\n        if (await checkForOwnerRights(webId, dataset, fetch)) {\r\n            return;\r\n        }\r\n\r\n        //check for control right (createAcl wont work if this check missing)\r\n        if (!hasAccessibleAcl(dataset)) {\r\n            throw new Error(\"Has no control right!\");\r\n        }\r\n\r\n        const newFallbackAcl = createAcl(dataset);\r\n\r\n        const updatedAcl = setAgentResourceAccess(\r\n            newFallbackAcl,\r\n            webId,\r\n            { read: true, append: true, write: true, control: true }\r\n          );\r\n          \r\n          // save the new public Acl:\r\n          await saveAclFor(dataset, updatedAcl, { fetch });\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function takeAwayPublicAcl(resourceUri: string, fetch: SolidFetch_Type) {\r\n    const resourceDataset = await getSolidDatasetWithAcl(resourceUri, { fetch });\r\n\r\n    //check for control right (createAcl wont work if this check missing)\r\n    if (!hasAccessibleAcl(resourceDataset)) {\r\n        throw new Error(\"Has no control right!\");\r\n    }\r\n\r\n    const resourceAcl = getResourceAcl(resourceDataset);\r\n\r\n    if (resourceAcl === null) {\r\n        return;\r\n    }\r\n\r\n    const updatedAcl = setPublicResourceAccess(\r\n        resourceAcl,\r\n        { read: false, append: false, write: false, control: false }\r\n      );\r\n      \r\n      // save the new public Acl:\r\n      await saveAclFor(resourceDataset, updatedAcl, { fetch });\r\n}\r\n\r\nexport async function takeAwayAgentAcl(resourceUri: string, agentWebId: string, fetch: SolidFetch_Type) {\r\n    const resourceDataset = await getSolidDatasetWithAcl(resourceUri, { fetch });\r\n\r\n    //check for control right (createAcl wont work if this check missing)\r\n    if (!hasAccessibleAcl(resourceDataset)) {\r\n        throw new Error(\"Has no control right!\");\r\n    }\r\n\r\n    const resourceAcl = getResourceAcl(resourceDataset);\r\n\r\n    if (resourceAcl === null) {\r\n        return;\r\n    }\r\n\r\n    const updatedAcl = setAgentResourceAccess(\r\n        resourceAcl,\r\n        agentWebId,\r\n        { read: false, append: false, write: false, control: false }\r\n      );\r\n      \r\n      // save the new public Acl:\r\n      await saveAclFor(resourceDataset, updatedAcl, { fetch });\r\n}\r\n\r\n\r\n//privates\r\nasync function checkForOwnerRights(webId: string, dataset: SolidDataset_Type, fetch: SolidFetch_Type): Promise<boolean> {\r\n    try {\r\n        const datasetUri = getSourceUrl(dataset);\r\n        const datasetWithAcl = await getSolidDatasetWithAcl(datasetUri, { fetch });\r\n        if (!hasResourceAcl(datasetWithAcl)) {\r\n            return false;\r\n        }\r\n        const agentAccess = getAgentAccess(datasetWithAcl, webId);\r\n\r\n        return agentAccess !== null && \r\n                agentAccess.read &&\r\n                agentAccess.write &&\r\n                agentAccess.append &&\r\n                agentAccess.control;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n\r\n    return false;\r\n}\r\n","import * as sharesService from '../services/SharesService';\r\nimport * as shareLinksService from '../services/ShareLinksService';\r\nimport * as workspaceService from '../services/WorkspaceService';\r\nimport * as aclService from '../services/AclService';\r\nimport { DatasetAndThing } from './../models/DatasetAndThing';\r\nimport { SolidFetch_Type } from '../constants/SolidDatasetType';\r\nimport { getSolidDataset } from '@inrupt/solid-client';\r\nimport { getThing } from '@inrupt/solid-client';\r\nimport { FOAF } from '@inrupt/vocab-common-rdf';\r\nimport { getUrlAll } from '@inrupt/solid-client';\r\nimport { SOLID_QUIZ_POD_PROFILE } from '../constants/DefaultValues';\r\n\r\nexport async function handlePublishQuiz(webId: string, workspaceUri: string, quizData: DatasetAndThing, fetch: SolidFetch_Type) {\r\n    //create public share\r\n    const shareThing = await sharesService.publishQuiz(quizData.thing.url);\r\n\r\n    //create local shareLink\r\n    await shareLinksService.createShareLink(workspaceUri, SOLID_QUIZ_POD_PROFILE, shareThing.url, fetch);\r\n\r\n    //create fallback acl (without this we loose control over the resource)\r\n    await aclService.createFallbackAclForOwner(webId, quizData.dataset, fetch);\r\n    //create acl for the resource\r\n    await aclService.createPublicAclForNewResource(quizData.dataset, fetch);\r\n}\r\n\r\nexport async function handlePublishQuizResult(webId: string, workspaceUri: string, quizResultData: DatasetAndThing, fetch: SolidFetch_Type) {\r\n    //create public share\r\n    const shareThing = await sharesService.publishQuizResult(quizResultData.thing.url);\r\n\r\n    //create local shareLink\r\n    await shareLinksService.createShareLink(workspaceUri, SOLID_QUIZ_POD_PROFILE, shareThing.url, fetch);\r\n\r\n    //create fallback acl (without this we loose control over the resource)\r\n    await aclService.createFallbackAclForOwner(webId, quizResultData.dataset, fetch);\r\n    //create acl for the resource\r\n    await aclService.createPublicAclForNewResource(quizResultData.dataset, fetch);\r\n}\r\n\r\nexport async function shareQuizWithFriend(webId: string, friendsWebId: string, ownWorkSpace: string, quizResultData: DatasetAndThing, fetch: SolidFetch_Type) {\r\n    //create public share\r\n    const friendsShareSpace = await getFriendsShareSpace(friendsWebId);\r\n    const shareThing = await sharesService.shareQuiz(friendsShareSpace, quizResultData.thing.url);\r\n\r\n    //create local shareLink\r\n    await shareLinksService.createShareLink(ownWorkSpace, friendsWebId, shareThing.url, fetch);\r\n\r\n    //create fallback acl (without this we loose control over the resource)\r\n    await aclService.createFallbackAclForOwner(webId, quizResultData.dataset, fetch);\r\n    //create acl for the resource\r\n    await aclService.createAgentAclForNewResource(friendsWebId, quizResultData.dataset, fetch);\r\n}\r\n\r\nexport async function checkForQuizShare(quizData: DatasetAndThing, fetch: SolidFetch_Type): Promise<boolean> {\r\n    //no check, because shares page shows all your share, event the duplicates, so you can delete it there if its duplicate\r\n    //maybe a future to do\r\n    return false;\r\n}\r\n\r\nexport async function getFriendsList(webId: string, fetch: SolidFetch_Type): Promise<string[]> {\r\n    const profileDataset = await getSolidDataset(webId, { fetch });\r\n    const profileThing = getThing(profileDataset, webId);\r\n\r\n    if (profileThing !== null) {\r\n        const friendUris = getUrlAll(profileThing, FOAF.knows);\r\n\r\n        return friendUris;\r\n    }\r\n\r\n    return [];\r\n}\r\n\r\n\r\n//privates\r\nasync function getFriendsShareSpace(friendsWebId: string): Promise<string> {\r\n    const friendsProfileDataset = await getSolidDataset(friendsWebId);\r\n    const friendsProfileThing = getThing(friendsProfileDataset, friendsWebId);\r\n\r\n    if (friendsProfileThing === null) {\r\n        throw new Error(\"Fetching friends profile failed!\");\r\n    }\r\n\r\n    const friendsWorkspace = workspaceService.getWorkSpaceLocation(friendsProfileThing);\r\n    \r\n    const friendsShareSpace = sharesService.getSharesDataset(friendsWorkspace);\r\n\r\n    return friendsShareSpace;\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Row, Button, Col, Alert } from 'react-bootstrap';\r\nimport { IoMdShare } from \"@react-icons/all-files/io/IoMdShare\";\r\nimport { SpinnerContext } from '../../../../../../../contexts/SpinnerContext';\r\nimport { TranslateContext } from '../../../../../../../contexts/TranslateContext';\r\nimport { useSession } from '@inrupt/solid-ui-react';\r\nimport { handlePublishQuizResult } from '../../../../../../../helpers/SharesHelper';\r\nimport { WorkspaceContext } from '../../../../../../../contexts/WorkspaceContext';\r\n\r\nexport const ShareGameResult: React.FC<Props> = (props: Props) => {\r\n\tconst { t } = useContext(TranslateContext);\r\n\tconst { SpinAround } = useContext(SpinnerContext);\r\n\tconst { workspaceUrl, webId } = useContext(WorkspaceContext);\r\n\tconst { session } = useSession();\r\n\tconst [shared, setShared] = useState(false);\r\n\r\n\tconst onPublish = () => {\r\n\t\tSpinAround(async () => {\t\t\t\r\n\t\t\tawait handlePublishQuizResult(webId, workspaceUrl, props.quizResultData, session.fetch);\r\n\r\n\t\t\tsetShared(true);\r\n\t\t});\t\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Row>\r\n\t\t\t\t\t<h3 className='share-title'>{t(\"playGame.gameResult.share\")}</h3> \r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Button className='share-btn' onClick={onPublish} disabled={shared}><IoMdShare /></Button>\r\n\t\t\t\t\t{shared &&\r\n\t\t\t\t\t<Alert className='share-alert'>{t(\"playGame.gameResult.shareComplete\")}</Alert>}\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Alert, Button, Row } from 'react-bootstrap';\r\nimport { getInteger } from '@inrupt/solid-client';\r\nimport { TITLE, NUMBER_OF_CORRECT_ANSWERS } from '../../../../../../constants/SolidQuizMissingValues';\r\nimport { TranslateContext } from '../../../../../../contexts/TranslateContext';\r\nimport { PageSwitcherContext } from '../../../../../../contexts/PageSwitcherContext';\r\nimport { getString } from './../../../../../../helpers/LangReader';\r\nimport { ShareGameResult } from './shareGameResult';\r\n\r\nexport const GameResult: React.FC<Props> = (props: Props) => {\r\n\tconst { t, lang } = useContext(TranslateContext);\r\n\tconst { GoBack } = useContext(PageSwitcherContext);\r\n\tconst [quizTitle, setQuizTitle] = useState(\"\");\r\n\tconst [answersSucceded, setAnswersSucceded] = useState(0);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst actualQuizTitle = getString(props.quizThing, TITLE, props.gameResult.gameStatus.multiLang, lang);\r\n\t\tconst actualAnswersSucceded = getInteger(props.gameResult.gameStatus.quizResultThing, NUMBER_OF_CORRECT_ANSWERS) ?? -1;\r\n\r\n\t\tsetQuizTitle(actualQuizTitle);\r\n\t\tsetAnswersSucceded(actualAnswersSucceded);\r\n\t}, [props.gameResult, lang, props.quizThing]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className='main-title'>{quizTitle} {t(\"playGame.gameResult.title\")}</h3>\r\n\r\n\t\t\t<Row>\r\n\t\t\t\t<Alert variant='success' className='quizOverText-style'>{t(\"playGame.gameResult.quizOverText\")}</Alert>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<Alert variant='info' className='quizResults-style'>\r\n\t\t\t\t\t{t(\"playGame.gameResult.quizResultsAll\")}: {props.gameResult.gameStatus.allQuestions} \r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t{t(\"playGame.gameResult.quizResultsSuccess\")}: {answersSucceded}</Alert>\r\n\t\t\t</Row>\r\n\r\n\t\t\t<ShareGameResult quizResultData={props.gameResult.savedQuizResultData} />\r\n\r\n\t\t\t<Button variant='light' className='back-btn' onClick={() => GoBack()}>{t(\"page.common.back\")}</Button>\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport { TranslateContext } from '../../../../../../../../../../contexts/TranslateContext';\r\nimport { GameContext } from '../../../../../../../../../../contexts/GameContext';\r\nimport { getString } from '../../../../../../../../../../helpers/LangReader';\r\nimport { ANSWER_TEXT } from '../../../../../../../../../../constants/SolidQuizMissingValues';\r\n\r\nexport const Answer: React.FC<Props> = (props: Props) => {\r\n\tconst { lang } = useContext(TranslateContext);\r\n\tconst { multiLang, gameStatus } = useContext(GameContext);\r\n\tconst [answerText, setAnswerText] = useState<string>(\"\");\r\n\tconst [btnVariant, setBtnVariant] =  useState(\"secondary\");\r\n\r\n\tuseEffect(() => {\t\t\r\n\t\tconst text = getString(props.answerThing, ANSWER_TEXT, multiLang, lang);\r\n\r\n\t\tsetBtnVariant(\"secondary\");\r\n\r\n\t\tsetAnswerText(text);\r\n\t}, [props.answerThing, lang, multiLang, gameStatus.actQuestionIndex ]);\r\n\r\n\tconst handleClick = () => {\r\n\t\tconst answerSelectedResult = props.onAnswerSelected(props.answerThing);\r\n\r\n\t\tif (answerSelectedResult) {\r\n\t\t\tsetBtnVariant(\"success\");\r\n\t\t}\r\n\t\telse{\r\n\t\t\tsetBtnVariant(\"danger\");\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button variant={btnVariant} disabled={props.disabled} onClick={handleClick}>{answerText}</Button>\r\n\t\t</>\r\n\t);\r\n}","import { buildThing, createThing, Thing, createSolidDataset, setThing, saveSolidDatasetAt, getSolidDataset } from '@inrupt/solid-client';\r\nimport { RDF } from '@inrupt/vocab-common-rdf';\r\nimport { QUIZZES_CONTAINER, QUIZ_RESULTS_CONTAINER } from '../constants/DefaultValues';\r\nimport { QUIZ_RESULT_CREATED, SUCCESS_OF_QUESTION_RESULT } from '../constants/SolidQuizMissingValues';\r\nimport { SolidDataset_Type, SolidFetch_Type } from '../constants/SolidDatasetType';\r\nimport SOLIDQUIZ from '../helpers/SOLIDQUIZ';\r\nimport { NestedLocalDataset } from '../models/NestedLocalDataset';\r\n\r\nexport function createQuizResult(quizThing: Thing, webId: string): Thing {\r\n    const quizResultThing = buildThing(createThing())\r\n      .addUrl(RDF.type, SOLIDQUIZ.QuizResult.value)\r\n      .addDatetime(QUIZ_RESULT_CREATED, new Date())\r\n      .addUrl(SOLIDQUIZ.quizResultCreatedBy.value, webId)\r\n      .addUrl(SOLIDQUIZ.quizResultOf.value, quizThing.url)\r\n      .build();\r\n\r\n    return quizResultThing;\r\n}   \r\n\r\nexport function createQuestionResult(questionThing: Thing, answerThing: Thing, success: boolean): Thing {\r\n    const questionResultThing = buildThing(createThing())\r\n      .addUrl(RDF.type, SOLIDQUIZ.QuestionResult.value)\r\n      .addUrl(SOLIDQUIZ.questionResultOf.value, questionThing.url)\r\n      .addUrl(SOLIDQUIZ.questionResultsAnswer.value, answerThing.url)\r\n      .addBoolean(SUCCESS_OF_QUESTION_RESULT, success)\r\n      .build();\r\n\r\n    return questionResultThing;\r\n}\r\n\r\nexport async function saveQuizResult(quizResultUri: string, quizResultThing: Thing, questionResultThings: Thing[], fetch: SolidFetch_Type): Promise<SolidDataset_Type> {\r\n    let localeDataset = createSolidDataset();\r\n    localeDataset = setThing(localeDataset, quizResultThing);\r\n    const nestedDateset = { localeDataset };\r\n    addQuestionResultssToDataset(nestedDateset, questionResultThings);\r\n    \r\n    return await saveSolidDatasetAt(quizResultUri, nestedDateset.localeDataset, {\r\n      fetch: fetch,\r\n    });\r\n}\r\n\r\nexport function getQuizResultsContainer(workspaceUri: string, quizName: string) {\r\n    return `${workspaceUri}${QUIZZES_CONTAINER}${quizName}/${QUIZ_RESULTS_CONTAINER}`;\r\n}\r\nexport function createQuizResultUri(workspaceUri: string, quizName: string) {\r\n    return `${getQuizResultsContainer(workspaceUri, quizName)}${new Date().getTime()}.ttl`;\r\n}\r\n\r\nexport async function createQuizResultsContainer(workspaceUri: string, quizName: string, fetch: SolidFetch_Type) {\r\n    const quizResultsWorkspace = getQuizResultsContainer(workspaceUri, quizName);\r\n\r\n    if (await isQuizResultsExists(quizResultsWorkspace)) {\r\n        return;\r\n    }\r\n\r\n    await saveSolidDatasetAt(quizResultsWorkspace, createSolidDataset(), { fetch });\r\n}\r\n\r\n\r\n//privates\r\nfunction addQuestionResultssToDataset(nestedDataset: NestedLocalDataset, questionResultThings: Thing[]) {\r\n    for (let i = 0; i < questionResultThings.length; i++) {\r\n      const questionResultThing = questionResultThings[i];\r\n      \r\n      nestedDataset.localeDataset = setThing(nestedDataset.localeDataset, questionResultThing);\r\n    }\r\n}\r\n\r\nasync function isQuizResultsExists(uri: string): Promise<boolean> {\r\n    try {\r\n      await getSolidDataset(uri);\r\n      return true;\r\n    } catch (error: any) {\r\n        return false;\r\n    }\r\n}\r\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Thing, getUrl } from '@inrupt/solid-client';\r\nimport SOLIDQUIZ from '../../../../../../../../../helpers/SOLIDQUIZ';\r\nimport { Answer } from './answer';\r\nimport { Button } from 'react-bootstrap';\r\nimport { TranslateContext } from '../../../../../../../../../contexts/TranslateContext';\r\nimport { GameContext } from '../../../../../../../../../contexts/GameContext';\r\nimport * as quizResultService from '../../../../../../../../../services/QuizResultService';\r\nimport { addNewQuestionResult } from '../../../../../../../../../helpers/GameHelper';\r\n\r\nexport const AnswerController: React.FC<Props> = (props: Props) => {\r\n\tconst { t } = useContext(TranslateContext);\r\n\tconst { setGameStatus } = useContext(GameContext);\r\n\tconst [correctAnswer, setCorrectAnswer] = useState<string | null>(null);\r\n\tconst [answerSelected, setAnswerSelected] = useState(false);\r\n\tconst [answerBtns, setAnswerBtns] = useState<JSX.Element[]>([]);\r\n\r\n\tconst onAnswerSelected = useCallback((answerThing: Thing) => {\r\n\t\tsetAnswerSelected(true);\r\n\t\tconst success = answerThing.url === correctAnswer;\r\n\r\n\t\tsetGameStatus((act) => {\r\n\t\t\tlet rv = { ...act };\r\n\r\n\t\t\tconst newQuestionResultThing = quizResultService.createQuestionResult(props.questionThing, answerThing, success);\r\n\t\t\taddNewQuestionResult(rv, newQuestionResultThing);\r\n\r\n\t\t\treturn rv;\r\n\t\t});\r\n\r\n\t\treturn success;\r\n\t}, [correctAnswer, setGameStatus, props.questionThing]);\r\n\r\n\tconst onNextClick = () => {\r\n\t\tsetAnswerSelected(false);\r\n\r\n\t\tsetGameStatus((act) => {\r\n\t\t\tlet rv = { ...act };\r\n\r\n\t\t\trv.actQuestionIndex++;\r\n\r\n\t\t\treturn rv;\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst correctAnswerThingUri = getUrl(props.questionThing, SOLIDQUIZ.correctAnswerOption.value);\r\n\t\tsetCorrectAnswer(encodeURI(correctAnswerThingUri ?? \"error\"));\r\n\r\n\t\tsetAnswerBtns(\r\n\t\t\tprops.answerThings.map((thing, indx) => \r\n\t\t\t\t<Answer key={indx} answerThing={thing} onAnswerSelected={onAnswerSelected} disabled={answerSelected} />)\r\n\t\t);\r\n\t}, [props.questionThing, props.answerThings, onAnswerSelected, answerSelected]);\r\n\r\n\treturn (\r\n\t\t<div className='d-grid gap-3'>\r\n\t\t\t{answerBtns}\r\n\r\n\t\t\t{\r\n\t\t\t\tanswerSelected &&\r\n\t\t\t\t<Button variant=\"warning\" className='next-btn' onClick={onNextClick}>{t(\"playGame.game.btn.nextQuestion\")}</Button> \r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { GameContext } from '../../../../../../../../contexts/GameContext';\r\nimport { getUrlAll, Thing } from '@inrupt/solid-client';\r\nimport SOLIDQUIZ from '../../../../../../../../helpers/SOLIDQUIZ';\r\nimport * as workspaceService from '../../../../../../../../services/WorkspaceService';\r\nimport { generateRandomSeries } from '../../../../../../../../helpers/GameHelper';\r\nimport { AnswerController } from './answerController';\r\n\r\nexport const AnswerLoader: React.FC<Props> = (props: Props) => {\r\n\tconst {  getQuizData } = useContext(GameContext);\r\n\tconst [answerThings, setAnswerThings] = useState<Thing[]>([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst answerUris = getUrlAll(props.questionThing, SOLIDQUIZ.answerOption.value);\t\t\r\n\t\tconst answerThings = workspaceService.getAllThingByUris(getQuizData().dataset, answerUris);\r\n\t\tconst series = generateRandomSeries(answerThings.length);\r\n\r\n\t\tconst answersInRandOrder: Thing[] = [];\r\n\r\n\t\tfor (let i = 0; i < series.length; i++) {\r\n\t\t\tconst index = series[i];\r\n\t\t\t\r\n\t\t\tanswersInRandOrder.push(answerThings[index]);\r\n\t\t}\r\n\r\n\t\tsetAnswerThings(answersInRandOrder);\r\n\t}, [getQuizData, props.questionThing]);\r\n\r\n\treturn (\r\n\t\t<AnswerController questionThing={props.questionThing} answerThings={answerThings} />\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { TranslateContext } from '../../../../../../../contexts/TranslateContext';\r\nimport { getString } from '../../../../../../../helpers/LangReader';\r\nimport { GameContext } from '../../../../../../../contexts/GameContext';\r\nimport { QUESTION_TEXT } from './../../../../../../../constants/SolidQuizMissingValues';\r\nimport { Col, FloatingLabel, Form, Row } from 'react-bootstrap';\r\nimport { AnswerLoader } from './answerLoader';\r\n\r\nexport const Question: React.FC<Props> = (props: Props) => {\r\n\tconst { t, lang } = useContext(TranslateContext);\r\n\tconst { multiLang } = useContext(GameContext);\r\n\tconst [questionText, setQuestionText] = useState<string>(\"\");\r\n\r\n\tuseEffect(() => {\t\t\r\n\t\tconst text = getString(props.questionThing, QUESTION_TEXT, multiLang, lang);\r\n\r\n\t\tsetQuestionText(text);\r\n\t}, [props.questionThing, lang, multiLang ]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<FloatingLabel controlId=\"floatingTextarea\" label={t(\"playGame.game.questionText\")} className=\"mb-3\">\r\n\t\t\t\t\t\t<Form.Control as=\"textarea\"\tplaceholder={t(\"playGame.game.questionText\")} className='textarea-style' defaultValue={questionText} disabled />\r\n\t\t\t\t\t</FloatingLabel>\t\t\t\t\t\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t\r\n\t\t\t<Row className='answers-row'>\r\n\t\t\t\t<AnswerLoader questionThing={props.questionThing} />\r\n\t\t\t</Row>\r\n\t\t</>\r\n\t);\r\n}","import { DatasetAndThing } from \"../models/DatasetAndThing\";\r\nimport { SolidDataset_Type, SolidFetch_Type } from \"../constants/SolidDatasetType\";\r\nimport * as workspaceService from '../services/WorkspaceService';\r\nimport * as sharesService from '../services/SharesService';\r\nimport SOLIDQUIZ from \"./SOLIDQUIZ\";\r\nimport { getUrl, Thing, getInteger, getDatetime, getThing, getUrlAll } from '@inrupt/solid-client';\r\nimport { NUMBER_OF_CORRECT_ANSWERS, QUIZ_RESULT_CREATED } from \"../constants/SolidQuizMissingValues\";\r\nimport { getSolidDataset } from '@inrupt/solid-client';\r\nimport { LDP } from \"@inrupt/vocab-common-rdf\";\r\n\r\nexport async function getQuizResultsFromContainer(containerUri: string, fetch: SolidFetch_Type): Promise<SolidDataset_Type[]> {\r\n    const containerDataset = await tryGetQuizResultDataset(containerUri, fetch);\r\n\r\n    if (containerDataset === null) {\r\n        console.log(\"Quiz result dataset caonnot found, returns empty list! DatasetUri: \" + containerUri);\r\n        return [];\r\n    }\r\n\r\n    const datasetThing = getThing(containerDataset, containerUri);\r\n\r\n    if (datasetThing === null) {\r\n        console.log(\"Cannot found container: \" + containerDataset);\r\n        return [];\r\n    }\r\n\r\n    const containedResources = getUrlAll(datasetThing, LDP.contains);\r\n    \r\n    const quizResultDatasets = await getQuizResultDatasets(containedResources, fetch);\r\n\r\n    return quizResultDatasets;\r\n  }\r\n\r\nexport function getQuizResultsFromDatasets(quizResultDatasets: SolidDataset_Type[], quizResultOf: Thing): DatasetAndThing[] {\r\n    const quizResultsThings: DatasetAndThing[] = [];\r\n\r\n    for (let i = 0; i < quizResultDatasets.length; i++) {\r\n        const quizResultDataset = quizResultDatasets[i];\r\n        \r\n        const quizResultThing = workspaceService.getFirstThingByRDFType(quizResultDataset, SOLIDQUIZ.QuizResult.value);\r\n\r\n        if (quizResultThing !== null) {\r\n            const quizOfUri = getUrl(quizResultThing, SOLIDQUIZ.quizResultOf.value);\r\n\r\n            if (quizOfUri === quizResultOf.url) {\r\n                quizResultsThings.push({ dataset: quizResultDataset, thing: quizResultThing });\r\n            }\r\n        }\r\n    }\r\n\r\n    return quizResultsThings;\r\n}\r\n\r\nexport function sortQuizResultDatas(quizResultDatas: DatasetAndThing[]) {\r\n    quizResultDatas.sort((a, b) => {\r\n        const byCorrectAnswer = compareByCorrectAnswer(a.thing, b.thing);\r\n\r\n        if (byCorrectAnswer !== 0) {\r\n            return byCorrectAnswer;\r\n        }\r\n\r\n        const byNewer = compareByNewer(a.thing, b.thing);\r\n\r\n        return byNewer;\r\n    });\r\n}\r\n\r\nexport function getSavedQuizResultName(datasetUri: string, localThing: Thing) {\r\n    const indexOfSeparator = localThing.url.lastIndexOf('/');\r\n\r\n    const resultsName = localThing.url.substring(indexOfSeparator + 1);\r\n    \r\n    return `${datasetUri}#${resultsName}`;\r\n}\r\n\r\nexport function getQuizNameFromQuizThing(quizThing: Thing) {\r\n    const indexOfSeparator = quizThing.url.lastIndexOf('#');\r\n\r\n    const quizName = quizThing.url.substring(indexOfSeparator + 1);\r\n    \r\n    return quizName;\r\n}\r\n\r\nexport async function getPublicQuizResultDatasets(quizResultOf: Thing): Promise<DatasetAndThing[]> {\r\n    const publicQuizResultThings = await sharesService.getPublishedShares(SOLIDQUIZ.QuizResult.value);\r\n\r\n    const rv: DatasetAndThing[] = [];\r\n\r\n    for (let i = 0; i < publicQuizResultThings.length; i++) {\r\n        const thing = publicQuizResultThings[i];\r\n        \r\n        const quizResultDatasetUri = getUrl(thing, SOLIDQUIZ.sharedResource.value) ?? \"error\";\r\n\r\n        const quizResultsDataset = await checkQuizResultsQuizOf(quizResultDatasetUri, quizResultOf);\r\n\r\n        if (quizResultsDataset !== null) {\r\n            rv.push(quizResultsDataset);\r\n        }\r\n    }\r\n\r\n    return rv;\r\n}\r\n\r\nexport function mergeQuizResults(localResults: DatasetAndThing[], publicResults: DatasetAndThing[]): DatasetAndThing[] {    \r\n    const rv: DatasetAndThing[] = [...localResults];\r\n\r\n    publicResults.forEach(publisResult => {\r\n        const conflict = localResults.find(item => publisResult.thing.url === item.thing.url);\r\n\r\n        if (conflict === undefined) {\r\n            rv.push(publisResult);\r\n        }\r\n    });\r\n\r\n    return rv;\r\n}\r\n\r\n\r\n//privates\r\nfunction compareByCorrectAnswer(thingA: Thing, thingB: Thing): number {\r\n    const correctAnswersA = getInteger(thingA, NUMBER_OF_CORRECT_ANSWERS) ?? 0;\r\n    const correctAnswersB = getInteger(thingB, NUMBER_OF_CORRECT_ANSWERS) ?? 0;\r\n\r\n    return correctAnswersB - correctAnswersA;\r\n}\r\n\r\nfunction compareByNewer(thingA: Thing, thingB: Thing): number {\r\n    const dateA = getDatetime(thingA, QUIZ_RESULT_CREATED)?.getTime() ?? 0;\r\n    const dateB = getDatetime(thingB, QUIZ_RESULT_CREATED)?.getTime() ?? 0;\r\n\r\n    return dateB - dateA;\r\n}\r\n\r\nasync function checkQuizResultsQuizOf(quizResultUri: string, quizResultOf: Thing): Promise<DatasetAndThing | null> {\r\n    const quizResultDataset = await getSolidDataset(quizResultUri);\r\n    \r\n    //find quizResult thing inside the dataset (there are also questionResults)\r\n    const quizResultThing = workspaceService.getFirstThingByRDFType(quizResultDataset, SOLIDQUIZ.QuizResult.value);\r\n    if (quizResultThing !== null) {\r\n        const quizUri = getUrl(quizResultThing, SOLIDQUIZ.quizResultOf.value);\r\n\r\n        if (quizUri === quizResultOf.url){\r\n            return { dataset: quizResultDataset, thing: quizResultThing };\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nasync function getQuizResultDatasets(quizContainerContainedUris: string[], fetch: SolidFetch_Type): Promise<SolidDataset_Type[]> {\r\n    const rv: SolidDataset_Type[] = [];\r\n\r\n    //fetch together\r\n    const promiseList: Promise<SolidDataset_Type | null>[] = [];\r\n    for (let i = 0; i < quizContainerContainedUris.length; i++) {\r\n        const quizResultUri = quizContainerContainedUris[i];\r\n\r\n        promiseList.push(tryGetQuizResultDataset(quizResultUri, fetch));\r\n    }\r\n    const fetchedPromises = await Promise.all(promiseList);\r\n\r\n    for (let i = 0; i < fetchedPromises.length; i++) {\r\n        const promiseResult = fetchedPromises[i];\r\n\r\n        if (promiseResult !== null) {\r\n            rv.push(promiseResult);\r\n        }\r\n    }\r\n\r\n    return rv;\r\n}\r\n\r\nasync function tryGetQuizResultDataset(quizResultUri: string, fetch: SolidFetch_Type): Promise<SolidDataset_Type | null> {\r\n    try {\r\n        const dataset = await getSolidDataset(quizResultUri, { fetch });\r\n\r\n        return dataset;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n\r\n    return null;\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { GameContext } from '../../../../../../contexts/GameContext';\r\nimport { Thing } from '@inrupt/solid-client';\r\nimport { Question } from './question';\r\nimport { addNumberOfSuccessToQuizResult } from '../../../../../../helpers/GameHelper';\r\nimport * as quizResultService from '../../../../../../services/QuizResultService';\r\nimport { useSession } from '@inrupt/solid-ui-react';\r\nimport { SpinnerContext } from '../../../../../../contexts/SpinnerContext';\r\nimport { getThing } from '@inrupt/solid-client';\r\nimport { getSavedQuizResultName } from '../../../../../../helpers/QuizResultsListHelper';\r\n\r\nexport const QuestionController: React.FC<Props> = ({ questions, onCompleteGame }) => {\r\n\tconst { session } = useSession();\r\n\tconst { gameStatus } = useContext(GameContext);\r\n\tconst { SpinAround } = useContext(SpinnerContext);\r\n\tconst [actQuestion, setActQuestion] = useState<Thing | null>(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (gameStatus.actQuestionIndex >= questions.length) {\r\n\t\t\tSpinAround(async () => {\r\n\t\t\t\taddNumberOfSuccessToQuizResult(gameStatus);\r\n\r\n\t\t\t\tconst updatedDataset = await quizResultService.saveQuizResult(\r\n\t\t\t\t\tgameStatus.quizResultNameUri, \r\n\t\t\t\t\tgameStatus.quizResultThing, \r\n\t\t\t\t\tgameStatus.questionResultThings, \r\n\t\t\t\t\tsession.fetch);\r\n\r\n\t\t\t\tconst savedThingName = getSavedQuizResultName(gameStatus.quizResultNameUri, gameStatus.quizResultThing);\r\n\t\t\t\tconst updatedThing = getThing(updatedDataset, savedThingName);\r\n\r\n\t\t\t\tif (updatedThing === null) {\r\n\t\t\t\t\tthrow new Error(\"persist result failed!\");\r\n\t\t\t\t}\r\n\t\t\r\n\t\t\t\tonCompleteGame({ gameStatus, savedQuizResultData: { dataset: updatedDataset, thing: updatedThing } });\r\n\t\t\t});\t\r\n\t\t}\r\n\t\telse{\r\n\t\t\tsetActQuestion(questions[gameStatus.actQuestionIndex]);\r\n\t\t}\r\n\t}, [gameStatus.actQuestionIndex, questions, onCompleteGame, gameStatus, session.fetch, SpinAround]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{actQuestion !== null &&\r\n\t\t\t<Question questionThing={actQuestion} />}\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport { TranslateContext } from '../../../../contexts/TranslateContext';\r\n\r\nexport const YesNoModal: React.FC<Props> = (props: Props) => {\t\r\n\tconst { t } = useContext(TranslateContext);\r\n\r\n\treturn (\r\n\t\t<> \r\n\t\t\t<Modal show={props.show} onHide={props.onHide} centered>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>{t(\"page.common.yesno.title\")}</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t{props.body}\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button variant=\"secondary\" onClick={props.onHide}>{t(\"page.common.yesno.refuse\")}</Button>\r\n\t\t\t\t\t<Button variant=\"primary\" onClick={props.onConfirm}>{t(\"page.common.yesno.accept\")}</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n}","import React, { useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport { YesNoModal } from '../yesNoModal';\r\n\r\nexport const CustomButtonYesNo: React.FC<Props> = (props: Props) => {\r\n\tconst [modalShow, setModalShow] = useState(false);\r\n\r\n\tconst handleConfirm = () => {\r\n\t\tsetModalShow(false);\r\n\t\tprops.onConfirm();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button variant={props.variant} size='lg' style={props.style} onClick={() => setModalShow(true)}>\r\n\t\t\t\t{props.children}\r\n\t\t\t</Button>\r\n\t\r\n\t\t\t<YesNoModal\r\n\t\t\t\tshow={modalShow}\r\n\t\t\t\tonHide={() => setModalShow(false)}\r\n\t\t\t\tbody={props.modalText}\r\n\t\t\t\tonConfirm={handleConfirm}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Col, Container, Row, Alert } from 'react-bootstrap';\r\nimport { GameContext } from '../../../../../../contexts/GameContext';\r\nimport { TranslateContext } from '../../../../../../contexts/TranslateContext';\r\nimport { getString } from '../../../../../../helpers/LangReader';\r\nimport { TITLE } from '../../../../../../constants/SolidQuizMissingValues';\r\nimport { CustomButtonYesNo } from '../../../../../common/buttonToYesNoModal/customButtonYesNo';\r\nimport { PageSwitcherContext } from '../../../../../../contexts/PageSwitcherContext';\r\n\r\nexport const GameContainer: React.FC<Props> = (props: Props) => {\t\r\n\tconst { t, lang } = useContext(TranslateContext);\r\n\tconst { GoBack } = useContext(PageSwitcherContext);\r\n\tconst { gameStatus, getQuizData, multiLang } = useContext(GameContext);\r\n\t\r\n\tconst title = getString(getQuizData().thing, TITLE, multiLang, lang);\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<h3 className='main-title'>{t(\"playGame.game.title\")}: {title}</h3>\r\n\t\t\t\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Alert variant='light'>{t(\"playGame.game.actQuestion\")}: {gameStatus.actQuestionIndex + 1}</Alert>\t\t\t\t\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col className='justify-content-right'>\r\n\t\t\t\t\t<Alert variant='light'>{t(\"playGame.game.allQuestions\")}: {gameStatus.allQuestions}</Alert>\t\t\t\t\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t\r\n\t\t\t{props.children}\r\n\r\n\t\t\t<div className='back-btn'>\r\n\t\t\t\t\t<CustomButtonYesNo variant=\"light\" modalText={t(\"playGame.modal.confirmClose\")} onConfirm={() => GoBack()}>\r\n\t\t\t\t\t\t\t{t(\"page.common.back\")}\r\n\t\t\t\t\t</CustomButtonYesNo>\r\n\t\t\t\t</div>\r\n\t\t</Container>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { GameContext } from './../../../../../contexts/GameContext';\r\nimport { generateRandomSeries } from '../../../../../helpers/GameHelper';\r\nimport * as workspaceService from '../../../../../services/WorkspaceService';\r\nimport { getUrlAll, Thing } from '@inrupt/solid-client';\r\nimport SOLIDQUIZ from '../../../../../helpers/SOLIDQUIZ';\r\nimport { GameResult } from './gameResult';\r\nimport { QuestionController } from './questionController';\r\nimport { GameContainer } from './gameContainer';\r\nimport { GameResultData } from '../../../../../models/GameResultData';\r\n\r\nexport const GameController: React.FC<Props> = (props: Props) => {\r\n\tconst { getQuizData } = useContext(GameContext);\r\n\tconst [questions, setQuestions] = useState<Thing[] | null>(null);\r\n\tconst [gameResult, setGameResult] = useState<GameResultData | null>(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst quizData = getQuizData();\r\n\t\tconst questionUris = getUrlAll(quizData.thing, SOLIDQUIZ.quizQuestion.value);\t\t\r\n\t\tconst questionThings = workspaceService.getAllThingByUris(quizData.dataset, questionUris);\r\n\t\tconst series = generateRandomSeries(questionThings.length);\r\n\r\n\t\tconst questionsInRandOrder: Thing[] = [];\r\n\r\n\t\tfor (let i = 0; i < series.length; i++) {\r\n\t\t\tconst index = series[i];\r\n\t\t\t\r\n\t\t\tquestionsInRandOrder.push(questionThings[index]);\r\n\t\t}\r\n\r\n\t\tsetQuestions(questionsInRandOrder);\r\n\t}, [getQuizData]);\r\n\r\n\tif (questions === null) {\r\n\t\treturn <></>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{\r\n\t\t\t\tgameResult !== null ?\r\n\t\t\t\t<GameResult quizThing={getQuizData().thing} gameResult={gameResult} /> :\r\n\t\t\t\t<GameContainer>\r\n\t\t\t\t\t<QuestionController questions={questions} onCompleteGame={setGameResult} />\r\n\t\t\t\t</GameContainer>\r\n\t\t\t}\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { GameContextComponent } from '../../../common/gameContextComponent';\r\nimport { getUrlAll, getBoolean } from '@inrupt/solid-client';\r\nimport SOLIDQUIZ from './../../../../helpers/SOLIDQUIZ';\r\nimport { GameController } from './gameController';\r\nimport { GameStatus } from '../../../../models/GameStatus';\r\nimport { MULTI_LANGUAGE_SUPPORT } from '../../../../constants/SolidQuizMissingValues';\r\nimport * as quizResultService from '../../../../services/QuizResultService';\r\nimport { WorkspaceContext } from '../../../../contexts/WorkspaceContext';\r\nimport { getQuizNameFromQuizThing } from '../../../../helpers/QuizResultsListHelper';\r\n\r\nexport const GameLoader: React.FC<Props> = (props: Props) => {\r\n\tconst { webId, workspaceUrl } = useContext(WorkspaceContext);\r\n\tconst [multiLang, setMultiLang] = useState<boolean>(false);\r\n\tconst [newGameStatus, setNewGameStatus] = useState<GameStatus | null>(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst multiLang = getBoolean(props.quizData.thing, MULTI_LANGUAGE_SUPPORT) ?? false;\r\n\t\tconst questionsCount = getUrlAll(props.quizData.thing, SOLIDQUIZ.quizQuestion.value).length;\r\n\t\tconst quizName = getQuizNameFromQuizThing(props.quizData.thing);\r\n\t\tconst quizResultNameUri = quizResultService.createQuizResultUri(workspaceUrl, quizName);\r\n\t\tconst quizResultThing = quizResultService.createQuizResult(props.quizData.thing, webId);\r\n\r\n\t\tsetMultiLang(multiLang);\r\n\t\tsetNewGameStatus({ actQuestionIndex: 0, allQuestions: questionsCount, quizResultNameUri, quizResultThing, questionResultThings: [], multiLang });\r\n\t}, [props.quizData, webId, workspaceUrl]);\t\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{newGameStatus !== null &&\r\n\t\t\t\t<GameContextComponent \r\n\t\t\t\t\tquizData={props.quizData}\r\n\t\t\t\t\tmultiLang={multiLang}\r\n\t\t\t\t\tgameStatus={newGameStatus}>\r\n\t\t\t\t\t<GameController />\r\n\t\t\t\t</GameContextComponent>\r\n\t\t\t}\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { TranslateContext } from '../../../contexts/TranslateContext';\r\nimport { DatasetAndThing } from './../../../models/DatasetAndThing';\r\nimport { QuizListLoader } from '../../common/quizListLoader';\r\nimport { GameLoader } from './gameLoader';\r\n\r\nexport const PlayGame: React.FC<Props> = (props: Props) => {\r\n\tconst { t } = useContext(TranslateContext);\r\n\tconst [selectedQuiz, setSelectedQuiz] = useState<DatasetAndThing | null>(null);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{\r\n\t\t\t\tselectedQuiz === null ?\r\n\t\t\t\t<>\r\n\t\t\t\t\t<h3 className='main-title'>{t(\"playGame.title\")}</h3>\r\n\t\t\t\t\t<QuizListLoader onQuizSelected={setSelectedQuiz} /> \r\n\t\t\t\t</> :\r\n\t\t\t\t<GameLoader quizData={selectedQuiz} /> \r\n\t\t\t}\t\t\t\r\n\t\t</>\r\n\t);\r\n}","import React from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Formik, Form } from 'formik';\r\n\r\nexport const FormBase: React.FC<Props> = (props: Props) => {\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tvalidationSchema={props.schema}\r\n\t\t\tonSubmit={props.onSubmit}\r\n\t\t\tinitialValues={props.initialValues}\r\n\t\t>\r\n\t\t\t<Form>\r\n\t\t\t\t{props.children}\r\n\t\t\t\t<Button type=\"submit\" className='submit-btn'>{props.submitLabel}</Button>\r\n\t\t\t</Form>\r\n\t\t</Formik>\r\n\t);\r\n}","import React from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { FloatingLabel, Form } from 'react-bootstrap';\r\nimport { useField } from 'formik';\r\n\r\nexport const BasicInput: React.FC<Props> = (props: Props) => {\r\n\tconst [field, meta] = useField(props.formikId);\r\n\r\n   \treturn (\r\n\t \t<FloatingLabel\r\n\t\t\tcontrolId=\"floatingInput\"\r\n\t\t\tlabel={props.label}\r\n\t\t\tclassName=\"mb-3 basic-input-style\"\r\n\t\t>\r\n\t\t\t<Form.Control type={props.type} placeholder={props.label} {...field} isInvalid={meta.touched && !!meta.error} />\r\n\t\t\t<Form.Control.Feedback type=\"invalid\">{meta.error}</Form.Control.Feedback>\r\n\t\t</FloatingLabel>\r\n   \t);\r\n}","import React, { useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { FormBase } from '../../../../common/formBase';\r\nimport { BasicInput } from '../../../../common/formBase/basicInput';\r\nimport { TranslateContext } from '../../../../../contexts/TranslateContext';\r\nimport * as Yup from 'yup';\r\n\r\nexport const MultiLang: React.FC<Props> = (props: Props) => {\r\n\tconst { t } = useContext(TranslateContext);\r\n\r\n\tconst schema = Yup.object({\r\n\t\tquizTitleEn: Yup.string()\r\n\t\t\t\t\t .required(t(\"page.common.required\"))\r\n\t\t\t\t\t .max(50, t(\"createQuiz.quiz.maxExceeded\"))\r\n\t\t\t\t\t .matches(/^([ 0-9a-zA-ZáéiíoóöőuúüűÁÉIÍOÓÖŐUÚÜŰ])*$/, t(\"page.common.alphanumeric\")),\r\n\t\tquizTitleHu: Yup.string()\r\n\t\t\t\t\t .required(t(\"page.common.required\"))\r\n\t\t\t\t\t .max(50, t(\"createQuiz.quiz.maxExceeded\"))\r\n\t\t\t\t\t .matches(/^([ 0-9a-zA-ZáéiíoóöőuúüűÁÉIÍOÓÖŐUÚÜŰ])*$/, t(\"page.common.alphanumeric\")),\r\n\t});\r\n\r\n\tconst initialValues = {\r\n\t\tquizTitleEn: \"\",\r\n\t\tquizTitleHu: \"\"\r\n\t};\r\n\r\n\treturn (\r\n\t\t<FormBase onSubmit={props.onSubmit} schema={schema} initialValues={initialValues} submitLabel={t(\"createQuiz.quiz.submit\")}>\r\n\t\t\t\t<BasicInput formikId=\"quizTitleEn\" label={t(\"createQuiz.quiz.nameEn\")} type='text' /> \r\n\t\t\t\t<BasicInput formikId=\"quizTitleHu\" label={t(\"createQuiz.quiz.nameHu\")} type='text' /> \r\n\t\t</FormBase>\r\n\t);\r\n}","import React, { useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { TranslateContext } from '../../../../../contexts/TranslateContext';\r\nimport * as Yup from 'yup';\r\nimport { FormBase } from '../../../../common/formBase';\r\nimport { BasicInput } from '../../../../common/formBase/basicInput';\r\nimport { FormikValues } from 'formik';\r\n\r\nexport const MonoLang: React.FC<Props> = (props: Props) => {\r\n\tconst { t, lang } = useContext(TranslateContext);\r\n\r\n\tconst schema = Yup.object({\r\n\t\tquizTitle: Yup.string()\r\n\t\t\t\t\t .required(t(\"page.common.required\"))\r\n\t\t\t\t\t .max(50, t(\"createQuiz.quiz.maxExceeded\"))\r\n\t\t\t\t\t .matches(/^([ 0-9a-zA-ZáéiíoóöőuúüűÁÉIÍOÓÖŐUÚÜŰ])*$/, t(\"page.common.alphanumeric\")),\r\n\t});\r\n\r\n\tconst initialValues = {\r\n\t\tquizTitle: \"\"\r\n\t};\r\n\r\n\tconst handleOnSubmit = (values: FormikValues) => {\r\n\t\tlet langValues: FormikValues;\r\n\r\n\t\tif (lang === 'hu') {\r\n\t\t\tlangValues = {'quizTitleHu': values.quizTitle};\r\n\t\t}\r\n\t\telse{\r\n\t\t\tlangValues = {'quizTitleEn': values.quizTitle};\r\n\t\t}\r\n\r\n\t\tprops.onSubmit(langValues);\r\n\t}\r\n\r\n\tconst label = lang === 'hu' ? t(\"createQuiz.quiz.nameHu\") : t(\"createQuiz.quiz.nameEn\");\r\n\r\n\treturn (\r\n\t\t<FormBase onSubmit={handleOnSubmit} schema={schema} initialValues={initialValues} submitLabel={t(\"createQuiz.quiz.submit\")}>\r\n\t\t\t\t<BasicInput formikId=\"quizTitle\" label={label} type='text' /> \r\n\t\t</FormBase>\r\n\t);\r\n}","import React, { useContext, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { TranslateContext } from '../../../../contexts/TranslateContext';\r\nimport { FormikValues } from 'formik';\r\nimport { Col, Form, Row } from 'react-bootstrap';\r\nimport { MultiLang } from './multiLang';\r\nimport { MonoLang } from './monoLang';\r\n\r\nexport const QuizForm: React.FC<Props> = (props: Props) => {\r\n\tconst { t, lang } = useContext(TranslateContext);\r\n\tconst [isMultiLang, setIsMultiLang] = useState(false);\r\n\r\n\tconst onSubmit = (values: FormikValues) => {\r\n\t\tprops.afterFormSubmit(\r\n\t\t\t{\r\n\t\t\t\tquizTitleEn: values.quizTitleEn ?? \"\", \r\n\t\t\t\tquizTitleHu: values.quizTitleHu ?? \"\", \r\n\t\t\t\tmultiLang: isMultiLang,\r\n\t\t\t\tlang\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleLangChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetIsMultiLang(!!event.target.checked);\r\n\t};\r\n\r\n\tconst formContent = isMultiLang ? \r\n\t\t<MultiLang onSubmit={onSubmit} /> :\r\n\t\t<MonoLang onSubmit={onSubmit} />;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className='main-title'>{t(\"createQuiz.quiz.title\")}</h3>\r\n\t\t\t<Row className=\"justify-content-md-center checkbox-row\">\r\n\t\t\t\t<Col md=\"3\">\t\t\t\t\r\n\t\t\t\t\t<Form.Check id=\"quizFormCheckbox\" label={t(\"createQuiz.quiz.multiLang\")} checked={isMultiLang} onChange={handleLangChange} />\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t{formContent}\r\n\t\t</>\r\n\t);\r\n}","import { buildThing, createThing, getStringNoLocale, getStringWithLocale, Thing, ThingBuilder, ThingLocal } from '@inrupt/solid-client';\r\nimport { RDF } from '@inrupt/vocab-common-rdf';\r\nimport { ANSWER_TEXT, QUESTION_TEXT } from '../constants/SolidQuizMissingValues';\r\nimport SOLIDQUIZ from '../helpers/SOLIDQUIZ';\r\nimport { MultiLangText } from '../models/MultiLangText';\r\nimport { QuestionContainer } from '../models/QuestionContainer';\r\nimport { QuestionCreateModel } from '../models/QuestionCreateModel';\r\nimport { QuizContainer } from '../models/QuizContainer';\r\nimport { AnswerContainer } from './../models/AnswerContainer';\r\nimport { AnswerCreateModel } from './../models/AnswerCreateModel';\r\n\r\nexport function createQuestionContainer(questionModel: QuestionCreateModel, quizUri: string): QuestionContainer {\r\n    const questionName = createQuestionName(questionModel);\r\n    const answerContainers = createAnswerThings(questionModel);\r\n\r\n    const questionThingBuilder = buildThing(createThing({ name: questionName }))\r\n        .addUrl(RDF.type, SOLIDQUIZ.Question.value);\r\n\r\n    addTextToQuestionBasedOnLang(questionThingBuilder, questionModel);\r\n\r\n    addAnswersToQuestion(questionThingBuilder, questionModel.answerOptions, quizUri, questionModel.correctAnswerId);\r\n\r\n    const questionThing = questionThingBuilder.build();\r\n\r\n    return { questionName, questionModel, question: questionThing, answers: answerContainers }; \r\n}\r\n\r\nexport function getQuestionText(quizContainer: QuizContainer, questionNumber: number) : MultiLangText {    \r\n    const questionContainer = getQuestionContainer(questionNumber, quizContainer);\r\n\r\n    return getMultiLangTextFromThing(\r\n        quizContainer.quizFormModel.multiLang, \r\n        quizContainer.quizFormModel.lang,\r\n        questionContainer.question,\r\n        QUESTION_TEXT); \r\n}\r\n\r\nexport function getAnswerText(quizContainer: QuizContainer, questionNumber: number, answerId: string) : MultiLangText {\r\n    const questionContainer = getQuestionContainer(questionNumber, quizContainer);\r\n\r\n    const answerName = createAnswerNameFromAnswerId(answerId);\r\n\r\n    const answerContainer = questionContainer.answers.find((container) => container.answerName === answerName);\r\n\r\n    if (answerContainer === undefined) {\r\n        throw new Error(`cannot find answer based on ${answerName}`);\r\n    }\r\n    \r\n    return getMultiLangTextFromThing(\r\n        quizContainer.quizFormModel.multiLang, \r\n        quizContainer.quizFormModel.lang,\r\n        answerContainer.answer,\r\n        ANSWER_TEXT);\r\n}\r\n\r\nexport function getQuestionContainer(questionNumber: number, quizContainer: QuizContainer): QuestionContainer {\r\n    const questionName = createQuestionNameFromNumber(questionNumber);\r\n\r\n    const questionContainer = quizContainer.questions.find((container) => container.questionName === questionName);\r\n\r\n    if (questionContainer === undefined) {\r\n        throw new Error(`cannot find question based on ${questionName}`);\r\n    }\r\n\r\n    return questionContainer;\r\n}\r\n\r\nexport function isAnswerExists(answerId: string, questionNumber: number, quizContainer: QuizContainer): boolean {\r\n    try {\r\n        const questionContainer = getQuestionContainer(questionNumber, quizContainer);\r\n\r\n        const answerName = createAnswerNameFromAnswerId(answerId);\r\n\r\n        const answerContainer = questionContainer.answers.find((container) => container.answerName === answerName);\r\n        \r\n        return answerContainer !== undefined;\r\n    } catch {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function getQuestionNumber(questionName: string): number {\r\n    const indexOfSeparator = questionName.indexOf('_');\r\n\r\n    const str = questionName.substring(indexOfSeparator + 1);\r\n\r\n    return +(str);\r\n}\r\n\r\nexport function getAnswerNumber(answerName: string): number {\r\n    const indexOfSeparator = answerName.indexOf('_');\r\n\r\n    const str =  answerName.substring(indexOfSeparator + 1);\r\n\r\n    return +(str);\r\n}\r\n\r\n\r\n//privates\r\nfunction createQuestionName(questionModel: QuestionCreateModel): string {\r\n    return `question_${questionModel.questionNumber}`;\r\n}\r\n\r\nfunction createQuestionNameFromNumber(questionNumber: number): string {\r\n    return `question_${questionNumber.toString()}`;\r\n}\r\n\r\nfunction createAnswerName(answerOption: AnswerCreateModel): string {\r\n    return `answer_${answerOption.answerId}`;\r\n}\r\n\r\nfunction createAnswerNameFromAnswerId(answerNumber: string): string {\r\n    return `answer_${answerNumber}`;\r\n}\r\n\r\nfunction createAnswerThings(questionModel: QuestionCreateModel): AnswerContainer[] {\r\n    const arr: AnswerContainer[] = [];\r\n\r\n    for (let i = 0; i < questionModel.answerOptions.length; i++) {\r\n        const answerOption = questionModel.answerOptions[i];\r\n        \r\n        const answerName = createAnswerName(answerOption);\r\n\r\n        const answerThingBuilder = buildThing(createThing({ name: answerName }))\r\n            .addUrl(RDF.type, SOLIDQUIZ.Answer.value);\r\n\r\n        addTextToAnswerBasedOnLang(answerThingBuilder, questionModel, answerOption);\r\n        \r\n        const answerThing = answerThingBuilder.build();\r\n        \r\n        arr.push({ answerName: answerName, answer: answerThing });\r\n    }\r\n\r\n    return arr;\r\n}\r\n\r\nfunction addTextToAnswerBasedOnLang(answerThingBuilder: ThingBuilder<ThingLocal>, questionModel: QuestionCreateModel, answerOption: AnswerCreateModel) {\r\n    if (questionModel.multiLang) {\r\n        answerThingBuilder.addStringWithLocale(ANSWER_TEXT, answerOption.textEn, \"en\")\r\n                          .addStringWithLocale(ANSWER_TEXT, answerOption.textHu, \"hu\");\r\n    }\r\n    else if (questionModel.lang === 'hu') {\r\n        answerThingBuilder.addStringNoLocale(ANSWER_TEXT, answerOption.textHu);\r\n    }\r\n    else{\r\n        answerThingBuilder.addStringNoLocale(ANSWER_TEXT, answerOption.textEn);\r\n    }\r\n}\r\n\r\nfunction addTextToQuestionBasedOnLang(questionThingBuilder: ThingBuilder<ThingLocal>, questionModel: QuestionCreateModel) {\r\n    if (questionModel.multiLang) {\r\n        questionThingBuilder.addStringWithLocale(QUESTION_TEXT, questionModel.textEn, \"en\")\r\n                          .addStringWithLocale(QUESTION_TEXT, questionModel.textHu, \"hu\");\r\n    }\r\n    else if (questionModel.lang === 'hu') {\r\n        questionThingBuilder.addStringNoLocale(QUESTION_TEXT, questionModel.textHu);\r\n    }\r\n    else{\r\n        questionThingBuilder.addStringNoLocale(QUESTION_TEXT, questionModel.textEn);\r\n    }\r\n}\r\n\r\nfunction addAnswersToQuestion(questionThingBuilder: ThingBuilder<ThingLocal>, answerOptions: AnswerCreateModel[], quizUri: string, correctAnswerId: string) {\r\n    const correctAnswerUri = getCorrectAnswerUri(answerOptions, quizUri, correctAnswerId);\r\n    questionThingBuilder.addUrl(SOLIDQUIZ.correctAnswerOption.value, correctAnswerUri);\r\n\r\n    for (let i = 0; i < answerOptions.length; i++) {\r\n        const answer = answerOptions[i];\r\n        \r\n        //this will be the answers uri, inside quizzes dataset (#answer_answerId), this is a thing\r\n        //this is just an estimation, because currently theese are local datas, after save will be permanent\r\n        const answerFutureUri = `${quizUri}#${createAnswerName(answer)}`;\r\n\r\n        questionThingBuilder.addUrl(SOLIDQUIZ.answerOption.value, answerFutureUri);\r\n    }\r\n}\r\n\r\nfunction getCorrectAnswerUri(answerOptions: AnswerCreateModel[], quizUri: string, correctAnswerId: string): string {\r\n    const correctAnswer = answerOptions.find((item) => item.answerId === correctAnswerId);\r\n\r\n    if (correctAnswer === undefined) {\r\n        throw new Error('Correct answer with answerId: 0; is missing!');\r\n    }\r\n\r\n    return `${quizUri}#${createAnswerName(correctAnswer)}`;\r\n}\r\n\r\nfunction getMultiLangTextFromThing(multiLang: boolean, lang: string, thing: Thing, propertyUrl: string): MultiLangText {\r\n    if (multiLang) {\r\n        const textEn = getStringWithLocale(thing, propertyUrl, \"en\") ?? \"\";\r\n        const textHu = getStringWithLocale(thing, propertyUrl, \"hu\") ?? \"\";\r\n        return { textEn , textHu };\r\n    }\r\n    else{\r\n        const text = getStringNoLocale(thing, propertyUrl) ?? \"\";\r\n\r\n        if (lang === 'hu') {\r\n            return { textEn: \"\" , textHu: text };\r\n        }\r\n        else{\r\n            return { textEn: text , textHu: \"\" };\r\n        }\r\n    }\r\n}\r\n","import { Thing, getBoolean, getUrlAll, getUrl, removeUrl, removeInteger, getIntegerAll } from '@inrupt/solid-client';\r\nimport { SolidDataset_Type } from '../constants/SolidDatasetType';\r\nimport { QuizContainer } from './../models/QuizContainer';\r\nimport * as questionService from '../services/QuestionService';\r\nimport * as workspaceService from '../services/WorkspaceService';\r\nimport { QuizFormModel } from './../models/QuizFormModel';\r\nimport { ANSWER_TEXT, MULTI_LANGUAGE_SUPPORT, QUESTION_TEXT, TITLE } from '../constants/SolidQuizMissingValues';\r\nimport { getMutliLang } from './LangReader';\r\nimport { QuestionContainer } from '../models/QuestionContainer';\r\nimport SOLIDQUIZ from './SOLIDQUIZ';\r\nimport { AnswerContainer } from './../models/AnswerContainer';\r\nimport { QuestionCreateModel } from '../models/QuestionCreateModel';\r\nimport { AnswerCreateModel } from './../models/AnswerCreateModel';\r\nimport { NUMBER_OF_QUESTIONS } from './../constants/SolidQuizMissingValues';\r\n\r\nexport function convert(quizThing: Thing, quizDataset: SolidDataset_Type, lang: string): QuizContainer {  \r\n    const multiLang = getBoolean(quizThing, MULTI_LANGUAGE_SUPPORT) ?? false; \r\n\r\n    const quizContainer = createQuizContainer(quizThing, multiLang, lang);\r\n\r\n    quizContainer.questions = createQuestionContainers(quizThing, quizDataset, multiLang, lang);\r\n\r\n    return quizContainer;\r\n}\r\n\r\nfunction createQuizContainer(quizThing: Thing, multiLang: boolean, lang: string): QuizContainer {\r\n    const quizFormModel = createQuizFormModel(quizThing, multiLang, lang);\r\n    const quizName = getFragmentFromUri(quizThing.url);\r\n\r\n    const questionUris = getUrlAll(quizThing, SOLIDQUIZ.quizQuestion.value);\r\n    for (let i = 0; i < questionUris.length; i++) {\r\n        const uri = questionUris[i];\r\n        quizThing = removeUrl(quizThing, SOLIDQUIZ.quizQuestion.value, uri);\r\n    }\r\n\r\n    const numberOfQuestins = getIntegerAll(quizThing, NUMBER_OF_QUESTIONS);\r\n    for (let i = 0; i < numberOfQuestins.length; i++) {\r\n        const value = numberOfQuestins[i];\r\n        quizThing = removeInteger(quizThing, NUMBER_OF_QUESTIONS, value);\r\n    }    \r\n\r\n    return {quizName, quizFormModel, quiz: quizThing, questions: []};\r\n}\r\n\r\nfunction createQuizFormModel(quizThing: Thing, multiLang: boolean, lang: string): QuizFormModel {\r\n    const multiLangData = getMutliLang(quizThing, TITLE, multiLang, lang);\r\n\r\n    return { quizTitleEn: multiLangData.textEn, quizTitleHu: multiLangData.textHu, multiLang, lang}\r\n}\r\n\r\nfunction createQuestionContainers(quizThing: Thing, quizDataset: SolidDataset_Type, multiLang: boolean, lang: string): QuestionContainer[] {\r\n    const questionUris = getUrlAll(quizThing, SOLIDQUIZ.quizQuestion.value);\r\n    \r\n    const questionThings = workspaceService.getAllThingByUris(quizDataset, questionUris);\r\n\r\n    const questionContainers: QuestionContainer[] = [];\r\n\r\n    questionThings.forEach((questionThing) => {\r\n        const quiestionContainer = createQuiestionContainer(questionThing, quizDataset, multiLang, lang);\r\n\r\n        questionContainers.push(quiestionContainer);\r\n    });\r\n\r\n    return questionContainers;\r\n}\r\n\r\nfunction createQuiestionContainer(questionThing: Thing, quizDataset: SolidDataset_Type, multiLang: boolean, lang: string): QuestionContainer {\r\n    const questionName = getFragmentFromUri(questionThing.url);\r\n\r\n    const answerContainers = createAnswerContainers(questionThing, quizDataset);\r\n\r\n    const questionModel = createQuestionCreateModel(questionThing, questionName, answerContainers, multiLang, lang);\r\n\r\n    return { questionName, questionModel, question: questionThing, answers: answerContainers };\r\n}\r\n\r\nfunction createQuestionCreateModel(questionThing: Thing, questionName: string, answerContainers: AnswerContainer[], multiLang: boolean, lang: string): QuestionCreateModel {\r\n    const questionNumber = questionService.getQuestionNumber(questionName);\r\n    \r\n    const multiLangData = getMutliLang(questionThing, QUESTION_TEXT, multiLang, lang);\r\n\r\n    const correctAnswerUri = getUrl(questionThing, SOLIDQUIZ.correctAnswerOption) ?? \"error\";\r\n    const correctAnswerName = getFragmentFromUri(correctAnswerUri);\r\n    const correctAnswerId = questionService.getAnswerNumber(correctAnswerName).toString(); \r\n\r\n    const answerModels = createAnswerCreateModels(answerContainers, multiLang, lang);\r\n\r\n    return { questionNumber, textEn: multiLangData.textEn, textHu: multiLangData.textHu, answerOptions: answerModels, correctAnswerId, multiLang, lang };\r\n}\r\n\r\nfunction createAnswerCreateModels(answerContainers: AnswerContainer[], multiLang: boolean, lang: string): AnswerCreateModel[] {\r\n    const answerModels: AnswerCreateModel[] = [];\r\n\r\n    answerContainers.forEach(answerContainer => {\r\n        const answerModel = createAnswerCreateModel(answerContainer, multiLang, lang);\r\n\r\n        answerModels.push(answerModel);\r\n    })\r\n\r\n    return answerModels;\r\n}\r\n\r\nfunction createAnswerCreateModel(answerContainer: AnswerContainer, multiLang: boolean, lang: string): AnswerCreateModel {\r\n    const answerId = questionService.getAnswerNumber(answerContainer.answerName).toString();\r\n\r\n    const multiLangData = getMutliLang(answerContainer.answer, ANSWER_TEXT, multiLang, lang);\r\n\r\n    return { answerId, textEn: multiLangData.textEn, textHu: multiLangData.textHu };\r\n}\r\n\r\nfunction createAnswerContainers(questionThing: Thing, quizDataset: SolidDataset_Type): AnswerContainer[] {\r\n    const answerUris = getUrlAll(questionThing, SOLIDQUIZ.answerOption.value);\r\n    \r\n    const answerThings = workspaceService.getAllThingByUris(quizDataset, answerUris);\r\n\r\n    const answerContainers: AnswerContainer[] = [];\r\n\r\n    answerThings.forEach(answerThing => {\r\n        const answerContainer = createAnswerContainer(answerThing);\r\n\r\n        answerContainers.push(answerContainer);\r\n    })\r\n\r\n    return answerContainers;\r\n}\r\n\r\nfunction createAnswerContainer(answerThing: Thing): AnswerContainer {\r\n    const answerName = getFragmentFromUri(answerThing.url);\r\n\r\n    return { answerName, answer: answerThing };\r\n}\r\n\r\nfunction getFragmentFromUri(uri:string): string {\r\n    const indexOfSeparator = uri.indexOf('#');\r\n\r\n    return uri.substring(indexOfSeparator + 1);\r\n}\r\n","import React from \"react\";\r\nimport { QuizContainer } from './../models/QuizContainer';\r\n\r\nexport interface IQuestionCreationContext {\r\n    questionNumber: number,     //questions order number (not for playing)\r\n    setQuestionNumber: (delegate: (val: number) => number) => void,\r\n    answerNumber: number,       //available answer option number (its an identificator), after use need to increase\r\n    setAnswerNumber: (delegate: (val: number) => number) => void,\r\n\r\n    getQuizContainer: () => QuizContainer,\r\n    isCrurrentQuestionCreatedYet: () => boolean,\r\n    isNextQuestionNew: () => boolean\r\n  }\r\n  \r\nexport const defaultQuestionCreationState = {\r\n    questionNumber: 1,\r\n    setQuestionNumber: () => {},\r\n    answerNumber: 3,     //head start, first two are always there (answer options)\r\n    setAnswerNumber: () => {},\r\n\r\n    getQuizContainer: () => {throw new Error(\"you should not call this (defaultQuestionCreationState.getQuizContainer)!\")},\r\n    isCrurrentQuestionCreatedYet: () => {throw new Error(\"you should not call this (defaultQuestionCreationState.isCrurrentLastQuestion)!\")},\r\n    isNextQuestionNew: () => {throw new Error(\"you should not call this (defaultQuestionCreationState.isNextQuestionExists)!\")}\r\n  };\r\n  \r\nexport const QuestionCreationContext = React.createContext<IQuestionCreationContext>(defaultQuestionCreationState);","import React, { useContext, useState, useEffect } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { FloatingLabel, Form } from 'react-bootstrap';\r\nimport { QuestionCreationContext } from '../../../../contexts/QuestionCreationContext';\r\n\r\nexport const AnswerInput: React.FC<Props> = ({ label, defaultValue, onChange}) => {\r\n\tconst [actValue, setActValue] = useState(defaultValue);\r\n\tconst { questionNumber } = useContext(QuestionCreationContext);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetActValue(defaultValue);\r\n\t}, [defaultValue, questionNumber]);\r\n\t\r\n\tconst handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetActValue(event.target.value);\r\n\t\tonChange(event.target.value);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<FloatingLabel\r\n\t\t\tcontrolId=\"floatingInput\"\r\n\t\t\tlabel={label}\r\n\t\t\tclassName=\"mb-3\"\r\n\t\t\t>\r\n\t\t\t\t<Form.Control type=\"text\" placeholder={label} onChange={handleChange} value={actValue} />\t\t\t\t\r\n\t\t</FloatingLabel>\r\n\t);\r\n}","import React, { useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { IoMdCheckmark } from \"@react-icons/all-files/io/IoMdCheckmark\";\r\nimport { ToggleButton } from 'react-bootstrap';\r\n\r\nexport const ToggleBtnCheck: React.FC<Props> = (props: Props) => {\r\n\tconst [checked, setChecked] = useState(props.defaultChecked)\r\n\r\n\tconst handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetChecked(event.target.checked);\r\n\r\n\t\tprops.onChange(props.value, event.target.checked);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ToggleButton\r\n\t\t\t\tkey={props.value}\r\n\t\t\t\tid={`radio-${props.value}`}\r\n\t\t\t\ttype=\"radio\"\r\n\t\t\t\tvariant=\"outline-success\"\r\n\t\t\t\tname=\"radio\"\r\n\t\t\t\tvalue={props.value}\r\n\t\t\t\tchecked={checked}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tdisabled={props.disabled}\r\n\t\t\t>\r\n\t\t\t\t<IoMdCheckmark />\r\n\t\t\t</ToggleButton>\r\n\t\t</>\r\n\t);\r\n}","import React from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { CloseButton, Col, Row } from 'react-bootstrap';\r\nimport { AnswerInput } from '../../../../../../../common/quizModification/answerInput';\r\nimport { ToggleBtnCheck } from '../../../../../../../common/quizModification/toggleBtnCheck';\r\n\r\nexport const LangQuestionAnswer: React.FC<Props> = (props: Props) => {\r\n\t\r\n\tconst handleOnCloseClick = () => {\r\n\t\tif (props.onCloseAnswer !== undefined) {\r\n\t\t\tprops.onCloseAnswer(props.answerId);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col md=\"1\" className='check-button-style'>\r\n\t\t\t\t\t<ToggleBtnCheck value={props.answerId} defaultChecked={props.answerId === props.correctAnswerId.toString()} onChange={() => {}} disabled={true} />\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md=\"10\">\r\n\t\t\t\t\t\t<AnswerInput label={props.labelEn} onChange={props.onChangeEn} defaultValue={props.defaultValueEn} />\r\n\t\t\t\t\t\t<AnswerInput label={props.labelHu} onChange={props.onChangeHu} defaultValue={props.defaultValueHu} />\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md=\"1\" className='close-button-style'>\r\n\t\t\t\t\t<CloseButton onClick={handleOnCloseClick} disabled={props.onCloseAnswer === undefined} />\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</>\r\n\t);\r\n}","import React from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { CloseButton, Col, Row } from 'react-bootstrap';\r\nimport { AnswerInput } from '../../../../../../../common/quizModification/answerInput';\r\nimport { ToggleBtnCheck } from '../../../../../../../common/quizModification/toggleBtnCheck';\r\n\r\nexport const QuestionAnswer: React.FC<Props> = (props: Props) => {\t\r\n\r\n\tconst handleOnCloseClick = () => {\r\n\t\tif (props.onCloseAnswer !== undefined) {\r\n\t\t\tprops.onCloseAnswer(props.answerId);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Row>\r\n\t\t\t<Col md=\"1\" className='check-button-style'>\r\n\t\t\t\t<ToggleBtnCheck value={props.answerId} defaultChecked={props.answerId === props.correctAnswerId.toString()} onChange={() => {}} disabled={true} />\r\n\t\t\t</Col>\r\n\t\t\t<Col md=\"10\">\r\n\t\t\t\t<AnswerInput label={props.label} onChange={props.onChange} defaultValue={props.defaultValue} /> \r\n\t\t\t</Col>\r\n\t\t\t<Col md=\"1\" className='close-button-style'>\r\n\t\t\t\t<CloseButton onClick={handleOnCloseClick} disabled={props.onCloseAnswer === undefined} />\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t);\r\n}","import { AnswerCreateModel } from \"../models/AnswerCreateModel\";\r\n\r\nexport function getOCreateAnswerInArray(arr: AnswerCreateModel[], answerId: string): AnswerCreateModel {\r\n    let result: AnswerCreateModel | null = null;\r\n    \r\n    for (let i = 0; i < arr.length; i++) {\r\n        const item = arr[i];\r\n        if (item.answerId === answerId) {\r\n            result = item;\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (result === null) {\r\n        result = { answerId, textEn: \"\", textHu: \"\" };\r\n        arr.push(result);\r\n    }\r\n\r\n    return result;\r\n}","import React, { useContext, useCallback } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { LangQuestionAnswer } from './langQuestionAnswer';\r\nimport { TranslateContext } from '../../../../../../../contexts/TranslateContext';\r\nimport { QuestionAnswer } from './questionAnswer';\r\nimport * as answerArrayHelper from '../../../../../../../helpers/AnswerArrayHelper';\r\n\r\nexport const QuestionAnswerSelector: React.FC<Props> = ({ multiLang, onChange, answerId, correctAnswerId, onCloseAnswer, defaultValue, defaultValueEn, defaultValueHu }) => {\r\n\tconst { t, lang } = useContext(TranslateContext);\r\n\r\n\tconst handleChange = useCallback((value: string) => {\r\n\t\tonChange((model) => {\r\n\t\t\tlet rv = {\r\n\t\t\t\t...model\r\n\t\t\t};\r\n\r\n\t\t\tconst answerResult = answerArrayHelper.getOCreateAnswerInArray(rv.answerOptions, answerId);\r\n\r\n\t\t\tif (lang === 'hu'){\r\n\t\t\t\tanswerResult.textHu = value;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tanswerResult.textEn = value;\r\n\t\t\t}\r\n\r\n\t\t\treturn rv;\r\n\t\t});\r\n\t}, [lang, onChange, answerId]);\r\n\r\n\tconst handleChangeEn = useCallback((value: string) => {\r\n\t\tonChange((model) => {\r\n\t\t\tlet rv = {\r\n\t\t\t\t...model\r\n\t\t\t};\r\n\r\n\t\t\tconst answerResult = answerArrayHelper.getOCreateAnswerInArray(rv.answerOptions, answerId);\r\n\r\n\t\t\tanswerResult.textEn = value;\r\n\r\n\t\t\treturn rv;\r\n\t\t});\r\n\t}, [onChange, answerId]);\r\n\r\n\tconst handleChangeHu = useCallback((value: string) => {\r\n\t\tonChange((model) => {\r\n\t\t\tlet rv = {\r\n\t\t\t\t...model\r\n\t\t\t};\r\n\r\n\t\t\tconst answerResult = answerArrayHelper.getOCreateAnswerInArray(rv.answerOptions, answerId);\r\n\r\n\t\t\tanswerResult.textHu = value;\r\n\r\n\t\t\treturn rv;\r\n\t\t});\r\n\t}, [onChange, answerId]);\r\n\r\n\tconst content = multiLang ? \r\n\t\t<LangQuestionAnswer \r\n\t\t\tanswerId={answerId} \r\n\t\t\tcorrectAnswerId = {correctAnswerId}\r\n\t\t\tonCloseAnswer={onCloseAnswer} \r\n\t\t\tlabelEn={t(\"createQuiz.question.answerOptionEn\")} \r\n\t\t\tlabelHu={t(\"createQuiz.question.answerOptionHu\")}\r\n\t\t\tdefaultValueEn={defaultValueEn}\r\n\t\t\tdefaultValueHu={defaultValueHu}\r\n\t\t\tonChangeEn={handleChangeEn}\r\n\t\t\tonChangeHu={handleChangeHu} /> :\r\n\t\t<QuestionAnswer \r\n\t\t\tanswerId={answerId}\r\n\t\t\tcorrectAnswerId = {correctAnswerId} \r\n\t\t\tonCloseAnswer={onCloseAnswer} \r\n\t\t\tlabel={t(\"createQuiz.question.answerOption\")}\r\n\t\t\tonChange={handleChange}\r\n\t\t\tdefaultValue={defaultValue} />\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{content}\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { TranslateContext } from '../../../../../../contexts/TranslateContext';\r\nimport { QuestionAnswerSelector } from './questionAnswerSelector';\r\n\r\nexport const QuestionAnswerLoader: React.FC<Props> = (props: Props) => {\r\n\tconst { lang } = useContext(TranslateContext);\r\n\r\n\tconst defaultValue = lang === 'hu' ? props.multiLangText.textHu : props.multiLangText.textEn;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<QuestionAnswerSelector \r\n\t\t\t\tkey={props.answerId} \r\n\t\t\t\tanswerId={props.answerId}\r\n\t\t\t\tcorrectAnswerId={props.correctAnswerId}\r\n\t\t\t\tmultiLang={props.multiLang} \r\n\t\t\t\tonChange={props.onChange}\r\n\t\t\t\tonCloseAnswer={props.onCloseAnswer}\r\n\t\t\t\tdefaultValue={defaultValue}\r\n\t\t\t\tdefaultValueEn={props.multiLangText.textEn}\r\n\t\t\t\tdefaultValueHu={props.multiLangText.textHu} />\r\n\t\t</>\r\n\t);\r\n}","import React, { useCallback, useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Button, Col, Row } from 'react-bootstrap';\r\nimport { TranslateContext } from '../../../../../contexts/TranslateContext';\r\nimport { QuestionAnswerLoader } from './questionAnswerLoader';\r\nimport { QuestionCreationContext } from '../../../../../contexts/QuestionCreationContext';\r\nimport { AnswerCreateModel } from '../../../../../models/AnswerCreateModel';\r\n\r\nexport const QuestionAnswers: React.FC<Props> = ({ questionModel, onChange }) => {\r\n\tconst { t } = useContext(TranslateContext);\r\n\tconst { questionNumber, answerNumber, setAnswerNumber } = useContext(QuestionCreationContext);\r\n\tconst [answers, setAnswers] = useState<JSX.Element[]>([]);\r\n\r\n\tconst closeAnswer = useCallback((answerId: string) => {\r\n\t\tonChange(model => {\r\n\t\t\tlet rv = { ...model };\r\n\r\n\t\t\tconst toClose = rv.answerOptions.find((item) => item.answerId === answerId);\r\n\r\n\t\t\tif (toClose === undefined) { \r\n\t\t\t\treturn rv;\t\t\t//deref important! never return arr directly\r\n\t\t\t}\r\n\r\n\t\t\tconst toCloseIndex = rv.answerOptions.indexOf(toClose); \r\n\t\t\trv.answerOptions.splice(toCloseIndex, 1);\r\n\t\t\trv.answerOptions = [...rv.answerOptions];\t//splice doesn't trigger the useEffects reaload...\r\n\r\n\t\t\treturn rv;\r\n\t\t})\r\n\t}, [onChange]);\r\n\r\n\tconst addAnswer = useCallback(() => {\r\n\t\tonChange(model => {\r\n\t\t\tlet rv = { ...model };\r\n\r\n\t\t\trv.answerOptions = [...rv.answerOptions, { \r\n\t\t\t\tanswerId: answerNumber.toString(),\r\n\t\t\t\ttextEn: \"\",\r\n\t\t\t\ttextHu: \"\"\r\n\t\t\t }]\r\n\r\n\t\t\treturn rv;\r\n\t\t});\r\n\t\t\r\n\t\tsetAnswerNumber(act => act + 1);\r\n\t}, [answerNumber, onChange, setAnswerNumber]);\r\n\r\n\tconst isCloseDisabled = useCallback((answerOption: AnswerCreateModel) => {\r\n\t\treturn answerOption.answerId === questionModel.correctAnswerId ||\r\n\t\t\t   (+(answerOption.answerId) - 1).toString() === questionModel.correctAnswerId;\r\n\t}, [questionModel.correctAnswerId]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetAnswers(\r\n\t\t\tquestionModel.answerOptions.map((answerOption) => \r\n\t\t\t\t<QuestionAnswerLoader \r\n\t\t\t\t\tkey={answerOption.answerId} \r\n\t\t\t\t\tanswerId={answerOption.answerId}\r\n\t\t\t\t\tcorrectAnswerId={questionModel.correctAnswerId}\r\n\t\t\t\t\tmultiLang={questionModel.multiLang} \r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tonCloseAnswer={isCloseDisabled(answerOption) ? undefined : closeAnswer}\r\n\t\t\t\t\tmultiLangText={{ textEn: answerOption.textEn, textHu: answerOption.textHu }} />)\r\n\t\t);\r\n\t}, [questionNumber, closeAnswer, addAnswer, isCloseDisabled, onChange, questionModel.answerOptions, questionModel.multiLang, questionModel.correctAnswerId]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{answers}\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Button variant=\"secondary\" onClick={addAnswer}>{t(\"createQuiz.question.addAnswerOption\")}</Button>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</>\r\n\t);\r\n}","import { QuestionCreateModel } from './../models/QuestionCreateModel';\r\n\r\nexport function validateModel(model: QuestionCreateModel): string | null {\r\n    let error = validateText(model);\r\n\r\n    if (error !== null) {\r\n        return error;\r\n    }\r\n\r\n    error = validateAnswers(model);\r\n\r\n    return error;\r\n}\r\n\r\nfunction validateText(model: QuestionCreateModel): string | null {\r\n    if (model.multiLang) {\r\n        if (model.textEn.length <= 0 || model.textHu.length <= 0) {\r\n            return \"createQuiz.question.bothLanguageRequired\";\r\n        }\r\n    }\r\n    else if (model.lang === 'hu') {\r\n        if (model.textHu.length <= 0) {\r\n            return \"createQuiz.question.textRequired\";\r\n        }\r\n    }\r\n    else {\r\n        if (model.textEn.length <= 0) {\r\n            return \"createQuiz.question.textRequired\";\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction validateAnswers(model: QuestionCreateModel): string | null {\r\n    if (model.answerOptions.length < 2) {\r\n        return \"createQuiz.question.answerCountRequired\";\r\n    }\r\n\r\n    const correctAnswer = model.answerOptions.find((item) => item.answerId === model.correctAnswerId);\r\n\r\n    if (correctAnswer === undefined) {\r\n        return \"createQuiz.question.correctAnswerRequired\";\r\n    }\r\n\r\n    if (correctAnswer.textEn.length <= 0 && correctAnswer.textHu.length <= 0) {\r\n        return \"createQuiz.question.correctAnswerRequired\";\r\n    }\r\n\r\n    for (let i = 0; i < model.answerOptions.length; i++) {\r\n        const answerOption = model.answerOptions[i];\r\n        \r\n        if (answerOption.textEn.length <= 0 && answerOption.textHu.length <= 0) {\r\n            return \"createQuiz.question.answerRequired\";\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Alert, Button, Col, Row } from 'react-bootstrap';\r\nimport { TranslateContext } from '../../../../../contexts/TranslateContext';\r\nimport * as questionCreateModelValidator from '../../../../../helpers/QuestionCreateModelValidator'\r\nimport { QuestionCreationContext } from '../../../../../contexts/QuestionCreationContext';\r\n\r\nexport const QuestionNavigationButtons: React.FC<Props> = (props: Props) => {\r\n\tconst { t } = useContext(TranslateContext);\r\n\tconst { questionNumber, isCrurrentQuestionCreatedYet } = useContext(QuestionCreationContext);\r\n\tconst [alert, setAlert] = useState<string | null>(null);\r\n\r\n\tconst onPrevClick = () => {\r\n\t\tif (questionNumber === 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tprops.onPrev();\r\n\t}\r\n\r\n\tconst onNextClick = () => {\r\n\t\tconst error = questionCreateModelValidator.validateModel(props.questionModel);\r\n\t\tif (error !== null) {\r\n\t\t\tsetAlert(t(error)); \r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tsetAlert(null);\r\n\r\n\t\tif (isCrurrentQuestionCreatedYet()) {\r\n\t\t\tprops.onNextNew();\r\n\t\t}\r\n\t\telse{\r\n\t\t\tprops.onNext();\r\n\t\t}\r\n\t}\r\n\r\n\tconst onFinishClick = () => {\r\n\t\tconst error = questionCreateModelValidator.validateModel(props.questionModel);\r\n\t\tif (error === null) {\r\n\t\t\tif (isCrurrentQuestionCreatedYet()) {\r\n\t\t\t\tprops.onNextNew();\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tprops.onNext();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tprops.onFinishClick();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Row className='question-btn-row'>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Button variant=\"secondary\" size='lg' className='question-btn' onClick={onPrevClick}>{t(\"createQuiz.question.prevQuestion\")}</Button>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Button variant=\"secondary\" size='lg' className='question-btn' onClick={onNextClick}>{t(\"createQuiz.question.nextQuestion\")}</Button>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t{alert !== null && \r\n\t\t\t<Row className='alert-row'><Alert variant='danger'>{alert}</Alert></Row>}\r\n\r\n\t\t\t<Row className='finish-btn-row'>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Button variant=\"success\" size='lg' onClick={onFinishClick}>{t(\"createQuiz.question.finishQuiz\")}</Button>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { FloatingLabel, Form } from 'react-bootstrap';\r\nimport { QuestionCreationContext } from '../../../../contexts/QuestionCreationContext';\r\n\r\nexport const QuestionTextInput: React.FC<Props> = ({ label, defaultValue, onChange}) => {\r\n\tconst [actValue, setActValue] = useState(defaultValue);\r\n\tconst { questionNumber } = useContext(QuestionCreationContext);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetActValue(defaultValue);\r\n\t}, [defaultValue, questionNumber]);\r\n\r\n\tconst handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetActValue(event.target.value);\r\n\t\tonChange(event.target.value);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<FloatingLabel controlId=\"floatingTextarea\" label={label} className=\"mb-3\">\r\n\t\t\t<Form.Control as=\"textarea\"\tplaceholder={label} className='textarea-style' onChange={handleChange} value={actValue} />\r\n\t\t</FloatingLabel>\r\n\t);\r\n}","import React from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { QuestionTextInput } from '../../../../../../common/quizModification/questionTextInput';\r\n\r\nexport const LangText: React.FC<Props> = (props: Props) => {\t\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<QuestionTextInput label={props.labelEn} onChange={props.onChangeEn} defaultValue={props.defaultValueEn} />\r\n\t\t\t<QuestionTextInput label={props.labelHu} onChange={props.onChangeHu} defaultValue={props.defaultValueHu} />\r\n\t\t</>\r\n\t);\r\n}","import React from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { QuestionTextInput } from '../../../../../../common/quizModification/questionTextInput';\r\n\r\nexport const MonoText: React.FC<Props> = (props: Props) => {\t\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<QuestionTextInput label={props.label} onChange={props.onChange} defaultValue={props.defaultValue} />\r\n\t\t</>\r\n\t);\r\n}","import React, { useCallback, useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { TranslateContext } from '../../../../../../contexts/TranslateContext';\r\nimport { LangText } from './langText';\r\nimport { MonoText } from './monoText';\r\n\r\nexport const QuestionText: React.FC<Props> = ({ multiLang, onChange, defaultValue, defaultValueEn, defaultValueHu }) => {\r\n\tconst { t, lang } = useContext(TranslateContext);\r\n\r\n\tconst handleChange = useCallback((value: string) => {\r\n\t\tonChange((model) => {\r\n\t\t\tlet rv = {\r\n\t\t\t\t...model\r\n\t\t\t};\r\n\r\n\t\t\tif (lang === 'hu'){\r\n\t\t\t\trv.textHu = value;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\trv.textEn = value;\r\n\t\t\t}\r\n\r\n\t\t\treturn rv;\r\n\t\t});\r\n\t}, [lang, onChange]);\r\n\r\n\tconst handleChangeEn = useCallback((value: string) => {\r\n\t\tonChange((model) => {\r\n\t\t\treturn {\r\n\t\t\t\t...model,\r\n\t\t\t\ttextEn: value\r\n\t\t\t};\r\n\t\t});\r\n\t}, [onChange]);\r\n\r\n\tconst handleChangeHu = useCallback((value: string) => {\r\n\t\tonChange((model) => {\r\n\t\t\treturn {\r\n\t\t\t\t...model,\r\n\t\t\t\ttextHu: value\r\n\t\t\t};\r\n\t\t});\r\n\t}, [onChange]);\r\n\r\n\tconst content = multiLang ? \r\n\t\t<LangText \r\n\t\t\tlabelEn={t(\"createQuiz.question.textEn\")} \r\n\t\t\tlabelHu={t(\"createQuiz.question.textHu\")} \r\n\t\t\tdefaultValueEn={defaultValueEn}\r\n\t\t\tdefaultValueHu={defaultValueHu}\r\n\t\t\tonChangeEn={handleChangeEn}\r\n\t\t\tonChangeHu={handleChangeHu} /> :\r\n\t\t<MonoText label={t(\"createQuiz.question.text\")} defaultValue={defaultValue} onChange={handleChange} />\r\n\r\n\treturn (\r\n\t\t<Row>\r\n\t\t\t<Col>\r\n\t\t\t\t{content}\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t);\r\n}","import React, { useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { TranslateContext } from '../../../../../contexts/TranslateContext';\r\nimport { QuestionText } from './questionText';\r\n\r\nexport const QuestionTextLoader: React.FC<Props> = (props: Props) => {\r\n\tconst { lang } = useContext(TranslateContext);\r\n\r\n\tconst defaultValue = lang === 'hu' ? props.questionModel.textHu : props.questionModel.textEn;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<QuestionText \r\n\t\t\t\tmultiLang={props.questionModel.multiLang} \r\n\t\t\t\tonChange={props.onChange} \r\n\t\t\t\tdefaultValue={defaultValue}\r\n\t\t\t\tdefaultValueEn={props.questionModel.textEn}\r\n\t\t\t\tdefaultValueHu={props.questionModel.textHu} />\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Container } from 'react-bootstrap';\r\nimport { TranslateContext } from '../../../../contexts/TranslateContext';\r\nimport { QuestionAnswers } from './questionAnswers';\r\nimport { QuestionCreateModel } from '../../../../models/QuestionCreateModel';\r\nimport { QuestionCreationContext } from '../../../../contexts/QuestionCreationContext';\r\nimport { QuestionNavigationButtons } from './questionNavigationButtons';\r\nimport { QuestionTextLoader } from './questionTextLoader';\r\nimport * as questionService from '../../../../services/QuestionService';\r\n\r\nexport const QuestionForm: React.FC<Props> = (props: Props) => {\r\n\tconst { t, lang } = useContext(TranslateContext);\r\n\tconst { questionNumber, setQuestionNumber, answerNumber, setAnswerNumber, \r\n\t\t\tgetQuizContainer, isCrurrentQuestionCreatedYet, isNextQuestionNew } = useContext(QuestionCreationContext);\r\n\tconst [questionModel, setQuestionModel] = useState<QuestionCreateModel>(\r\n\t\t\t{ questionNumber: questionNumber, \r\n\t\t\t\ttextEn: \"\", \r\n\t\t\t\ttextHu: \"\", \r\n\t\t\t\tanswerOptions: [{answerId: \"1\", textEn: \"\", textHu: \"\"},\r\n\t\t\t\t\t\t\t\t{answerId: \"2\", textEn: \"\", textHu: \"\"}], \r\n\t\t\t\tcorrectAnswerId: \"1\", \r\n\t\t\t\tmultiLang: props.multiLang, \r\n\t\t\t\tlang }\r\n\t);\r\n\tconst [titleCreateOrModify, setTitleCreateOrModify] = useState(t(\"createQuiz.question.titleCreate\"));\r\n\r\n\tuseEffect(() => {\r\n\t\tif (props.questionCreateModel !== undefined) {\r\n\t\t\tsetQuestionModel(props.questionCreateModel);\r\n\t\t}\r\n\t}, [props.questionCreateModel]);\r\n\r\n\tconst setToNewEmptyForm = () => {\r\n\t\tsetQuestionModel({ \r\n\t\t\tquestionNumber: questionNumber + 1, \r\n\t\t\ttextEn: \"\", \r\n\t\t\ttextHu: \"\", \r\n\t\t\tanswerOptions: [ {answerId: answerNumber.toString(), textEn: \"\", textHu: \"\"},\r\n\t\t\t\t\t\t\t {answerId: (answerNumber + 1).toString(), textEn: \"\", textHu: \"\"}\r\n\t\t \t], \r\n\t\t\tcorrectAnswerId: answerNumber.toString(), \r\n\t\t\tmultiLang: props.multiLang, \r\n\t\t\tlang \r\n\t\t});\r\n\r\n\t\tsetQuestionNumber(act => act + 1);\r\n\t\tsetAnswerNumber(act => act + 2);\t\t\t//increase to the next available (after the 2 def)\t\r\n\t\tsetTitleCreateOrModify(t(\"createQuiz.question.titleCreate\"));\r\n\t}\r\n\r\n\tconst onPrev = () => {\r\n\t\tif (!isCrurrentQuestionCreatedYet()) {\r\n\t\t\tprops.questionSubmitted(questionModel);\r\n\t\t}\r\n\r\n\t\tconst prevQuestionModel = questionService.getQuestionContainer(questionNumber - 1, getQuizContainer()).questionModel;\r\n\t\tsetQuestionModel(prevQuestionModel);\r\n\r\n\t\tsetQuestionNumber(act => act - 1);\r\n\t\tsetTitleCreateOrModify(t(\"createQuiz.question.titleModify\"));\r\n\t}\r\n\r\n\tconst onNext = () => {\r\n\t\tprops.questionSubmitted(questionModel);\r\n\r\n\t\tif (isNextQuestionNew()) {\r\n\t\t\tsetToNewEmptyForm();\r\n\t\t}\r\n\t\telse{\r\n\t\t\tconst nextQuestionModel = questionService.getQuestionContainer(questionNumber + 1, getQuizContainer()).questionModel;\r\n\t\t\tsetQuestionModel(nextQuestionModel);\r\n\r\n\t\t\tsetQuestionNumber(act => act + 1);\r\n\t\t\tsetTitleCreateOrModify(t(\"createQuiz.question.titleModify\"));\r\n\t\t}\r\n\t}\r\n\r\n\tconst onNextNew = () => {\r\n\t\tprops.questionSubmitted(questionModel);\r\n\r\n\t\tsetToNewEmptyForm();\t\t\r\n\t}\r\n\r\n\tconst handleClickFinish = () => {\r\n\t\tprops.finishQuiz();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container className=\"justify-content-md-center\">\r\n\t\t\t<h3 className='main-title'>{questionNumber.toString()}. {titleCreateOrModify}</h3>\r\n\r\n\t\t\t<QuestionTextLoader questionModel={questionModel} onChange={setQuestionModel} />\r\n\t\t\t<QuestionAnswers questionModel={questionModel} onChange={setQuestionModel} /> \r\n\r\n\t\t\t<QuestionNavigationButtons questionModel={questionModel} onPrev={onPrev} onNext={onNext} onNextNew={onNextNew} onFinishClick={handleClickFinish} />\r\n\t\t</Container>\r\n\t);\r\n}","import React, { useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { defaultQuestionCreationState, QuestionCreationContext } from '../../../contexts/QuestionCreationContext';\r\n\r\nexport const QuestionCreationContextComponent: React.FC<Props> = (props: Props) => {\r\n\tconst [questionNumber, setQuestionNumber] = useState(defaultQuestionCreationState.questionNumber);\r\n\tconst [answerNumber, setAnswerNumber] = useState(defaultQuestionCreationState.answerNumber);\r\n\r\n\tconst getQuizContainer = () => {\r\n\t\treturn props.quizContainer;\r\n\t}\r\n\r\n\tconst isCrurrentQuestionCreatedYet = () => {\r\n\t\treturn props.quizContainer.questions.length < questionNumber;\t\t//questionNumber is larger then the length, means its not inside it\r\n\t}\r\n\r\n\tconst isNextQuestionNew = () => {\r\n\t\treturn props.quizContainer.questions.length < (questionNumber + 1);\t\t//questionNumber is larger then the length, means its not inside it\r\n\t}\r\n\r\n\treturn (\r\n\t\t<QuestionCreationContext.Provider value={{\r\n\t\t\tquestionNumber,\r\n\t\t\tsetQuestionNumber,\r\n\t\t\tanswerNumber,\r\n\t\t\tsetAnswerNumber,\r\n\r\n\t\t\tgetQuizContainer,\r\n\t\t\tisCrurrentQuestionCreatedYet,\r\n\t\t\tisNextQuestionNew\r\n\t\t}}>\r\n\t\t\t{props.children}\r\n\t\t</QuestionCreationContext.Provider>\r\n\t);\r\n}","import React, { useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Button, Col, Container, Modal, Row } from 'react-bootstrap';\r\nimport { TranslateContext } from '../../../../contexts/TranslateContext';\r\n\r\nexport const QuizShareModeModal: React.FC<Props> = (props: Props) => {\r\n\tconst { t } = useContext(TranslateContext);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal show={props.show} onHide={props.onHide} centered>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>{t(\"shareQuiz.modal.publish.title\")}</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t{t(\"shareQuiz.modal.publish.text\")}\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<Button variant=\"primary\" className='btn-style' onClick={() => props.onConfirm(false)}>{t(\"shareQuiz.modal.publish.share\")}</Button>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<Button variant=\"primary\" className='btn-style' onClick={() => props.onConfirm(true)}>{t(\"shareQuiz.modal.publish.publish\")}</Button>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n}","import React, { useCallback, useEffect, useState, useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { FloatingLabel, Form, Row, ToggleButton } from 'react-bootstrap';\r\nimport { TranslateContext } from '../../../../../contexts/TranslateContext';\r\n\r\nexport const QuizShareModalBody: React.FC<Props> = ({ friendList, setSelected }) => {\r\n\tconst { t } = useContext(TranslateContext);\r\n\tconst [elements, setElements] = useState<JSX.Element[]>([]);\r\n\tconst [elementActive, setElementActive] = useState(\"\");\r\n\t\r\n\tconst onSelectChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetElementActive(event.target.value);\r\n\t\tsetSelected(event.target.value);\r\n\t}, [setSelected]);\r\n\t\r\n\tconst onSelectClick = useCallback((value: string) => {\r\n\t\tsetElementActive(value);\r\n\t\tsetSelected(value);\r\n\t}, [setSelected]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetElements(\r\n\t\t\tfriendList.map((friend, indx) => \r\n\t\t\t\t<Row key={\"row\" + indx} className='row-style'>\r\n\t\t\t\t\t<ToggleButton \r\n\t\t\t\t\t\tkey={\"btnKey\" + indx} \r\n\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\tvariant=\"outline-dark\" \r\n\t\t\t\t\t\tchecked={friend === elementActive}\r\n        \t\t\t\tvalue={friend}\r\n\t\t\t\t\t\tonChange={onSelectChange} \r\n\t\t\t\t\t\tonClick={() => {onSelectClick(friend)}}>\r\n\t\t\t\t\t\t\t{friend}\r\n\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t</Row>)\r\n\t\t);\r\n\t}, [friendList, elementActive, onSelectChange, onSelectClick]);\r\n\r\n\treturn (\r\n\t\t<>\t\t\t\r\n\t\t\t{elements}\r\n\r\n\t\t\t<FloatingLabel\r\n\t\t\t\tcontrolId=\"floatingInput\"\r\n\t\t\t\tlabel={t(\"shareQuiz.modal.share.webid\")}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Form.Control type=\"text\" placeholder={t(\"shareQuiz.modal.share.webid\")} onChange={onSelectChange} value={elementActive} />\t\t\t\t\r\n\t\t\t</FloatingLabel>\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Button, Container, Modal, Row } from 'react-bootstrap';\r\nimport { TranslateContext } from '../../../../contexts/TranslateContext';\r\nimport { QuizShareModalBody } from './quizShareModalBody';\r\n\r\nexport const QuizShareModal: React.FC<Props> = (props: Props) => {\r\n\tconst { t } = useContext(TranslateContext);\r\n\tconst [selectedPerson, setSelectedPerson] = useState<string | null>(null);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal show={props.show} onHide={props.onHide} centered>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>{t(\"shareQuiz.modal.share.title\")}</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t{t(\"shareQuiz.modal.share.text\")}\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<QuizShareModalBody friendList={props.friendList} setSelected={setSelectedPerson} />\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button variant=\"secondary\" className='btn-style' onClick={props.onHide}>{t(\"shareQuiz.modal.share.cancel\")}</Button>\r\n\t\t\t\t\t<Button \r\n\t\t\t\t\t\tvariant=\"primary\" \r\n\t\t\t\t\t\tclassName='btn-style' \r\n\t\t\t\t\t\tonClick={() => props.onConfirm(selectedPerson ?? \"error\")} \r\n\t\t\t\t\t\tdisabled={selectedPerson === null}>\r\n\t\t\t\t\t\t\t{t(\"shareQuiz.modal.share.share\")}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n}","import React, { useState, useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport { IoMdShare } from \"@react-icons/all-files/io/IoMdShare\";\r\nimport { QuizShareModeModal } from './quizShareModeModal';\r\nimport { SpinnerContext } from '../../../contexts/SpinnerContext';\r\nimport { checkForQuizShare, getFriendsList, handlePublishQuiz, shareQuizWithFriend } from '../../../helpers/SharesHelper';\r\nimport { useSession } from '@inrupt/solid-ui-react';\r\nimport { InfoModal } from '../infoModal';\r\nimport { TranslateContext } from '../../../contexts/TranslateContext';\r\nimport { WorkspaceContext } from '../../../contexts/WorkspaceContext';\r\nimport { QuizShareModal } from './quizShareModal';\r\n\r\nexport const QuizShare: React.FC<Props> = (props: Props) => {\r\n\tconst { session } = useSession();\r\n\tconst { t } = useContext(TranslateContext);\r\n\tconst { SpinAround } = useContext(SpinnerContext);\r\n\tconst { workspaceUrl, webId } = useContext(WorkspaceContext);\r\n\tconst [shareModeModalShow, setShareModeModalShow] = useState(false);\r\n\tconst [infoModal, setInfoModal] = useState<string | null>(null);\r\n\tconst [shareModalShow, setShareModalShow] = useState(false);\r\n\tconst [friendList, setFriendList] = useState<string[]>([]);\r\n\r\n\tconst handleConfirm = (isPublish: boolean) => {\r\n\t\tsetShareModeModalShow(false);\r\n\r\n\t\tif (isPublish) {\r\n\t\t\thandlePublish();\r\n\t\t}\r\n\t\telse{\r\n\t\t\tSpinAround(async () => {\r\n\t\t\t\tconst friendList = await getFriendsList(webId, session.fetch);\r\n\t\t\t\t\r\n\t\t\t\tsetFriendList(friendList);\r\n\t\t\t\tsetShareModalShow(true);\r\n\t\t\t});\t\r\n\t\t}\r\n\t};\r\n\r\n\tconst handlePublish = () => {\t\t\t\r\n\t\tSpinAround(async () => {\r\n\t\t\tconst quizAlreadyshared = await checkForQuizShare(props.datasetAndThing, session.fetch);\r\n\r\n\t\t\tif (quizAlreadyshared) {\r\n\t\t\t\tsetInfoModal(t(\"shareQuiz.modal.publish.alreadyPublished\"));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tawait handlePublishQuiz(webId, workspaceUrl, props.datasetAndThing, session.fetch);\r\n\t\r\n\t\t\t\tsetInfoModal(t(\"shareQuiz.modal.publish.ok\"));\r\n\t\t\t}\r\n\t\t});\t\r\n\t};\r\n\r\n\tconst handleShare = (agentUri: string) => {\r\n\t\tsetShareModalShow(false);\r\n\r\n\t\tSpinAround(async () => {\r\n\t\t\tconst quizAlreadyshared = await checkForQuizShare(props.datasetAndThing, session.fetch);\r\n\r\n\t\t\tif (quizAlreadyshared) {\r\n\t\t\t\tsetInfoModal(t(\"shareQuiz.modal.publish.alreadyPublished\"));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tawait shareQuizWithFriend(webId, agentUri, workspaceUrl, props.datasetAndThing, session.fetch);\r\n\t\r\n\t\t\t\tsetInfoModal(t(\"shareQuiz.modal.share.ok\"));\r\n\t\t\t}\r\n\t\t});\t\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button variant='light' onClick={() => setShareModeModalShow(true)}><IoMdShare /></Button>\r\n\t\t\t\r\n\t\t\t<QuizShareModeModal show={shareModeModalShow} onHide={() => setShareModeModalShow(false)} onConfirm={handleConfirm} />\r\n\r\n\t\t\t<QuizShareModal show={shareModalShow} onHide={() => setShareModalShow(false)} onConfirm={handleShare} friendList={friendList} />\r\n\r\n\t\t\t<InfoModal show={infoModal !== null} onHide={() => setInfoModal(null)} body={infoModal ?? \"error\"} />\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Button, Row } from 'react-bootstrap';\r\nimport { TranslateContext } from '../../../../contexts/TranslateContext';\r\nimport { PageSwitcherContext } from '../../../../contexts/PageSwitcherContext';\r\nimport { getString } from './../../../../helpers/LangReader';\r\nimport { getBoolean, getInteger } from '@inrupt/solid-client';\r\nimport { TITLE, MULTI_LANGUAGE_SUPPORT, NUMBER_OF_QUESTIONS } from './../../../../constants/SolidQuizMissingValues';\r\nimport { QuizShare } from '../../../common/quizShare';\r\n\r\nexport const CreationResult: React.FC<Props> = (props: Props) => {\r\n\tconst { t, lang } = useContext(TranslateContext);\t\r\n\tconst { GoBack } = useContext(PageSwitcherContext);\r\n\tconst [title, setTitle] = useState(\"\");\r\n\tconst [questionNumber, setQuestionNumber] = useState(\"\");\r\n\r\n\tuseEffect(() => {\r\n\t\tconst multiLang = getBoolean(props.quizData.thing, MULTI_LANGUAGE_SUPPORT) ?? false;\r\n\t\tconst actTitle = getString(props.quizData.thing, TITLE, multiLang, lang);\r\n\t\tconst actQuestionNumber = getInteger(props.quizData.thing, NUMBER_OF_QUESTIONS) ?? -1;\r\n\r\n\t\tsetTitle(actTitle);\r\n\t\tsetQuestionNumber(actQuestionNumber.toString());\r\n\t}, [props.quizData.thing, lang]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className='main-title'>{props.isModify ? t(\"createQuiz.result.modifyTitle\") : t(\"createQuiz.result.title\")}</h3>\r\n\r\n\t\t\t<Row>\r\n\t\t\t\t<p className='quizTitle-text'>{t(\"createQuiz.result.quizTitle\")} {title}</p>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<p className='questionNumber-text'>{t(\"createQuiz.result.questionNumber\")} {questionNumber}</p>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<p className='sharing-text'>{t(\"createQuiz.result.share\")}</p>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\t\t\t\t\r\n\t\t\t\t<QuizShare datasetAndThing={props.quizData} />\r\n\t\t\t</Row>\r\n\r\n\t\t\t<Button variant='light' className='back-btn' onClick={() => GoBack()}>{t(\"page.common.back\")}</Button>\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { TranslateContext } from '../../../contexts/TranslateContext';\r\nimport { PageSwitcherContext } from '../../../contexts/PageSwitcherContext';\r\nimport { Alert, Button } from 'react-bootstrap';\r\nimport { QuizForm } from './quizForm';\r\nimport { QuizContainer } from './../../../models/QuizContainer';\r\nimport * as quizService from '../../../services/QuizService'\r\nimport * as quizResultService from '../../../services/QuizResultService'\r\nimport * as questionService from '../../../services/QuestionService'\r\nimport * as quizContainerConverter from '../../../helpers/QuizContainerConverter'\r\nimport { QuizFormModel } from '../../../models/QuizFormModel';\r\nimport { WorkspaceContext } from './../../../contexts/WorkspaceContext';\r\nimport { QuestionForm } from './questionForm';\r\nimport { useSession } from '@inrupt/solid-ui-react';\r\nimport { SpinnerContext } from '../../../contexts/SpinnerContext';\r\nimport { QuestionCreateModel } from './../../../models/QuestionCreateModel';\r\nimport { QuestionCreationContextComponent } from '../../common/questionCreationContextComponent';\r\nimport { InfoModal } from '../../common/infoModal';\r\nimport { CreationResult } from './creationResult';\r\nimport { DatasetAndThing } from '../../../models/DatasetAndThing';\r\n\r\nexport const CreateQuiz: React.FC<Props> = (props: Props) => {\r\n\tconst { session } = useSession();\r\n\tconst { t, lang } = useContext(TranslateContext);\r\n\tconst { GoBack } = useContext(PageSwitcherContext);\r\n\tconst { workspaceUrl, webId } = useContext(WorkspaceContext);\r\n\tconst { SpinAround } = useContext(SpinnerContext);\r\n\tconst [alert, setAlert] = useState<string | null>(null);\r\n\tconst [quizContainer, setQuizContainer] = useState<QuizContainer | null>(null);\r\n\tconst [firstFormModel, setFirstFormModel] = useState<QuestionCreateModel | undefined>(undefined);\r\n\tconst [modalErrorMsg, setModalErrorMsg] = useState<string | null>(null);\r\n\tconst [creationResult, setCreationResult] = useState<DatasetAndThing | null>(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (props.datasetAndThing !== undefined) {\r\n\t\t\tlet propQuizContainer: QuizContainer | null = null;\r\n\r\n\t\t\ttry {\r\n\t\t\t\tpropQuizContainer = quizContainerConverter.convert(props.datasetAndThing.thing, props.datasetAndThing.dataset, lang);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tsetModalErrorMsg(t(\"modifyQuiz.modal.modificationFailed\"));\r\n\t\t\t}\r\n\r\n\t\t\tsetQuizContainer(propQuizContainer);\r\n\t\t\tif (propQuizContainer !== null) {\r\n\t\t\t\tsetFirstFormModel(propQuizContainer.questions.find((item) => item.questionModel.questionNumber === 1)?.questionModel);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [props.datasetAndThing, lang, t]);\r\n\r\n\tconst quizFormSubmitted = (quizFormModel: QuizFormModel) => {\r\n\t\tSpinAround(async () => {\r\n\t\t\t//create quizName and check if reserved\r\n\t\t\tconst quizName = quizService.createQuizResourceName(quizFormModel); //lets be the quiz things name and also the datasets name\r\n\t\t\tconst nameIsAlreadyReserved = await quizService.checkQuizTitleIsAlreadyReserved(quizName, workspaceUrl, session.fetch);\r\n\r\n\t\t\tif (nameIsAlreadyReserved) {\r\n\t\t\t\tsetAlert(t(\"createQuiz.quiz.nameIsAlreadyReserved\"));\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t//if not reserved create container\r\n\t\t\t\tsetQuizContainer(quizService.createQuizContainer(quizName, quizFormModel, webId));\r\n\t\t\t\tsetAlert(null);\r\n\t\t\t}\r\n\t\t});\t\t\r\n\t}\r\n\r\n\tconst questionSubmitted = (questionModel: QuestionCreateModel) => {\r\n\t\tif (quizContainer === null) {\r\n\t\t\tconsole.log(\"questionSubmitted called when quizContainer is missing!\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//create question container\r\n\t\tconst quizUri = quizService.getSpecificQuizUri(workspaceUrl, quizContainer.quizName);\r\n\t\tconst questionContainer = questionService.createQuestionContainer(questionModel, quizUri);\r\n\r\n\t\t//update container\r\n\t\tsetQuizContainer((model) => {\r\n\t\t\tif( model === null){\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tlet rv = {\r\n\t\t\t\t...model\r\n\t\t\t};\r\n\r\n\t\t\t//replace or push new to questions\r\n\t\t\tconst element = rv.questions.find((item) => item.questionName === questionContainer.questionName);\r\n\t\t\tif (element !== undefined) {\r\n\t\t\t\tconst indexOf = rv.questions.indexOf(element);\r\n\t\t\t\trv.questions[indexOf] = questionContainer;\r\n\t\t\t}\r\n\t\t\telse{ \r\n\t\t\t\trv.questions.push(questionContainer);\r\n\t\t\t}\r\n\r\n\t\t\treturn rv;\r\n\t\t});\r\n\t}\r\n\r\n\tconst finishQuiz = () => {\r\n\t\tSpinAround(async () => {\t\r\n\t\t\tif (quizContainer === null) {\r\n\t\t\t\tconsole.log(\"finishQuiz called when quizContainer is null!\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst savedQuizThing = await quizService.saveNewQuiz(quizContainer, workspaceUrl, session.fetch);\r\n\t\t\tawait quizResultService.createQuizResultsContainer(workspaceUrl, quizContainer.quizName, session.fetch); \r\n\r\n\t\t\tsetCreationResult(savedQuizThing);\r\n\t\t});\t\r\n\t}\r\n\r\n\tif (creationResult !== null) {\r\n\t\treturn <CreationResult quizData={creationResult} isModify={firstFormModel !== undefined} />;\r\n\t}\r\n\r\n\tconst content = quizContainer === null ? \r\n\t\t<QuizForm afterFormSubmit={quizFormSubmitted} /> : \r\n\t\t<QuestionCreationContextComponent quizContainer={quizContainer}> \r\n\t\t\t<QuestionForm \r\n\t\t\t\tmultiLang={quizContainer.quizFormModel.multiLang} \r\n\t\t\t\tquestionSubmitted={questionSubmitted} \r\n\t\t\t\tfinishQuiz={finishQuiz} \r\n\t\t\t\tquestionCreateModel={firstFormModel} />\r\n\t\t</QuestionCreationContextComponent>\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{content}\r\n\t\t\t{alert !== null && \r\n\t\t\t<Alert variant='danger'>{alert}</Alert>}\r\n\t\t\t<Button variant='light' className='back-btn' onClick={() => GoBack()}>{t(\"page.common.back\")}</Button>\r\n\r\n\t\t\t<InfoModal show={modalErrorMsg !== null} onHide={() => setModalErrorMsg(null)} body={modalErrorMsg ?? \"error\"} />\r\n\t\t</>\r\n\t);\r\n}","import { SolidDataset_Type, SolidFetch_Type } from '../constants/SolidDatasetType';\r\nimport * as shareLinksService from '../services/ShareLinksService';\r\nimport * as aclService from '../services/AclService';\r\nimport { getSolidDataset, getBoolean, removeThing, getStringNoLocale } from '@inrupt/solid-client';\r\nimport { getUrl } from '@inrupt/solid-client';\r\nimport SOLIDQUIZ from './SOLIDQUIZ';\r\nimport { getThing } from '@inrupt/solid-client';\r\nimport { MULTI_LANGUAGE_SUPPORT } from '../constants/SolidQuizMissingValues';\r\nimport { getString } from './LangReader';\r\nimport { TITLE } from './../constants/SolidQuizMissingValues';\r\nimport { ShareLinkModel } from '../models/ShareLinkModel';\r\nimport { SOLID_QUIZ_POD_PROFILE } from '../constants/DefaultValues';\r\nimport { Thing } from '@inrupt/solid-client';\r\nimport { saveSolidDatasetAt } from '@inrupt/solid-client';\r\nimport { FOAF } from '@inrupt/vocab-common-rdf';\r\nimport { ShareLinkFetchModel } from '../models/ShareLinkFetchModel';\r\n\r\nexport async function getAllShareThingByShareLink(workspaceUrl: string, fetch: SolidFetch_Type): Promise<ShareLinkModel[]> {\r\n    const shareLinks = await shareLinksService.getAllShareLink(workspaceUrl, fetch);\r\n\r\n    //fetch together\r\n    const promiseList: Promise<ShareLinkFetchModel>[] = [];\r\n    for (let i = 0; i < shareLinks.length; i++) {\r\n        const shareLink = shareLinks[i];\r\n\r\n        const resourceUri = getUrl(shareLink, SOLIDQUIZ.shareLinksLink.value) ?? \"error\";\r\n\r\n        promiseList.push(tryGetShare(resourceUri, shareLink, fetch));\r\n    }    \r\n    const fetchedPromises = await Promise.all(promiseList);\r\n\r\n    const rv: ShareLinkModel[] = [];\r\n\r\n    for (let i = 0; i < fetchedPromises.length; i++) {\r\n        const shareLinkFetchModel = fetchedPromises[i];\r\n\r\n        if (shareLinkFetchModel.shareDataset !== null) {\r\n            const thing = getThing(shareLinkFetchModel.shareDataset, shareLinkFetchModel.resourceUri);\r\n\r\n            if (thing !== null) {\r\n                const isPubliclyShared = checkIfPubliclyShared(shareLinkFetchModel.shareLink);\r\n\r\n                rv.push({ shareThing: thing, shareLinkThing: shareLinkFetchModel.shareLink, isPubliclyShared });\r\n            }\r\n        }\r\n    }\r\n\r\n    return rv;\r\n}\r\n\r\nasync function tryGetShare(resourceUri: string, shareLink: Thing, fetch: SolidFetch_Type): Promise<ShareLinkFetchModel> {\r\n    let shareDataset = await tryGetShareWhitoutFetch(resourceUri);\r\n    if (shareDataset === null) {\r\n        shareDataset = await tryGetShareWitchFetch(resourceUri, fetch);\r\n    }\r\n\r\n    return { resourceUri, shareLink, shareDataset };\r\n}\r\n\r\nexport async function fetchQuizTitle(quizUri: string, lang: string, fetch: SolidFetch_Type): Promise<string | null> {\r\n    try {        \r\n        const dataset = await getSolidDataset(quizUri, { fetch });\r\n        const thing = getThing(dataset, quizUri);\r\n\r\n        if (thing === null){\r\n            return \"fetch failed\";\r\n        }\r\n\r\n        const multiLang = getBoolean(thing, MULTI_LANGUAGE_SUPPORT) ?? false;\r\n        const title = getString(thing, TITLE, multiLang, lang);\r\n\r\n        return title;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function fetchQuizTitleFromResult(quizResultUri: string, lang: string, fetch: SolidFetch_Type): Promise<string | null> {\r\n    try {        \r\n        const dataset = await getSolidDataset(quizResultUri, { fetch });\r\n        const thing = getThing(dataset, quizResultUri);\r\n\r\n        if (thing === null){\r\n            return \"fetch failed\";\r\n        }\r\n\r\n        const quizUri = getUrl(thing, SOLIDQUIZ.quizResultOf.value) ?? \"error\";\r\n        \r\n        return fetchQuizTitle(quizUri, lang, fetch);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function removeSharing(shareLinkModel: ShareLinkModel, fetch: SolidFetch_Type) {\r\n    //take away acl from resource (set the specified acls every right to false)\r\n    const resourceUri = getUrl(shareLinkModel.shareThing, SOLIDQUIZ.sharedResource.value) ?? \"error\";\r\n    if (shareLinkModel.isPubliclyShared) {\r\n        await aclService.takeAwayPublicAcl(resourceUri, fetch);\r\n    }\r\n    else {\r\n        const agentWebId = getUrl(shareLinkModel.shareLinkThing, SOLIDQUIZ.shareLinksIndividual.value) ?? \"error\";\r\n        await aclService.takeAwayAgentAcl(resourceUri, agentWebId, fetch);\r\n    }\r\n    \r\n    //remove shares source\r\n    if (shareLinkModel.isPubliclyShared) {\r\n        await removePublicShares(shareLinkModel.shareThing);\r\n    }\r\n    else {\r\n        await removeAgentShares(shareLinkModel.shareThing, fetch);\r\n    }\r\n\r\n    //remove link\r\n    removeShareLink(shareLinkModel.shareLinkThing, fetch);\r\n}\r\n\r\nexport async function tryGetName(webId: string): Promise<string | null> {\r\n    try {\r\n        const dataset = await getSolidDataset(webId);\r\n        const thing = getThing(dataset, webId);\r\n        if (thing === null) {\r\n            return null;\r\n        }\r\n\r\n        let name = getStringNoLocale(thing, FOAF.firstName);\r\n        if (name === null) {\r\n            name = getStringNoLocale(thing, FOAF.name);\r\n        }\r\n\r\n        return name;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n\r\n//privates\r\nasync function tryGetShareWhitoutFetch(datasetUri: string): Promise<SolidDataset_Type | null> {\r\n    try {\r\n        const shareDataset = await getSolidDataset(datasetUri);\r\n        return shareDataset;\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function tryGetShareWitchFetch(datasetUri: string, fetch: SolidFetch_Type): Promise<SolidDataset_Type | null> {\r\n    try {\r\n        const shareDataset = await getSolidDataset(datasetUri, { fetch });\r\n        return shareDataset;\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction checkIfPubliclyShared(shareLinkThing: Thing){\r\n    const individualWebId = getUrl(shareLinkThing, SOLIDQUIZ.shareLinksIndividual.value);\r\n\r\n    return individualWebId === SOLID_QUIZ_POD_PROFILE;\r\n}\r\n\r\nasync function removePublicShares(shareThing: Thing) {\r\n    let shareDataset = await getSolidDataset(shareThing.url);\r\n\r\n    shareDataset = removeThing(shareDataset, shareThing.url);\r\n\r\n    await saveSolidDatasetAt(shareThing.url, shareDataset);\r\n}\r\n\r\nasync function removeAgentShares(shareThing: Thing, fetch: SolidFetch_Type) {\r\n    let shareDataset = await getSolidDataset(shareThing.url, { fetch });\r\n\r\n    shareDataset = removeThing(shareDataset, shareThing.url);\r\n\r\n    await saveSolidDatasetAt(shareThing.url, shareDataset, { fetch });\r\n}\r\n\r\nasync function removeShareLink(shareLinkThing: Thing, fetch: SolidFetch_Type) {\r\n    let shareLinkDataset = await getSolidDataset(shareLinkThing.url, { fetch });\r\n\r\n    shareLinkDataset = removeThing(shareLinkDataset, shareLinkThing.url);\r\n\r\n    await saveSolidDatasetAt(shareLinkThing.url, shareLinkDataset, { fetch });\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Button, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { SpinnerContext } from './../../../contexts/SpinnerContext';\r\nimport { tryGetName } from '../../../helpers/ShareLinksHelper';\r\n\r\nexport const LinkWithTooltip: React.FC<Props> = ({href, tooltipText}) => {\r\n\tconst { SpinAround } = useContext(SpinnerContext);\r\n\tconst [name, setName] = useState(\"LINK\");\r\n\r\n\tuseEffect(() => {\r\n\t\tSpinAround(async () => {\r\n\t\t\tconst name = await tryGetName(href);\r\n\r\n\t\t\tif (name !== null) {\r\n\t\t\t\tsetName(name);\r\n\t\t\t}\r\n\t\t});\r\n\t}, [SpinAround, href]);\r\n\t\r\n\tconst renderTooltip = (props: any) => (\r\n\t\t<Tooltip id=\"button-tooltip\" {...props}>\r\n\t\t  {tooltipText}\r\n\t\t</Tooltip>\r\n\t  );\r\n\t  \r\n\treturn (\r\n\t\t<OverlayTrigger\r\n\t\t\tplacement=\"right\"\r\n\t\t\tdelay={{ show: 10, hide: 50 }}\r\n\t\t\toverlay={renderTooltip}\r\n\t\t>\r\n\t\t\t<Button href={href} target=\"_blank\" rel=\"noopener noreferrer\" variant='link'>{name}</Button>\r\n\t\t</OverlayTrigger>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { getDatetime, getInteger } from '@inrupt/solid-client';\r\nimport { NUMBER_OF_CORRECT_ANSWERS, QUIZ_RESULT_CREATED } from '../../../../../../constants/SolidQuizMissingValues';\r\nimport { TranslateContext } from '../../../../../../contexts/TranslateContext';\r\nimport { getUrl } from '@inrupt/solid-client';\r\nimport SOLIDQUIZ from './../../../../../../helpers/SOLIDQUIZ';\r\nimport { LinkWithTooltip } from '../../../../../common/linkWithTooltip';\r\n\r\nexport const ResultsListElement: React.FC<Props> = (props: Props) => {\r\n\tconst { lang } = useContext(TranslateContext);\t\r\n\tconst [correctAnswers, setCorrectAnswers] = useState(\"\");\r\n\tconst [createdBy, setCreatedBy] = useState(\"\");\r\n\tconst [created, setCreated] = useState(\"\");\r\n\r\n\tuseEffect(() => {\r\n\t\tconst actCorrectAnswers = getInteger(props.resultThing, NUMBER_OF_CORRECT_ANSWERS) ?? 0;\r\n\t\tconst actCreatedBy = getUrl(props.resultThing, SOLIDQUIZ.quizResultCreatedBy.value) ?? \"error\";\r\n\t\tconst actCreated = getDatetime(props.resultThing, QUIZ_RESULT_CREATED) ?? \"error\";\r\n\r\n\t\tsetCorrectAnswers(actCorrectAnswers.toString());\r\n\t\tsetCreatedBy(actCreatedBy);\r\n\t\tsetCreated(actCreated.toLocaleString(lang));\r\n\t}, [props.resultThing, lang]);\r\n\r\n\treturn (\r\n\t\t<Row className='row-style'>\r\n\t\t\t<Col md=\"3\">\r\n\t\t\t\t<p>{props.orderId + 1}</p>\r\n\t\t\t</Col>\r\n\t\t\t<Col md=\"3\">\t\t\t\t\r\n\t\t\t\t<p>{correctAnswers}</p>\r\n\t\t\t</Col>\r\n\t\t\t<Col md=\"3\">\r\n\t\t\t\t<LinkWithTooltip href={createdBy} tooltipText={createdBy} />\r\n\t\t\t</Col>\r\n\t\t\t<Col md=\"3\">\r\n\t\t\t\t<p>{created}</p>\t\t\t\t\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { TranslateContext } from '../../../../../contexts/TranslateContext';\r\nimport { getString } from './../../../../../helpers/LangReader';\r\nimport { MULTI_LANGUAGE_SUPPORT, TITLE } from './../../../../../constants/SolidQuizMissingValues';\r\nimport { getBoolean } from '@inrupt/solid-client';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { ResultsListElement } from './resultsListElement';\r\n\r\nexport const ResultsList: React.FC<Props> = (props: Props) => {\r\n\tconst { t, lang } = useContext(TranslateContext);\t\r\n\tconst [quizTitle, setQuizTitle] = useState(\"\");\r\n\tconst [elements, setElements] = useState<JSX.Element[]>([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst multiLang = getBoolean(props.quizData.thing, MULTI_LANGUAGE_SUPPORT) ?? false;\r\n\t\tconst loadedQuizTitle = getString(props.quizData.thing, TITLE, multiLang, lang);\r\n\r\n\t\tsetQuizTitle(loadedQuizTitle);\r\n\t\tsetElements(\r\n\t\t\tprops.quizResultDatasets.map((datasetAndThing, indx) => \r\n\t\t\t\t<ResultsListElement key={indx} orderId={indx} quizThing={props.quizData.thing} resultThing={datasetAndThing.thing} multiLang={multiLang} />)\r\n\t\t);\r\n\t}, [lang, props.quizData.thing, props.quizResultDatasets]);\r\n\r\n\tif (elements.length === 0) {\r\n\t\treturn <h2 className='empty-list-style'>{t(\"page.common.list.empty\")}</h2>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<h3 className='main-title'>{quizTitle} {t(\"leaderboard.quizResult.title\")}</h3>\r\n\r\n\t\t\t<Row className='row-style'>\r\n\t\t\t\t<Col md=\"3\">\r\n\t\t\t\t\t{t(\"leaderboard.quizResult.order\")}\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md=\"3\">\r\n\t\t\t\t\t{t(\"leaderboard.quizResult.correctAnswers\")}\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md=\"3\">\r\n\t\t\t\t\t{t(\"leaderboard.quizResult.createdBy\")}\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md=\"3\">\r\n\t\t\t\t\t{t(\"leaderboard.quizResult.created\")}\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\r\n\t\t\t{elements}\r\n\t\t</Container>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { useSession } from '@inrupt/solid-ui-react';\r\nimport { WorkspaceContext } from '../../../../contexts/WorkspaceContext';\r\nimport { SpinnerContext } from '../../../../contexts/SpinnerContext';\r\nimport * as quizResultsService from '../../../../services/QuizResultService';\r\nimport { getPublicQuizResultDatasets, getQuizNameFromQuizThing, getQuizResultsFromContainer, getQuizResultsFromDatasets, mergeQuizResults, sortQuizResultDatas } from '../../../../helpers/QuizResultsListHelper';\r\nimport { DatasetAndThing } from '../../../../models/DatasetAndThing';\r\nimport { ResultsList } from './resultsList';\r\n\r\nexport const ResultsLoader: React.FC<Props> = (props: Props) => {\r\n\tconst { session } = useSession();\r\n\tconst { workspaceUrl } = useContext(WorkspaceContext);\r\n\tconst { SpinAround } = useContext(SpinnerContext);\r\n\tconst [quizResultDatasets, setQuizResultDatasets] = useState<DatasetAndThing[]>([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tSpinAround(async () => {\r\n\t\t\t//load locales\r\n\t\t\tconst quizName = getQuizNameFromQuizThing(props.quizData.thing);\r\n\t\t\tconst quizzesContainerUri = quizResultsService.getQuizResultsContainer(workspaceUrl, quizName); \r\n\t\t\tconst fetchedQuizResultDatasets = await getQuizResultsFromContainer(quizzesContainerUri, session.fetch);\r\n\t\t\tconst filteredQuizResultsData = getQuizResultsFromDatasets(fetchedQuizResultDatasets, props.quizData.thing);\r\n\r\n\t\t\t//load public\r\n\t\t\tconst fetchedPublicQuizResultDatasets = await getPublicQuizResultDatasets(props.quizData.thing);\r\n\r\n\t\t\t//merge (filter out duplicates)\r\n\t\t\tconst mergedQuizResultsData = mergeQuizResults(filteredQuizResultsData, fetchedPublicQuizResultDatasets);\r\n\r\n\t\t\t//sort them\r\n\t\t\tsortQuizResultDatas(mergedQuizResultsData);\r\n\t\r\n\t\t\tsetQuizResultDatasets(mergedQuizResultsData);\r\n\t\t});\t\r\n\t}, [workspaceUrl, session.fetch, SpinAround, props.quizData.thing]);\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ResultsList quizData={props.quizData} quizResultDatasets={quizResultDatasets} />\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { TranslateContext } from '../../../contexts/TranslateContext';\r\nimport { QuizListLoader } from '../../common/quizListLoader';\r\nimport { DatasetAndThing } from '../../../models/DatasetAndThing';\r\nimport { ResultsLoader } from './resultsLoader';\r\nimport { Button } from 'react-bootstrap';\r\nimport { PageSwitcherContext } from '../../../contexts/PageSwitcherContext';\r\n\r\nexport const Leaderboard: React.FC<Props> = (props: Props) => {\r\n\tconst { t } = useContext(TranslateContext);\t\r\n\tconst [selectedQuiz, setSelectedQuiz] = useState<DatasetAndThing | null>(null);\r\n\tconst { GoBack } = useContext(PageSwitcherContext);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{\r\n\t\t\t\tselectedQuiz === null ?\r\n\t\t\t\t<>\r\n\t\t\t\t\t<h3 className='main-title'>{t(\"leaderboard.title\")}</h3>\r\n\t\t\t\t\t<QuizListLoader onQuizSelected={setSelectedQuiz} />\r\n\t\t\t\t</> :\r\n\t\t\t\t<>\r\n\t\t\t\t\t<ResultsLoader quizData={selectedQuiz} /> \r\n\t\t\t\t\t<Button variant='light' className='back-btn' onClick={() => GoBack()}>{t(\"page.common.back\")}</Button>\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { TranslateContext } from '../../../contexts/TranslateContext';\r\nimport { PageSwitcherContext } from '../../../contexts/PageSwitcherContext';\r\nimport { Alert, Button } from 'react-bootstrap';\r\n\r\nexport const HelpPage: React.FC<Props> = (props: Props) => {\r\n\tconst { t } = useContext(TranslateContext);\r\n\tconst { GoBack } = useContext(PageSwitcherContext);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className='main-title'>{t(\"helpPage.title\")}</h3>\r\n\r\n\t\t\t<Alert>\r\n\t\t\t\t<p>{t(\"helpPage.text1\")}</p>\r\n\t\t\t\t<p>{t(\"helpPage.text2\")}</p>\r\n\t\t\t\t<p>{t(\"helpPage.text3\")}</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t{t(\"helpPage.text4\")}\r\n\t\t\t\t\t<Button variant='link' href='https://solid-quiz.solidcommunity.net/profile/card#me' rel=\"noopener noreferrer\" target=\"_blank\">solid-quiz</Button>\r\n\t\t\t\t\t{t(\"helpPage.text5\")}\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>{t(\"helpPage.text6\")}</p>\r\n\t\t\t\t<p>{t(\"helpPage.text7\")}</p>\r\n\t\t\t\t<p>{t(\"helpPage.text8\")}</p>\r\n\t\t\t\t<p>{t(\"helpPage.text9\")}\r\n\t\t\t\t \t<Button variant='link' href='https://salathcs.solidcommunity.net/profile/card#me' rel=\"noopener noreferrer\" target=\"_blank\" >salathcs</Button>\r\n\t\t\t\t</p>\r\n\t\t\t</Alert>\r\n\r\n\t\t\t<Button variant='outline-primary' className='back-btn' onClick={() => GoBack()}>{t(\"page.common.back\")}</Button>\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { getBoolean } from '@inrupt/solid-client';\r\nimport { MULTI_LANGUAGE_SUPPORT, TITLE } from '../../../../../../constants/SolidQuizMissingValues';\r\nimport { TranslateContext } from '../../../../../../contexts/TranslateContext';\r\nimport { getString } from '../../../../../../helpers/LangReader';\r\nimport { CustomButtonYesNo } from '../../../../../common/buttonToYesNoModal/customButtonYesNo';\r\nimport { PageSwitcherContext } from '../../../../../../contexts/PageSwitcherContext';\r\nimport { CreateQuiz } from '../../../../createQuiz';\r\n\r\nexport const QuizBtn: React.FC<Props> = (props: Props) => {\r\n\tconst { t, lang } = useContext(TranslateContext);\r\n\tconst { SwitchTo } = useContext(PageSwitcherContext);\r\n\tconst [quizTitle, setQuizTitle] = useState<string>(\"\");\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst multiLangSupport = getBoolean(props.datasetAndThing.thing, MULTI_LANGUAGE_SUPPORT);\r\n\r\n\t\tlet title = getString(props.datasetAndThing.thing, TITLE, multiLangSupport ?? false, lang);\r\n\r\n\t\tsetQuizTitle(title);\r\n\t}, [props.datasetAndThing.thing, lang]);\r\n\r\n\treturn (\r\n\t\t<div className=\"d-grid\">\r\n\t\t\t<CustomButtonYesNo \r\n\t\t\t\tvariant=\"secondary\" \r\n\t\t\t\tmodalText={t(\"modifyQuiz.modal.text\")} \r\n\t\t\t\tonConfirm={() => SwitchTo(<CreateQuiz datasetAndThing={props.datasetAndThing} />)}>\r\n\t\t\t\t\t{quizTitle}\r\n\t\t\t</CustomButtonYesNo>\r\n\t\t</div>\r\n\t);\r\n}","import React, { useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { CloseButton } from 'react-bootstrap';\r\nimport { YesNoModal } from '../yesNoModal';\r\n\r\nexport const CloseButtonYesNo: React.FC<Props> = (props: Props) => {\r\n\tconst [modalShow, setModalShow] = useState(false);\r\n\r\n\tconst handleConfirm = () => {\r\n\t\tsetModalShow(false);\r\n\t\tprops.onConfirm();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<CloseButton onClick={() => setModalShow(true)} />\r\n\t\r\n\t\t\t<YesNoModal\r\n\t\t\t\tshow={modalShow}\r\n\t\t\t\tonHide={() => setModalShow(false)}\r\n\t\t\t\tbody={props.modalText}\r\n\t\t\t\tonConfirm={handleConfirm}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { QuizBtn } from './quizBtn';\r\nimport { CloseButtonYesNo } from '../../../../common/buttonToYesNoModal/closeButtonYesNo';\r\nimport { TranslateContext } from '../../../../../contexts/TranslateContext';\r\nimport { QuizShare } from '../../../../common/quizShare';\r\n\r\nexport const QuizRow: React.FC<Props> = (props: Props) => {\r\n\tconst { t } = useContext(TranslateContext);\r\n\r\n\treturn (\r\n\t\t<Row>\r\n\t\t\t<Col md=\"1\" className='share-button-style'>\r\n\t\t\t\t<QuizShare datasetAndThing={props.datasetAndThing} />\r\n\t\t\t</Col>\r\n\t\t\t<Col md=\"10\" className='content-style'>\r\n\t\t\t\t<QuizBtn datasetAndThing={props.datasetAndThing} />\r\n\t\t\t</Col>\r\n\t\t\t<Col md=\"1\" className='close-button-style'>\r\n\t\t\t\t<CloseButtonYesNo modalText={t(\"page.common.yesno.confirmDeleteText\")} onConfirm={() => props.handleDelete(props.datasetAndThing)} />\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t);\r\n}","import React, { useEffect, useState, useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Container } from 'react-bootstrap';\r\nimport { QuizRow } from './quizRow';\r\nimport { getQuizzesFromDatasets } from '../../../../helpers/QuizListHelper';\r\nimport { TranslateContext } from './../../../../contexts/TranslateContext';\r\n\r\nexport const QuizList: React.FC<Props> = (props: Props) => {\r\n\tconst { t } = useContext(TranslateContext);\r\n\tconst [quizRows, setQuizRows] = useState<JSX.Element[]>([]);\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst quizData = getQuizzesFromDatasets(props.quizDatasets);\r\n\r\n\t\tsetQuizRows(\r\n\t\t\tquizData.map((datasetAndThing, indx) => \r\n\t\t\t\t<QuizRow key={indx} datasetAndThing={datasetAndThing} handleDelete={props.handleDelete} />)\r\n\t\t);\r\n\t}, [props.quizDatasets, props.handleDelete]);\r\n\r\n\tif (quizRows.length === 0) {\r\n\t\treturn <h2 className='empty-list-style'>{t(\"page.common.list.empty\")}</h2>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container className=\"justify-content-md-center\">\r\n\t\t\t{quizRows}\r\n\t\t</Container>\r\n\t);\r\n}","import React, { useCallback, useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { TranslateContext } from '../../../contexts/TranslateContext';\r\nimport { PageSwitcherContext } from '../../../contexts/PageSwitcherContext';\r\nimport { Button } from 'react-bootstrap'\r\nimport * as workspaceService from '../../../services/WorkspaceService';\r\nimport { useSession } from '@inrupt/solid-ui-react';\r\nimport { WorkspaceContext } from '../../../contexts/WorkspaceContext';\r\nimport { SolidDataset_Type } from '../../../constants/SolidDatasetType';\r\nimport { SpinnerContext } from '../../../contexts/SpinnerContext';\r\nimport { QuizList } from './quizList';\r\nimport { DatasetAndThing } from './../../../models/DatasetAndThing';\r\nimport { getOwnQuizzes } from '../../../helpers/QuizListHelper';\r\n\r\nexport const ModifyQuiz: React.FC<Props> = (props: Props) => {\r\n\tconst { session } = useSession();\r\n\tconst { t } = useContext(TranslateContext);\r\n\tconst { GoBack } = useContext(PageSwitcherContext);\r\n\tconst { workspaceUrl } = useContext(WorkspaceContext);\r\n\tconst { SpinAround } = useContext(SpinnerContext);\r\n\tconst [quizDatasets, setQuizDatasets] = useState<SolidDataset_Type[]>([]);\r\n\tconst [syncState, setSyncState] = useState(0);\r\n\r\n\tuseEffect(() => {\r\n\t\tSpinAround(async () => {\r\n\t\t\t//just owned quizzes\r\n\t\t\tconst fetchedQuizDatasets = await getOwnQuizzes(workspaceUrl, session.fetch);\r\n\t\r\n\t\t\tsetQuizDatasets(fetchedQuizDatasets);\r\n\t\t});\t\r\n\t}, [workspaceUrl, session.fetch, SpinAround, syncState]);\r\n\r\n\tconst handleDelete = useCallback((datasetAndThing: DatasetAndThing) => {\r\n\t\tSpinAround(async () => {\r\n\t\t\tawait workspaceService.deleteDataset(datasetAndThing.dataset, session.fetch);\r\n\t\t\tsetSyncState(act => act + 1);\r\n\t\t});\r\n\t}, [session.fetch, SpinAround]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className='main-title'>{t(\"modifyQuiz.title\")}</h3>\r\n\r\n\t\t\t{quizDatasets.length > 0 &&\r\n\t\t\t<QuizList quizDatasets={quizDatasets} handleDelete={handleDelete} />}\r\n\r\n\t\t\t<Button variant='light' className='back-btn' onClick={() => GoBack()}>{t(\"page.common.back\")}</Button>\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Col } from 'react-bootstrap';\r\nimport { useSession } from '@inrupt/solid-ui-react';\r\nimport { TranslateContext } from '../../../../../../contexts/TranslateContext';\r\nimport { SpinnerContext } from '../../../../../../contexts/SpinnerContext';\r\nimport { fetchQuizTitle, fetchQuizTitleFromResult } from '../../../../../../helpers/ShareLinksHelper';\r\nimport { getUrl } from '@inrupt/solid-client';\r\nimport SOLIDQUIZ from './../../../../../../helpers/SOLIDQUIZ';\r\n\r\nexport const ShareTypeSpecific: React.FC<Props> = (props: Props) => {\r\n\tconst { session } = useSession();\r\n\tconst { t, lang } = useContext(TranslateContext);\r\n\tconst { SpinAround } = useContext(SpinnerContext);\r\n\tconst [title, setTitle] = useState(\"\");\r\n\t\r\n\tuseEffect(() => {\r\n\t\tSpinAround(async () => {\r\n\t\t\tconst resourceUri = getUrl(props.shareThing, SOLIDQUIZ.sharedResource.value) ?? \"error\";\r\n\t\t\tlet actTitle: string | null = null;\r\n\r\n\t\t\tif (props.isQuizShare) {\r\n\t\t\t\tactTitle = await fetchQuizTitle(resourceUri, lang, session.fetch);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tactTitle = await fetchQuizTitleFromResult(resourceUri, lang, session.fetch);\r\n\t\t\t}\r\n\r\n\t\t\t//fetch failed\r\n\t\t\tif (actTitle === null) {\r\n\t\t\t\tactTitle = t(\"shares.element.fetchFailed\");\r\n\t\t\t}\r\n\r\n\t\t\tsetTitle(actTitle);\r\n\t\t});\t\r\n\t}, [session.fetch, SpinAround, lang, t, props.isQuizShare, props.shareThing]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Col md=\"3\">\t\t\t\t\r\n\t\t\t\t<p>{title}</p>\r\n\t\t\t</Col>\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { CloseButtonYesNo } from '../../../../common/buttonToYesNoModal/closeButtonYesNo';\r\nimport { TranslateContext } from '../../../../../contexts/TranslateContext';\r\nimport { getDatetime, getUrl } from '@inrupt/solid-client';\r\nimport SOLIDQUIZ from './../../../../../helpers/SOLIDQUIZ';\r\nimport { ShareTypeSpecific } from './shareTypeSpecific';\r\nimport { SHARE_CREATED } from '../../../../../constants/SolidQuizMissingValues';\r\nimport { removeSharing } from '../../../../../helpers/ShareLinksHelper';\r\nimport { useSession } from '@inrupt/solid-ui-react';\r\nimport { InfoModal } from '../../../../common/infoModal';\r\nimport { SpinnerContext } from '../../../../../contexts/SpinnerContext';\r\nimport { LinkWithTooltip } from '../../../../common/linkWithTooltip';\r\n\r\nexport const ShareRow: React.FC<Props> = (props: Props) => {\r\n\tconst { session } = useSession();\r\n\tconst { t, lang } = useContext(TranslateContext);\t\r\n\tconst { SpinAround } = useContext(SpinnerContext);\r\n\tconst [isQuizShare, setIsQuizShare] = useState<boolean | null>(null);\r\n\tconst [created, setCreated] = useState(\"\");\r\n\tconst [individual, setIndividual] = useState(\"\");\r\n\tconst [showInfoModal, setShowInfoModal] = useState(false);\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst typeUri = getUrl(props.shareLinkModel.shareThing, SOLIDQUIZ.sharedResourceType.value) ?? \"error\";\r\n\t\t\r\n\t\tif (typeUri === SOLIDQUIZ.Quiz.value) {\r\n\t\t\tsetIsQuizShare(true);\r\n\t\t}\r\n\t\telse if (typeUri === SOLIDQUIZ.QuizResult.value) {\r\n\t\t\tsetIsQuizShare(false);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tconsole.log(\"Error, typeUri is not recognizable\" + typeUri)\r\n\t\t}\r\n\r\n\t\tconst actCreated = getDatetime(props.shareLinkModel.shareThing, SHARE_CREATED) ?? \"error\";\r\n\t\tconst actIndividual = getUrl(props.shareLinkModel.shareLinkThing, SOLIDQUIZ.shareLinksIndividual.value) ?? \"error\";\r\n\r\n\t\tsetCreated(actCreated.toLocaleString(lang));\r\n\t\tsetIndividual(actIndividual);\r\n\t}, [props.shareLinkModel, lang]);\r\n\r\n\tconst onRemove = () => {\r\n\t\tSpinAround(async () => {\r\n\t\t\tawait removeSharing(props.shareLinkModel, session.fetch);\r\n\r\n\t\t\tsetShowInfoModal(true);\r\n\t\t});\t\r\n\t}\r\n\r\n\tconst onInfoHide = () => {\r\n\t\tsetShowInfoModal(false);\r\n\t\tprops.setSyncState(act => act + 1);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{(isQuizShare !== null) &&\r\n\t\t\t<Row className='row-style'>\r\n\t\t\t\t<Col md=\"2\">\r\n\t\t\t\t\t<p>{isQuizShare ? t(\"shares.list.typeQuiz\") : t(\"shares.list.typeQuizResult\")}</p>\r\n\t\t\t\t</Col>\r\n\t\t\t\t\r\n\t\t\t\t<ShareTypeSpecific shareThing={props.shareLinkModel.shareThing} isQuizShare={isQuizShare} />\r\n\r\n\t\t\t\t<Col md=\"3\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tprops.shareLinkModel.isPubliclyShared ?\r\n\t\t\t\t\t\t<p>{t(\"shares.list.shareTypePublic\")}</p> :\r\n\t\t\t\t\t\t<LinkWithTooltip href={individual} tooltipText={individual} />\r\n\t\t\t\t\t}\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md=\"3\">\r\n\t\t\t\t\t<p>{created}</p>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md=\"1\">\r\n\t\t\t\t\t<CloseButtonYesNo modalText={t(\"shares.list.modal.text\")} onConfirm={onRemove} />\t\t\t\t\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>}\r\n\r\n\t\t\t<InfoModal show={showInfoModal} onHide={onInfoHide} body={t(\"shares.list.modal.shareOk\")} />\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { TranslateContext } from '../../../../contexts/TranslateContext';\r\nimport { ShareRow } from './shareRow';\r\n\r\nexport const ShareList: React.FC<Props> = (props: Props) => {\r\n\tconst { t } = useContext(TranslateContext);\t\r\n\tconst [elements, setElements] = useState<JSX.Element[]>([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetElements(\r\n\t\t\tprops.shareLinkModels.map((shareLinkModel, indx) => \r\n\t\t\t\t<ShareRow key={indx} shareLinkModel={shareLinkModel} setSyncState={props.setSyncState}  />)\r\n\t\t);\r\n\t}, [props.shareLinkModels, props.setSyncState]);\r\n\r\n\tif (props.shareLinkModels.length === 0) {\r\n\t\treturn <h2 className='empty-list-style'>{t(\"page.common.list.empty\")}</h2>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Row className='row-style'>\r\n\t\t\t\t<Col md=\"2\">\r\n\t\t\t\t\t{t(\"shares.listCol.type\")}\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md=\"3\">\r\n\t\t\t\t\t{t(\"shares.listCol.title\")}\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md=\"3\">\r\n\t\t\t\t\t{t(\"shares.listCol.shareType\")}\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md=\"3\">\r\n\t\t\t\t\t{t(\"shares.listCol.created\")}\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\r\n\t\t\t{elements}\r\n\t\t</Container>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { TranslateContext } from '../../../contexts/TranslateContext';\r\nimport { PageSwitcherContext } from '../../../contexts/PageSwitcherContext';\r\nimport { Button } from 'react-bootstrap';\r\nimport { WorkspaceContext } from '../../../contexts/WorkspaceContext';\r\nimport { useSession } from '@inrupt/solid-ui-react';\r\nimport { getAllShareThingByShareLink } from '../../../helpers/ShareLinksHelper';\r\nimport { SpinnerContext } from '../../../contexts/SpinnerContext';\r\nimport { ShareList } from './shareList';\r\nimport { ShareLinkModel } from '../../../models/ShareLinkModel';\r\n\r\nexport const Shares: React.FC<Props> = (props: Props) => {\r\n\tconst { session } = useSession();\r\n\tconst { t } = useContext(TranslateContext);\r\n\tconst { GoBack } = useContext(PageSwitcherContext);\r\n\tconst { workspaceUrl } = useContext(WorkspaceContext);\r\n\tconst { SpinAround } = useContext(SpinnerContext);\r\n\tconst [shareLinkModels, setShareLinkModels] = useState<ShareLinkModel[]>([]);\r\n\tconst [syncState, setSyncState] = useState(0);\r\n\r\n\tuseEffect(() => {\r\n\t\tSpinAround(async () => {\r\n\t\t\tconst actShareLinkModels = await getAllShareThingByShareLink(workspaceUrl, session.fetch);\r\n\r\n\t\t\tsetShareLinkModels(actShareLinkModels);\r\n\t\t});\t\r\n\t}, [workspaceUrl, session.fetch, SpinAround, syncState]);\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className='main-title'>{t(\"shares.title\")}</h3>\r\n\r\n\t\t\t<ShareList shareLinkModels={shareLinkModels} setSyncState={setSyncState} /> \r\n\r\n\t\t\t<Button className='back-btn' onClick={() => GoBack()}>{t(\"page.common.back\")}</Button>\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport { TranslateContext } from '../../../contexts/TranslateContext';\r\nimport { PageSwitcherContext } from '../../../contexts/PageSwitcherContext';\r\nimport { PlayGame } from '../playGame';\r\nimport { CreateQuiz } from './../createQuiz/index';\r\nimport { Leaderboard } from './../leaderboard/index';\r\nimport { HelpPage } from './../helpPage/index';\r\nimport { ModifyQuiz } from '../modifyQuiz';\r\nimport { LogoutButton } from '@inrupt/solid-ui-react';\r\nimport { Shares } from '../shares';\r\n\r\nexport const MainMenu: React.FC<Props> = (props: Props) => {\r\n\tconst { t } = useContext(TranslateContext);\r\n\tconst { SwitchTo } = useContext(PageSwitcherContext);\r\n\r\n\tconst switchToPlayGame = () => SwitchTo(<PlayGame />);\r\n\tconst switchToCreateQuiz = () => SwitchTo(<CreateQuiz />);\r\n\tconst switchToModifyQuiz = () => SwitchTo(<ModifyQuiz />);\r\n\tconst switchToLeaderboard = () => SwitchTo(<Leaderboard />);\r\n\tconst switchToSharesPage = () => SwitchTo(<Shares />);\r\n\tconst switchToHelpPage = () => SwitchTo(<HelpPage />);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className='main-title'>{t(\"mainMenu.title\")}</h3>\r\n\t\t\t<div className=\"d-grid gap-4\">\r\n\t\t\t\t<Button variant=\"primary\" size=\"lg\" onClick={switchToPlayGame}>{t(\"mainMenu.btn.playGame\")}</Button>\r\n\t\t\t\t<Button variant=\"secondary\" size=\"lg\" onClick={switchToCreateQuiz}>{t(\"mainMenu.btn.createQuiz\")}</Button>\r\n\t\t\t\t<Button variant=\"secondary\" size=\"lg\" onClick={switchToModifyQuiz}>{t(\"mainMenu.btn.modifyQuiz\")}</Button>\r\n\t\t\t\t<Button variant=\"outline-secondary\" size=\"lg\" onClick={switchToLeaderboard}>{t(\"mainMenu.btn.leaderboard\")}</Button>\r\n\t\t\t\t<Button variant=\"outline-primary\" size=\"lg\" onClick={switchToSharesPage}>{t(\"mainMenu.btn.shares\")}</Button>\r\n\t\t\t\t<Button variant=\"info\" size=\"lg\" onClick={switchToHelpPage}>{t(\"mainMenu.btn.helpPage\")}</Button>\r\n\t\t\t</div>\r\n\t\t\t<LogoutButton>\r\n\t\t\t\t<div className=\"logout-btn-row d-grid gap-4\">\r\n\t\t\t\t\t\t<Button variant=\"outline-dark\" size=\"lg\">{t(\"mainMenu.btn.logout\")}</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</LogoutButton>\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { SolidDataset_Type } from '../../../constants/SolidDatasetType';\r\nimport { defaultWorkspaceContext, WorkspaceContext } from '../../../contexts/WorkspaceContext';\r\nimport { SpinnerContext } from '../../../contexts/SpinnerContext';\r\nimport { useSession } from '@inrupt/solid-ui-react';\r\nimport * as workspaceService from '../../../services/WorkspaceService';\r\nimport * as quizService from '../../../services/QuizService';\r\nimport * as sharesService from '../../../services/SharesService';\r\n\r\nexport const WorkspaceContextComponent: React.FC<Props> = (props: Props) => {\r\n\tconst { session } = useSession();\r\n\tconst { SpinAround } = useContext(SpinnerContext);\r\n\tconst [workspace, setWorkspace] = useState<SolidDataset_Type | null>(defaultWorkspaceContext.workspace);\r\n\tconst [workspaceUrl, setWorkspaceUrl] = useState(defaultWorkspaceContext.workspaceUrl);\r\n\tconst [webId, setWebId] = useState(defaultWorkspaceContext.webId);\r\n\r\n\tconst getWorkspace = () => {\r\n\t\tif (workspace === null) {\r\n\t\t\treturn defaultWorkspaceContext.getWorkspace();\r\n\t\t}\r\n\r\n\t\treturn workspace;\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!session || !session.info.isLoggedIn) return;\r\n\r\n\t\tSpinAround(async () => {\r\n\t\t\t\r\n\t\t\tif (session.info.webId === undefined) {\r\n\t\t\t\tthrow new Error(\"WebId cannot be determined!\");\r\n\t\t\t}\r\n\r\n\t\t\tsetWebId(session.info.webId);\r\n\r\n\t\t\tconst profileThing = await workspaceService.getProfileThing(session.info.webId, session.fetch);\r\n\r\n\t\t\tconst workSpaceLocation = workspaceService.getWorkSpaceLocation(profileThing);\r\n\r\n\t\t\tconst fetchedWorkspace = await workspaceService.getOrCreateWorkSpace(workSpaceLocation, session.fetch);\r\n\r\n\t\t\tawait quizService.createQuizzesContainer(workSpaceLocation, session.fetch);\r\n\t\t\tawait sharesService.createSharesIndexForPublic(workSpaceLocation, session.info.webId, session.fetch);\r\n\r\n\t\t\tsetWorkspaceUrl(workSpaceLocation);\r\n\t\t\tsetWorkspace(fetchedWorkspace);\r\n\t\t});\r\n\t  }, [session, session.info.isLoggedIn, webId, SpinAround]);\r\n\r\n\treturn (\r\n\t\t<WorkspaceContext.Provider value={{\r\n\t\t\tworkspace,\r\n\t\t\tgetWorkspace,\r\n\t\t\tworkspaceUrl,\r\n\t\t\twebId\r\n\t\t}}>\r\n\t\t\t{props.children}\r\n\t\t</WorkspaceContext.Provider>\r\n\t);\r\n}","import React, { useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Container } from 'react-bootstrap';\r\nimport { TranslateContext } from '../../contexts/TranslateContext';\r\nimport { PageSwitcherComponent } from '../common/pageSwitcherComponent';\r\nimport { MainMenu } from './mainMenu';\r\nimport { WorkspaceContextComponent } from './../common/workspaceContextComponent/index';\r\n\r\nexport const Page: React.FC<Props> = (props: Props) => {\r\n\tconst { t } = useContext(TranslateContext);\r\n\r\n  const getDefaultPage = () => <MainMenu />;\r\n\r\n\treturn (\r\n    <Container className='square-box d-flex flex-column text-center'>\r\n      <Container className='px-4 inner-box'>\r\n        <WorkspaceContextComponent>\r\n          <h1>{t(\"page.title\")}</h1>\r\n          <PageSwitcherComponent defaultPage={getDefaultPage()} />\r\n        </WorkspaceContextComponent>\r\n      </Container>\r\n    </Container>\r\n\t);\r\n}","import { useSession } from '@inrupt/solid-ui-react';\nimport './App.css';\nimport { Authenticate } from './auth';\nimport { SpinnerContextComponent } from './common/spinnerContextComponent';\nimport { TranslateContextComponent } from './common/translateContextComponent';\nimport { Page } from './page';\n\nfunction App() {\n  const { session } = useSession();\n\n  const appContent = session.info.isLoggedIn ? <Page /> : <Authenticate />;\n\n  return (\n    <TranslateContextComponent>\n      <SpinnerContextComponent>\n        {appContent}\n      </SpinnerContextComponent>\n    </TranslateContextComponent>\n  );\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.css'\r\nimport 'bootstrap/dist/js/bootstrap.bundle'\r\nimport React from 'react';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { SessionProvider } from '@inrupt/solid-ui-react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <SessionProvider>\r\n      <App />\r\n    </SessionProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}