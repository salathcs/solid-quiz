{"version":3,"sources":["reportWebVitals.ts","constants/DefaultValues.ts","constants/SolidProviders.ts","components/auth/providers/index.tsx","contexts/TranslateContext.ts","components/auth/index.tsx","contexts/SpinnerContext.ts","components/common/spinnerContextComponent/spinner/index.tsx","helpers/SpinnerCounter.ts","components/common/infoModal/index.tsx","components/common/spinnerContextComponent/index.tsx","components/common/translateContextComponent/languageSelector/index.tsx","components/common/translateContextComponent/index.tsx","i18n/Locales.ts","contexts/PageSwitcherContext.ts","components/common/pageSwitcherComponent/index.tsx","contexts/WorkspaceContext.ts","helpers/SOLIDQUIZ.js","constants/SolidQuizMissingValues.ts","helpers/LangReader.ts","components/common/quizListLoader/quizList/quizBtn/index.tsx","services/WorkspaceService.ts","services/SharesService.ts","services/QuizService.ts","helpers/QuizListHelper.ts","components/common/quizListLoader/quizList/index.tsx","components/common/quizListLoader/index.tsx","contexts/GameContext.ts","components/common/gameContextComponent/index.tsx","helpers/GameHelper.ts","services/ShareLinksService.ts","services/AclService.ts","helpers/SharesHelper.ts","components/page/playGame/gameLoader/gameController/gameResult/shareGameResult/index.tsx","components/page/playGame/gameLoader/gameController/gameResult/index.tsx","components/page/playGame/gameLoader/gameController/questionController/question/answerLoader/answerController/answer/index.tsx","services/QuizResultService.ts","components/page/playGame/gameLoader/gameController/questionController/question/answerLoader/answerController/index.tsx","components/page/playGame/gameLoader/gameController/questionController/question/answerLoader/index.tsx","components/page/playGame/gameLoader/gameController/questionController/question/index.tsx","helpers/QuizResultsListHelper.ts","components/page/playGame/gameLoader/gameController/questionController/index.tsx","components/common/buttonToYesNoModal/yesNoModal/index.tsx","components/common/buttonToYesNoModal/customButtonYesNo/index.tsx","components/page/playGame/gameLoader/gameController/gameContainer/index.tsx","components/page/playGame/gameLoader/gameController/index.tsx","components/page/playGame/gameLoader/index.tsx","components/page/playGame/index.tsx","components/common/formBase/index.tsx","components/common/formBase/basicInput/index.tsx","components/page/createQuiz/quizForm/multiLang/index.tsx","components/page/createQuiz/quizForm/monoLang/index.tsx","components/page/createQuiz/quizForm/index.tsx","services/QuestionService.ts","helpers/QuizContainerConverter.ts","contexts/QuestionCreationContext.ts","components/common/quizModification/answerInput/index.tsx","components/common/quizModification/toggleBtnCheck/index.tsx","components/page/createQuiz/questionForm/questionAnswers/questionAnswerLoader/questionAnswerSelector/langQuestionAnswer/index.tsx","components/page/createQuiz/questionForm/questionAnswers/questionAnswerLoader/questionAnswerSelector/questionAnswer/index.tsx","helpers/AnswerArrayHelper.ts","components/page/createQuiz/questionForm/questionAnswers/questionAnswerLoader/questionAnswerSelector/index.tsx","components/page/createQuiz/questionForm/questionAnswers/questionAnswerLoader/index.tsx","components/page/createQuiz/questionForm/questionAnswers/index.tsx","helpers/QuestionCreateModelValidator.ts","components/page/createQuiz/questionForm/questionNavigationButtons/index.tsx","components/common/quizModification/questionTextInput/index.tsx","components/page/createQuiz/questionForm/questionTextLoader/questionText/langText/index.tsx","components/page/createQuiz/questionForm/questionTextLoader/questionText/monoText/index.tsx","components/page/createQuiz/questionForm/questionTextLoader/questionText/index.tsx","components/page/createQuiz/questionForm/questionTextLoader/index.tsx","components/page/createQuiz/questionForm/index.tsx","components/common/questionCreationContextComponent/index.tsx","components/common/quizShare/quizShareModeModal/index.tsx","components/common/quizShare/quizShareModal/quizShareModalBody/index.tsx","components/common/quizShare/quizShareModal/index.tsx","components/common/quizShare/index.tsx","components/page/createQuiz/creationResult/index.tsx","components/page/createQuiz/index.tsx","helpers/ShareLinksHelper.ts","components/common/linkWithTooltip/index.tsx","components/page/leaderboard/resultsLoader/resultsList/resultsListElement/index.tsx","components/page/leaderboard/resultsLoader/resultsList/index.tsx","components/page/leaderboard/resultsLoader/index.tsx","components/page/leaderboard/index.tsx","components/page/helpPage/index.tsx","components/page/modifyQuiz/quizList/quizRow/quizBtn/index.tsx","components/common/buttonToYesNoModal/closeButtonYesNo/index.tsx","components/page/modifyQuiz/quizList/quizRow/index.tsx","components/page/modifyQuiz/quizList/index.tsx","components/page/modifyQuiz/index.tsx","components/page/shares/shareList/shareRow/shareTypeSpecific/index.tsx","components/page/shares/shareList/shareRow/index.tsx","components/page/shares/shareList/index.tsx","components/page/shares/index.tsx","components/page/mainMenu/index.tsx","components/common/workspaceContextComponent/index.tsx","components/page/index.tsx","components/App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","QUIZZES_CONTAINER","SHARE_LINKS_CONTAINER_DATASET","SOLID_QUIZ_POD_PROFILE","SOLID_QUIZ_POD_SHARES_DATASET","SOLID_PROVIDERS","Providers","props","providers","map","provider","value","id","defaultTranslateState","lang","t","key","TranslateContext","React","createContext","Authenticate","useContext","authOptions","clientName","useState","oidcIssuer","setOidcIssuer","Container","className","Row","Col","type","name","list","onChange","event","target","redirectUrl","window","location","href","Button","variant","size","defaultSpinnerState","Spinner","ShowSpinner","HideSpinner","SpinAround","delegate","Error","SpinnerContext","useEffect","timer","setTimeout","clearTimeout","SpinnerCounter","counter","this","showSpinner","InfoModal","Modal","show","onHide","centered","Header","closeButton","Title","Body","body","Footer","onClick","SpinnerContextComponent","setShowSpinner","spinnerCounter","error","setError","useCallback","spinner","Increase","Decrease","a","catch","console","log","finally","Provider","children","toString","LanguageSelector","selectedLangLabel","md","DropdownButton","title","onSelect","eventKey","changeLang","Dropdown","Item","TranslateContextComponent","setLang","language","userLang","navigator","hu","en","translate","defaultPageSwitcherState","ActualPage","SwitchTo","GoBack","PageSwitcherContext","PageSwitcherComponent","defaultPage","actualPage","setActualPage","page","defaultWorkspaceContext","workspace","getWorkspace","workspaceUrl","webId","WorkspaceContext","require","_VocabTerm","VocabTerm","getLocalStore","_DataFactory","_namedNode","namedNode","_NS","localName","SOLIDQUIZ","PREFIX","NAMESPACE","PREFIX_AND_NAMESPACE","NS","Quiz","addLabel","addComment","Question","Answer","QuizResult","QuestionResult","Share","ShareLink","createdBy","quizQuestion","answerOption","correctAnswerOption","quizResultOf","quizResultCreatedBy","firstQuestionResult","nextQuestionResult","previousQuestionResult","questionResultOf","questionResultsAnswer","sharedResource","sharedResourceType","shareLinksLink","shareLinksIndividual","TITLE","CREATED","MULTI_LANGUAGE_SUPPORT","QUESTION_TEXT","ANSWER_TEXT","NUMBER_OF_QUESTIONS","QUIZ_RESULT_CREATED","SUCCESS_OF_QUESTION_RESULT","NUMBER_OF_CORRECT_ANSWERS","SHARE_CREATED","getString","thing","propertyUri","multiLangSupport","getStringWithLocale","getStringNoLocale","getMutliLang","textEn","textHu","text","QuizBtn","quizTitle","setQuizTitle","getBoolean","datasetAndThing","onQuizSelected","getProfileThing","fetch","getSolidDataset","profileDataset","profileThing","getThing","getWorkSpaceLocation","podRoot","getUrl","WS","storage","getOrCreateWorkSpace","workspaceUri","statusCode","saveSolidDatasetAt","createSolidDataset","deleteDataset","dataset","uri","getSourceUrl","deleteSolidDataset","getFirstThingByRDFType","rdfType","allThings","getThingAll","i","length","RDF","getAllThingByUris","uris","result","forEach","encodeURI","push","publishQuiz","quizUri","getOrCreateShares","publicSharesDataset","newPublicShareThing","createPublishedThing","setThing","updatedDataset","savedThingUri","getSavedShareThingsUri","savedThing","shareQuiz","friendsShareSpace","friendsSharesDataset","publishQuizResult","quizResultUri","getPublishedShares","shareTypeFilter","publicSharesThings","rv","getLocalShares","sharesDatasetUri","sharesDataset","localSharesThings","getSharesDataset","createSharesIndexForPublic","sharesUri","isLocalSharesExists","hasAccessibleAcl","ownerAcl","createAcl","ownerUpdatedAcl","setAgentResourceAccess","read","append","write","control","saveAclFor","publicAcl","updatedPublicAcl","setPublicResourceAccess","sharedResourceUri","sharedType","buildThing","createThing","addUrl","addDatetime","Date","build","localThing","indexOfSeparator","url","lastIndexOf","substring","datasetUri","createQuizContainer","quizName","quizFormModel","quizThingBuilder","addBoolean","multiLang","addStringWithLocale","quizTitleEn","quizTitleHu","addStringNoLocale","addTitlesToQuizBasedOnLang","quiz","questions","createQuizResourceName","trimedEn","replace","trimedHu","getQuizzesContainer","getSpecificQuizUri","createQuizzesContainer","quizzesWorkspace","isQuizzesExists","checkQuizTitleIsAlreadyReserved","quizUrl","saveNewQuiz","quizContainer","addQuestionsToQuiz","localeDataset","addQuestionsToDataset","nestedDateset","getSavedQuizThingsUri","questionContainer","questionUrl","questionName","addInteger","nestedDataset","question","addAnswersToDataset","answers","answer","getOwnQuizzes","containerUri","quizService","containerDataset","datasetThing","containedResources","getUrlAll","LDP","contains","getQuizDatasets","quizDatasets","getQuizzesFromDatasets","quizThings","quizDataset","quizThing","workspaceService","getPublicDatasets","sharesService","publicQuizThings","tryGetSharedDatasetsAtOnce","undefined","fetchedDatasets","getLocalSharesDatasets","localSharesUri","localSharesQuizThings","mergeQuizzes","localResults","publicSharesResults","localharesResults","publisResult","find","item","localShareResult","tryGetDataset","quizContainerContainedUris","promiseList","tryGetQuizUri","tryGetQuizDataset","Promise","all","fetchedPromises","promiseResult","endsWith","lastWord","indexOfLast","getLastWordFromUri","validateDatasetForQuizType","sharedQuizThings","promises","quizDatasetUri","QuizList","quizBtns","setQuizBtns","quizData","indx","QuizListLoader","session","useSession","setQuizDatasets","fetchedQuizDatasets","fetchedPublicQuizDatasets","fetchedLocalSharesQuizDatasets","mergedQuizDatasets","defaultGameState","getQuizData","gameStatus","actQuestionIndex","allQuestions","quizResultNameUri","quizResultThing","questionResultThings","setGameStatus","GameContext","GameContextComponent","generateRandomSeries","count","seriesValues","generateSeries","selected","Math","floor","random","fromSeries","splice","addNewQuestionResult","newQuestionResultThing","getFutureUrl","lastQuestionResultThing","questionResultThing","getLastQuestionResult","indexOf","addNumberOfSuccessToQuizResult","successCounter","str","createShareLink","individualWebId","shareUri","linksUrl","getOrCreateLinksDataset","linksDataset","shareLinkThing","getAllShareLink","linksDatasetUri","getShareLinksDatasetUri","createPublicAclForNewResource","newAcl","updatedAcl","createAgentAclForNewResource","friendsWebId","createFallbackAclForOwner","checkForOwnerRights","newFallbackAcl","takeAwayPublicAcl","resourceUri","getSolidDatasetWithAcl","resourceDataset","resourceAcl","getResourceAcl","takeAwayAgentAcl","agentWebId","datasetWithAcl","agentAccess","getAgentAccess","handlePublishQuiz","shareThing","shareLinksService","aclService","handlePublishQuizResult","quizResultData","shareQuizWithFriend","ownWorkSpace","getFriendsShareSpace","checkForQuizShare","getFriendsList","friendUris","FOAF","knows","friendsProfileDataset","friendsProfileThing","friendsWorkspace","ShareGameResult","shared","setShared","disabled","IoMdShare","Alert","GameResult","answersSucceded","setAnswersSucceded","actualQuizTitle","gameResult","actualAnswersSucceded","getInteger","savedQuizResultData","answerText","setAnswerText","btnVariant","setBtnVariant","answerThing","answerSelectedResult","onAnswerSelected","saveQuizResult","addQuestionResultssToDataset","getQuizResultsContainer","createQuizResultsContainer","quizResultsWorkspace","isQuizResultsExists","AnswerController","correctAnswer","setCorrectAnswer","answerSelected","setAnswerSelected","answerBtns","setAnswerBtns","success","act","questionThing","quizResultService","correctAnswerThingUri","answerThings","AnswerLoader","setAnswerThings","answerUris","series","answersInRandOrder","index","questionText","setQuestionText","FloatingLabel","controlId","label","Form","Control","as","placeholder","defaultValue","getQuizResultsFromContainer","getQuizResultDatasets","quizResultDatasets","getQuizResultsFromDatasets","quizResultsThings","quizResultDataset","sortQuizResultDatas","quizResultDatas","sort","b","byCorrectAnswer","thingA","thingB","correctAnswersA","compareByCorrectAnswer","dateA","getDatetime","getTime","compareByNewer","getSavedQuizResultName","resultsName","getQuizNameFromQuizThing","getPublicQuizResultDatasets","publicQuizResultThings","quizResultDatasetUri","checkQuizResultsQuizOf","quizResultsDataset","mergeQuizResults","publicResults","tryGetQuizResultDataset","QuestionController","onCompleteGame","actQuestion","setActQuestion","savedThingName","updatedThing","YesNoModal","onConfirm","CustomButtonYesNo","modalShow","setModalShow","style","modalText","GameContainer","GameController","setQuestions","setGameResult","questionUris","questionThings","questionsInRandOrder","GameLoader","setMultiLang","newGameStatus","setNewGameStatus","questionsCount","PlayGame","selectedQuiz","setSelectedQuiz","FormBase","validationSchema","schema","onSubmit","initialValues","submitLabel","BasicInput","useField","formikId","field","meta","isInvalid","touched","Feedback","MultiLang","Yup","required","max","matches","MonoLang","values","langValues","QuizForm","isMultiLang","setIsMultiLang","afterFormSubmit","formContent","Check","checked","createQuestionContainer","questionModel","questionNumber","createQuestionName","answerContainers","arr","answerOptions","answerName","createAnswerName","answerThingBuilder","addTextToAnswerBasedOnLang","createAnswerThings","questionThingBuilder","addTextToQuestionBasedOnLang","correctAnswerId","correctAnswerUri","answerId","getCorrectAnswerUri","answerFutureUri","addAnswersToQuestion","getQuestionContainer","createQuestionNameFromNumber","container","getAnswerNumber","convert","multiLangData","createQuizFormModel","removeUrl","questionContainers","quiestionContainer","getFragmentFromUri","answerContainer","createAnswerContainer","createAnswerContainers","questionService","answerModels","answerModel","createAnswerCreateModel","createAnswerCreateModels","createQuestionCreateModel","createQuiestionContainer","createQuestionContainers","defaultQuestionCreationState","setQuestionNumber","answerNumber","setAnswerNumber","getQuizContainer","isCrurrentQuestionCreatedYet","isNextQuestionNew","QuestionCreationContext","AnswerInput","actValue","setActValue","ToggleBtnCheck","defaultChecked","setChecked","ToggleButton","IoMdCheckmark","LangQuestionAnswer","labelEn","onChangeEn","defaultValueEn","labelHu","onChangeHu","defaultValueHu","CloseButton","onCloseAnswer","QuestionAnswer","getOCreateAnswerInArray","QuestionAnswerSelector","handleChange","model","answerResult","answerArrayHelper","handleChangeEn","handleChangeHu","content","QuestionAnswerLoader","multiLangText","QuestionAnswers","setAnswers","closeAnswer","toClose","toCloseIndex","addAnswer","isCloseDisabled","validateModel","validateText","validateAnswers","QuestionNavigationButtons","alert","setAlert","onPrev","questionCreateModelValidator","onNextNew","onNext","onFinishClick","QuestionTextInput","LangText","MonoText","QuestionText","QuestionTextLoader","QuestionForm","setQuestionModel","titleCreateOrModify","setTitleCreateOrModify","questionCreateModel","setToNewEmptyForm","questionSubmitted","prevQuestionModel","nextQuestionModel","finishQuiz","QuestionCreationContextComponent","QuizShareModeModal","QuizShareModalBody","friendList","setSelected","elements","setElements","elementActive","setElementActive","onSelectChange","onSelectClick","friend","QuizShareModal","selectedPerson","setSelectedPerson","QuizShare","shareModeModalShow","setShareModeModalShow","infoModal","setInfoModal","shareModalShow","setShareModalShow","setFriendList","handlePublish","isPublish","agentUri","CreationResult","setTitle","actTitle","actQuestionNumber","CreateQuiz","setQuizContainer","firstFormModel","setFirstFormModel","modalErrorMsg","setModalErrorMsg","creationResult","setCreationResult","propQuizContainer","quizContainerConverter","element","savedQuizThing","getAllShareThingByShareLink","shareLinks","shareLink","tryGetShare","shareLinkFetchModel","shareDataset","isPubliclyShared","checkIfPubliclyShared","tryGetShareWhitoutFetch","tryGetShareWitchFetch","fetchQuizTitle","fetchQuizTitleFromResult","removeSharing","shareLinkModel","removePublicShares","removeAgentShares","removeShareLink","tryGetName","firstName","removeThing","shareLinkDataset","LinkWithTooltip","tooltipText","setName","OverlayTrigger","placement","delay","hide","overlay","Tooltip","rel","ResultsListElement","correctAnswers","setCorrectAnswers","setCreatedBy","created","setCreated","actCorrectAnswers","resultThing","actCreatedBy","actCreated","toLocaleString","orderId","ResultsList","loadedQuizTitle","ResultsLoader","setQuizResultDatasets","quizzesContainerUri","quizResultsService","fetchedQuizResultDatasets","filteredQuizResultsData","fetchedPublicQuizResultDatasets","mergedQuizResultsData","Leaderboard","HelpPage","CloseButtonYesNo","QuizRow","handleDelete","quizRows","setQuizRows","ModifyQuiz","syncState","setSyncState","ShareTypeSpecific","isQuizShare","ShareRow","setIsQuizShare","individual","setIndividual","showInfoModal","setShowInfoModal","typeUri","actIndividual","ShareList","shareLinkModels","Shares","setShareLinkModels","actShareLinkModels","MainMenu","WorkspaceContextComponent","setWorkspace","setWorkspaceUrl","setWebId","info","isLoggedIn","workSpaceLocation","fetchedWorkspace","Page","App","appContent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16d617dc.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export const APP_NAME = \"Solid quiz\";\r\n\r\nexport const SOLID_QUIZ_WORKSPACE = \"workspace/solidQuiz/\";\r\n\r\nexport const QUIZZES_CONTAINER = \"quizzes/\";\r\n\r\nexport const QUIZ_RESULTS_CONTAINER = \"quizResults/\";\r\n\r\nexport const SHARES_CONTAINER_DATASET = \"shares/index.ttl\";\r\nexport const SHARE_LINKS_CONTAINER_DATASET = \"shares/links.ttl\";\r\n\r\nexport const SOLID_QUIZ_POD_PROFILE = \"https://test-solid-quiz.solidcommunity.net/profile/card#me\";\r\nexport const SOLID_QUIZ_POD_SHARES_DATASET = \"https://test-solid-quiz.solidcommunity.net/workspace/solidQuiz/shares/index.ttl\";","export const SOLID_PROVIDERS = [\r\n    'https://broker.pod.inrupt.com/',\r\n    'https://inrupt.net/',\r\n    'https://solidcommunity.net/',\r\n    \"https://solidweb.org/\"\r\n  ];","import React from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { SOLID_PROVIDERS } from '../../../constants/SolidProviders';\r\n\r\nexport const Providers: React.FC<Props> = (props: Props) => {\r\n    const providers = SOLID_PROVIDERS.map((provider) => \r\n        <option key={provider} value={provider}/>\r\n    );\r\n\r\n\treturn (\r\n        <datalist id={props.id}>\r\n            {providers}\r\n        </datalist>\r\n\t);\r\n}","import React from \"react\";\r\n\r\nexport interface ITranslateContext {\r\n    lang: string,\r\n    t: (key: string) => string\r\n  }\r\n  \r\nexport const defaultTranslateState = {\r\n    lang: \"en\",\r\n    t: (key: string) => \"Unknown\"\r\n  };\r\n  \r\nexport const TranslateContext = React.createContext<ITranslateContext>(defaultTranslateState);","import { LoginButton } from '@inrupt/solid-ui-react';\r\nimport React, { useContext, useState } from 'react';\r\nimport { APP_NAME } from '../../constants/DefaultValues';\r\nimport { Props } from './types';\r\nimport { Providers } from './providers';\r\nimport './styles.scoped.css';\r\nimport { TranslateContext } from '../../contexts/TranslateContext';\r\nimport { Button, Col, Container, Row } from 'react-bootstrap';\r\n\r\nexport const Authenticate: React.FC<Props> = (props: Props) => {\r\n\tconst { t } = useContext(TranslateContext);\r\n\r\n    const authOptions = {\r\n        clientName: APP_NAME,\r\n      };\r\n\r\n    const [oidcIssuer, setOidcIssuer] = useState(\"\");\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      setOidcIssuer(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <Container className='square-box d-flex flex-column text-center'>\r\n            <h1>{t(\"auth.title\")}</h1>\r\n            <Container className='px-4 inner-box'>\r\n                <p>{t(\"auth.label\")}</p>\r\n                <Row className='mt-3'>\r\n                    <Col>\r\n                        <input\r\n                            className=\"inner-box-dropDown\"\r\n                            type=\"text\"\r\n                            name=\"oidcIssuer\"\r\n                            list=\"providers\"\r\n                            value={oidcIssuer}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <Providers id=\"providers\" />\r\n                    </Col>\r\n                </Row>\r\n                <Row className='mt-5'>\r\n                    <Col>\r\n                        <LoginButton\r\n                            oidcIssuer={oidcIssuer}\r\n                            redirectUrl={window.location.href}\r\n                            authOptions={authOptions}\r\n                        >\r\n                            <Button variant=\"primary\" size='lg' className='login-btn'>{t(\"auth.button.login\")}</Button>\r\n                        </LoginButton>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Container>\r\n    );\r\n}","import React from \"react\";\r\n\r\nexport interface ISpinnerContext {\r\n  Spinner: boolean;\r\n  ShowSpinner: () => void;\r\n  HideSpinner: () => void;\r\n  SpinAround: (delegate: () => Promise<void>) => Promise<void>;\r\n}\r\n  \r\nexport const defaultSpinnerState = {\r\n  Spinner: true,\r\n  ShowSpinner: () => {},\r\n  HideSpinner: () => {},\r\n  SpinAround: (delegate: () => Promise<void>) => { throw new Error('This is a default value, you should not call it!') }\r\n};\r\n  \r\n  export const SpinnerContext = React.createContext<ISpinnerContext>(defaultSpinnerState);","import React, { useContext, useEffect } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { SpinnerContext } from '../../../../contexts/SpinnerContext';\r\n\r\nexport const Spinner: React.FC<Props> = (props: Props) => {\r\n\tconst { Spinner, HideSpinner } = useContext(SpinnerContext);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst timer = setTimeout(() => {\r\n\t\t\tHideSpinner();\r\n\t\t}, 1000);\r\n\t\treturn () => clearTimeout(timer);\r\n\t  }, [HideSpinner]);\r\n\r\n\treturn (\t\r\n\t\t<>\r\n\t\t\t{Spinner &&\r\n\t\t\t<div className=\"spinner-uter-container\">\r\n\t\t\t\t<div className='flex-container-spinner'>\r\n\t\t\t\t\t<div className=\"spinner-container\">\r\n\t\t\t\t\t\t<div className=\"loading-spinner\">\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>}\t\r\n\t\t</>\t\r\n\t);\r\n}","export default class SpinnerCounter{\r\n    private counter: number = 0;\r\n\r\n    private showSpinner(): boolean{\r\n        return this.counter > 0;\r\n    }\r\n\r\n    public Increase(): boolean{\r\n        this.counter++;\r\n\r\n        return this.showSpinner();\r\n    }\r\n\r\n    public Decrease(): boolean{\r\n        if (this.counter !== 0) {\r\n            this.counter--;\r\n        }\r\n        \r\n        return this.showSpinner();\r\n    }\r\n}","import React, { useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport { TranslateContext } from '../../../contexts/TranslateContext';\r\n\r\nexport const InfoModal: React.FC<Props> = (props: Props) => {\t\r\n\tconst { t } = useContext(TranslateContext);\r\n\r\n\treturn (\r\n\t\t<> \r\n\t\t\t<Modal show={props.show} onHide={props.onHide} centered>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>{t(\"page.common.info.title\")}</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t{props.body}\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer className='justify-content-center'>\r\n\t\t\t\t\t<Button variant=\"primary\" onClick={() => props.onHide()}>{t(\"page.common.info.btnOk\")}</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n}","import React, { useCallback, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { defaultSpinnerState, SpinnerContext } from '../../../contexts/SpinnerContext';\r\nimport { Spinner } from './spinner';\r\nimport SpinnerCounter from '../../../helpers/SpinnerCounter';\r\nimport { InfoModal } from '../infoModal';\r\n\r\nexport const SpinnerContextComponent: React.FC<Props> = (props: Props) => {\r\n\tconst [showSpinner, setShowSpinner] = useState(defaultSpinnerState.Spinner);\r\n\tconst [spinnerCounter] = useState<SpinnerCounter>(new SpinnerCounter());\r\n\tconst [error, setError] = useState<string | null>(null);\r\n\r\n\tconst ShowSpinner = useCallback(() => {\r\n\t\tconst spinner = spinnerCounter.Increase();\r\n\t\tsetShowSpinner(spinner);\r\n\t}, [spinnerCounter]);\r\n\r\n\tconst HideSpinner = useCallback(() => {\r\n\t\tconst spinner = spinnerCounter.Decrease();\r\n\t\tsetShowSpinner(spinner);\r\n\t}, [spinnerCounter]);\r\n\r\n\tconst SpinAround = useCallback(async (delegate: () => Promise<void>) => {\r\n\t\tShowSpinner();\r\n\t\tawait delegate().catch((error: any) => {\r\n\t\t\tconsole.log(error);\r\n\t\t\tsetError(error);\r\n\t\t}).finally(() =>{\r\n\t\t  HideSpinner();\r\n\t\t});\r\n\t}, [ShowSpinner, HideSpinner]);\r\n\r\n\treturn (\r\n\t\t<SpinnerContext.Provider value={{\r\n\t\t\t\tSpinner: showSpinner,\r\n\t\t\t\tShowSpinner,\r\n\t\t\t\tHideSpinner,\r\n\t\t\t\tSpinAround,\r\n\t\t\t}}>\r\n\t\t\t\t{props.children}\r\n\t\t\t\t<Spinner />\r\n\t\t\t\t<InfoModal show={error !== null} onHide={() => setError(null)} body={error?.toString() ?? \"error\"} />\r\n\t\t</SpinnerContext.Provider>\r\n\t);\r\n}","import React, { useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Col, Container, Dropdown, DropdownButton, Row } from 'react-bootstrap';\r\nimport { TranslateContext } from '../../../../contexts/TranslateContext';\r\n\r\nexport const LanguageSelector: React.FC<Props> = (props: Props) => {\r\n\tconst { t, lang } = useContext(TranslateContext);\t\r\n\r\n\tconst selectedLangLabel = lang === \"hu\" ? t(\"lang.hungarian\") : t(\"lang.english\");\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Row className=\"justify-content-end\">\r\n\t\t\t\t<Col md=\"auto\">\r\n\t\t\t\t\t<DropdownButton \r\n\t\t\t\t\t\tid=\"dropdown-basic-button\" \r\n\t\t\t\t\t\ttitle={selectedLangLabel} \r\n\t\t\t\t\t\tvariant='outline-secondary' \r\n\t\t\t\t\t\tonSelect={(eventKey: any, event: Object) => props.changeLang(eventKey)}\r\n\t\t\t\t\t\tclassName=\"language-selector\">\r\n\t\t\t\t\t\t<Dropdown.Item eventKey=\"en\">{t(\"lang.english\")}</Dropdown.Item>\r\n\t\t\t\t\t\t<Dropdown.Item eventKey=\"hu\">{t(\"lang.hungarian\")}</Dropdown.Item>\r\n\t\t\t\t\t</DropdownButton>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { defaultTranslateState, TranslateContext } from '../../../contexts/TranslateContext';\r\nimport { isSupportedLanguage, translate } from '../../../i18n/Locales';\r\nimport { LanguageSelector } from './languageSelector';\r\n\r\nexport const TranslateContextComponent: React.FC<Props> = (props: Props) => {\r\n\tconst [lang, setLang] = useState(defaultTranslateState.lang);\r\n\r\n\tuseEffect(() => {\r\n\t\tvar userLang = navigator.language;\r\n\t\tif (userLang && isSupportedLanguage(userLang)) {\r\n\t\t\tsetLang(userLang);\r\n\t\t}\r\n\t  }, []);\r\n\r\n\tconst t = (key: string) => {\r\n\t\treturn translate(key, lang);\r\n\t}\r\n\r\n\tconst changeLang = (language: string) => {\r\n\t\tsetLang(language);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<TranslateContext.Provider value={{\r\n\t\t\tlang,\r\n\t\t\tt\r\n\t\t}}>\r\n\t\t\t<LanguageSelector changeLang={changeLang} />\r\n\t\t\t{props.children}\r\n\t\t</TranslateContext.Provider>\r\n\t);\r\n}","import en from './en.json'\r\nimport hu from './hu.json'\r\n\r\nexport const isSupportedLanguage = (language: string): boolean => {\r\n    return language === 'hu' ||\r\n        language === 'en';\r\n}\r\n\r\nexport const translate = (key: string, language: string): string => {\r\n    let languageFile: { [key: string]: string } = {};\r\n\r\n    if (language === 'hu') {\r\n        languageFile = hu;\r\n    }\r\n    else{\r\n        languageFile = en;\r\n    }\r\n\r\n    return languageFile[key];\r\n}","import React from \"react\";\r\n\r\nexport interface IPageSwitcherContext {\r\n  ActualPage: JSX.Element | null;\r\n  SwitchTo: (page: JSX.Element) => void;\r\n  GoBack: () => void;\r\n  }\r\n  \r\nexport const defaultPageSwitcherState = {\r\n    ActualPage: null,\r\n    SwitchTo: () => {},\r\n    GoBack: () => {},\r\n  };\r\n  \r\n  export const PageSwitcherContext = React.createContext<IPageSwitcherContext>(defaultPageSwitcherState);","import React, { useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { PageSwitcherContext } from '../../../contexts/PageSwitcherContext';\r\n\r\nexport const PageSwitcherComponent: React.FC<Props> = (props: Props) => {\r\n\tconst [actualPage, setActualPage] = useState(props.defaultPage);\r\n\r\n\treturn (\r\n\t\t<PageSwitcherContext.Provider value={{\r\n\t\t\tActualPage: actualPage,\r\n\t\t\tSwitchTo: (page: JSX.Element) => setActualPage(page),\r\n\t\t\tGoBack: () => setActualPage(props.defaultPage),\r\n\t\t}}>\r\n\t\t\t{actualPage}\r\n\t\t</PageSwitcherContext.Provider>\r\n\t);\r\n}","import React from \"react\";\r\nimport { SolidDataset_Type } from \"../constants/SolidDatasetType\";\r\n\r\nexport interface IWorkspaceContext {\r\n    workspace: SolidDataset_Type | null,\r\n    getWorkspace: () => SolidDataset_Type,\r\n    workspaceUrl: string,\r\n    webId: string\r\n  }\r\n  \r\nexport const defaultWorkspaceContext = {\r\n    workspace: null,\r\n    getWorkspace: () => { throw new Error('Workspace not found!') },\r\n    workspaceUrl: \"unknown\",\r\n    webId: \"unknown\"\r\n  };\r\n  \r\nexport const WorkspaceContext = React.createContext<IWorkspaceContext>(defaultWorkspaceContext);","/**\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\n * as part of artifact: [generated-vocab-solidquiz], version: [0.0.1]\n * on 'Sunday, May 8, 2022 1:49 PM'.\n *\n * Vocabulary built from input: [solidQuiz.ttl].\n *\n * \n    The solidQuiz ontology aims at describing quiz objects and quiz results.\n    \n */\n\n// We prefix our local variables with underscores to (hopefully!) prevent\n// potential names clashes with terms from vocabularies.\nconst { VocabTerm: _VocabTerm, getLocalStore } = require(\"@inrupt/solid-common-vocab\");\nconst _DataFactory = require(\"@rdfjs/data-model\");\n\nconst { namedNode: _namedNode } = _DataFactory;\n\nfunction _NS(localName) {\n  return _namedNode(`https://salathcs.solidcommunity.net/public/voc/SolidQuiz/v0p7/solidQuiz.ttl#${localName}`);\n}\n\n/**\n * \n    The solidQuiz ontology aims at describing quiz objects and quiz results.\n    \n */\nconst SOLIDQUIZ = {\n  PREFIX: \"solidQuiz\",\n  NAMESPACE: \"https://salathcs.solidcommunity.net/public/voc/SolidQuiz/v0p7/solidQuiz.ttl#\",\n  PREFIX_AND_NAMESPACE: { \"solidQuiz\": \"https://salathcs.solidcommunity.net/public/voc/SolidQuiz/v0p7/solidQuiz.ttl#\" },\n  NS: _NS,\n\n  // *****************\n  // All the Classes.\n  // *****************\n\n  /**\n   * An quiz is a multiple-choice test made for fun purposes.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  Quiz: new _VocabTerm(\n    _NS(\"Quiz\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`Quiz`, \"en\")\n    .addLabel(`Kvíz`, \"hu\")\n    .addComment(`An quiz is a multiple-choice test made for fun purposes.`, \"en\")\n    .addComment(`A kvíz egy felelet választós feladatsor szórakoztató jelleggel.`, \"hu\"),\n\n  /**\n   * Question for quiz, a quiz should have a few questions.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  Question: new _VocabTerm(\n    _NS(\"Question\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`question`, \"en\")\n    .addLabel(`kérdés`, \"hu\")\n    .addComment(`Question for quiz, a quiz should have a few questions.`, \"en\")\n    .addComment(`Kérdés kvízhez, egy kvíznek tartalmaznia kell kérdéseket.`, \"hu\"),\n\n  /**\n   * Answer for a question. This is mainly an option, might not be the correct answer.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  Answer: new _VocabTerm(\n    _NS(\"Answer\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`answer`, \"en\")\n    .addLabel(`válasz`, \"hu\")\n    .addComment(`Answer for a question. This is mainly an option, might not be the correct answer.`, \"en\")\n    .addComment(`Válasz a kérdésre. A válasz nem feltétlenül helyes, mivel ez egy válaszlehetőség.`, \"hu\"),\n\n  /**\n   * The result of a Quiz.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  QuizResult: new _VocabTerm(\n    _NS(\"QuizResult\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`Quiz result`, \"en\")\n    .addLabel(`Kvíz eredmény`, \"hu\")\n    .addComment(`The result of a Quiz.`, \"en\")\n    .addComment(`Egy kvíz eredménye.`, \"hu\"),\n\n  /**\n   * Question result for quiz result. Indicates the result of a specific question.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  QuestionResult: new _VocabTerm(\n    _NS(\"QuestionResult\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`question result`, \"en\")\n    .addLabel(`kérdés eredménye`, \"hu\")\n    .addComment(`Question result for quiz result. Indicates the result of a specific question.`, \"en\")\n    .addComment(`Kérdés eredménye kvíz eredményéhez. Egy konkrét kérdés eredményét jelöli.`, \"hu\"),\n\n  /**\n   * Solid quiz resource sharing. Shared resources are the quizzes and quiz result.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  Share: new _VocabTerm(\n    _NS(\"Share\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`share`, \"en\")\n    .addLabel(`megosztás`, \"hu\")\n    .addComment(`Solid quiz resource sharing. Shared resources are the quizzes and quiz result.`, \"en\")\n    .addComment(`Solid kvíz erőforrások megosztása. Megoszthatók a kvízek és kvíz eredmények`, \"hu\"),\n\n  /**\n   * Link to a share\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  ShareLink: new _VocabTerm(\n    _NS(\"ShareLink\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`share link`, \"en\")\n    .addLabel(`megosztás hivatkozás`, \"hu\")\n    .addComment(`Link to a share`, \"en\")\n    .addComment(`Hivatkozás egy megosztásra.`, \"hu\"),\n\n\n  // *******************\n  // All the Properties.\n  // *******************\n\n  /**\n   * Relationship between the quiz and the person who created it.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  createdBy: new _VocabTerm(\n    _NS(\"createdBy\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`created by`, \"en\")\n    .addLabel(`készítette`, \"hu\")\n    .addComment(`Relationship between the quiz and the person who created it.`, \"en\")\n    .addComment(`A kapcsolat a kvíz és az alkotója között.`, \"hu\"),\n\n  /**\n   * The relationship between the question and the quiz. An quiz has a few questions.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  quizQuestion: new _VocabTerm(\n    _NS(\"quizQuestion\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`question of the quiz`, \"en\")\n    .addLabel(`kérdés a kvízhez`, \"hu\")\n    .addComment(`The relationship between the question and the quiz. An quiz has a few questions.`, \"en\")\n    .addComment(`Kapcsolat a kérdés és a kvíz között. Egy kvízhez több kérdés kapcsolódik (általában).`, \"hu\"),\n\n  /**\n   * Relationship between the answer and the question. An question has at least two answer options.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  answerOption: new _VocabTerm(\n    _NS(\"answerOption\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`answer option for the question`, \"en\")\n    .addLabel(`válaszlehetőség a kérdésre`, \"hu\")\n    .addComment(`Relationship between the answer and the question. An question has at least two answer options.`, \"en\")\n    .addComment(`A válasz és a kérdés közötti kapcsolat. Egy kérdés legalább két válaszlehetőséggel rendelkezik.`, \"hu\"),\n\n  /**\n   * Relationship between the correct answer and the question.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  correctAnswerOption: new _VocabTerm(\n    _NS(\"correctAnswerOption\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`the correct answer option for the question`, \"en\")\n    .addLabel(`a helyes válaszlehetőség a kérdésre`, \"hu\")\n    .addComment(`Relationship between the correct answer and the question.`, \"en\")\n    .addComment(`A helyes válasz és a kérdés közötti kapcsolat.`, \"hu\"),\n\n  /**\n   * The relationship between the quiz result and the completed quiz.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  quizResultOf: new _VocabTerm(\n    _NS(\"quizResultOf\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`quiz result of`, \"en\")\n    .addLabel(`kvíz eredménye a`, \"hu\")\n    .addComment(`The relationship between the quiz result and the completed quiz.`, \"en\")\n    .addComment(`A kvíz eredménye és a megvalósított kvíz közötti kapcsolat.`, \"hu\"),\n\n  /**\n   * Relationship between the quiz result and the person who created it.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  quizResultCreatedBy: new _VocabTerm(\n    _NS(\"quizResultCreatedBy\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`quiz result created by`, \"en\")\n    .addLabel(`kvíz eredményét készítette`, \"hu\")\n    .addComment(`Relationship between the quiz result and the person who created it.`, \"en\")\n    .addComment(`A kapcsolat a kvíz eredménye és az alkotója között.`, \"hu\"),\n\n  /**\n   * The relationship between the quiz result and the question result, this is the first questions result.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  firstQuestionResult: new _VocabTerm(\n    _NS(\"firstQuestionResult\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`first question result`, \"en\")\n    .addLabel(`első kérdés eredménye`, \"hu\")\n    .addComment(`The relationship between the quiz result and the question result, this is the first questions result.`, \"en\")\n    .addComment(`A kvíz eredménye és a kérdés eredménye közötti kapcsolat, a kvíz első kérdésének eredménye.`, \"hu\"),\n\n  /**\n   * The relationship between two questions result, the domain is the previous and the range is the next.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  nextQuestionResult: new _VocabTerm(\n    _NS(\"nextQuestionResult\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`next question result`, \"en\")\n    .addLabel(`következő kérdés eredménye`, \"hu\")\n    .addComment(`The relationship between two questions result, the domain is the previous and the range is the next.`, \"en\")\n    .addComment(`Kapcsolat két kérdés eredménye között, a domain az előző, a range a következő.`, \"hu\"),\n\n  /**\n   * The relationship between two questions result, the domain is the next and the range is the previous.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  previousQuestionResult: new _VocabTerm(\n    _NS(\"previousQuestionResult\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`previous question result`, \"en\")\n    .addLabel(`előző kérdés eredménye`, \"hu\")\n    .addComment(`The relationship between two questions result, the domain is the next and the range is the previous.`, \"en\")\n    .addComment(`Kapcsolat két kérdés eredménye között, a domain az következő, a range az előző.`, \"hu\"),\n\n  /**\n   * The relationship between the question result and the question.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  questionResultOf: new _VocabTerm(\n    _NS(\"questionResultOf\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`the question for the result`, \"en\")\n    .addLabel(`a kérdés az eredményhez`, \"hu\")\n    .addComment(`The relationship between the question result and the question.`, \"en\")\n    .addComment(`A kérdés eredménye és a kérdés közötti kapcsolat.`, \"hu\"),\n\n  /**\n   * The relationship between the question result and the answer.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  questionResultsAnswer: new _VocabTerm(\n    _NS(\"questionResultsAnswer\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`the answer for the question in the result`, \"en\")\n    .addLabel(`a kérdésre adott válasz az eredményben`, \"hu\")\n    .addComment(`The relationship between the question result and the answer.`, \"en\")\n    .addComment(`A kérdés eredménye és a konkrét válasz közötti kapcsolat.`, \"hu\"),\n\n  /**\n   * The relationship between the shares and resource. You should access the shared resource, but the owner can revert it.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  sharedResource: new _VocabTerm(\n    _NS(\"sharedResource\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`shared resource`, \"en\")\n    .addLabel(`megosztott adat`, \"hu\")\n    .addComment(`The relationship between the shares and resource. You should access the shared resource, but the owner can revert it.`, \"en\")\n    .addComment(`A megosztás és az adat közötti kapcsolat. Az erőforrásnak elérhetőnek kell lennie számodra, the a tulajdonos megvonhatja azt.`, \"hu\"),\n\n  /**\n   * Shared resource's type. Shared types are the type of the quiz or type of quiz result.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  sharedResourceType: new _VocabTerm(\n    _NS(\"sharedResourceType\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`shared resource type`, \"en\")\n    .addLabel(`megosztott adat típusa`, \"hu\")\n    .addComment(`Shared resource's type. Shared types are the type of the quiz or type of quiz result.`, \"en\")\n    .addComment(`A megosztott adat típusa. Megosztás típusa vagy a kvíz típusa vagy a kvíz eredményének típusa.`, \"hu\"),\n\n  /**\n   * The relationship between share link and share.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  shareLinksLink: new _VocabTerm(\n    _NS(\"shareLinksLink\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`share link's link`, \"en\")\n    .addLabel(`megosztás hivatkozás hivatkozása`, \"hu\")\n    .addComment(`The relationship between share link and share.`, \"en\")\n    .addComment(`A megosztás hivatkozása és a megosztás közötti kapcsolat.`, \"hu\"),\n\n  /**\n   * The relationship between share link and individual / person, who got the share.\n   *\n   * This term has [2] labels and comments, in the languages [en, hu].\n   */\n  shareLinksIndividual: new _VocabTerm(\n    _NS(\"shareLinksIndividual\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`share link's individual`, \"en\")\n    .addLabel(`megosztás hivatkozás egyéne`, \"hu\")\n    .addComment(`The relationship between share link and individual / person, who got the share.`, \"en\")\n    .addComment(`A megosztás hivatkozása és a megosztást fogadó egyén / személy kapcsolata.`, \"hu\"),\n\n}\n\nexport default SOLIDQUIZ;\n","import SOLIDQUIZ from \"../helpers/SOLIDQUIZ\";\r\n\r\nexport const TITLE = SOLIDQUIZ.NAMESPACE + \"title\";\r\nexport const CREATED = SOLIDQUIZ.NAMESPACE + \"created\";\r\nexport const FIRST_QUESTION = SOLIDQUIZ.NAMESPACE + \"firstQuestion\";\r\nexport const MULTI_LANGUAGE_SUPPORT = SOLIDQUIZ.NAMESPACE + \"multiLanguageSupport\";\r\nexport const QUESTION_TEXT = SOLIDQUIZ.NAMESPACE + \"questionText\";\r\nexport const ANSWER_TEXT = SOLIDQUIZ.NAMESPACE + \"answerText\";\r\nexport const NUMBER_OF_QUESTIONS = SOLIDQUIZ.NAMESPACE + \"numberOfQuestions\";\r\nexport const QUIZ_RESULT_CREATED = SOLIDQUIZ.NAMESPACE + \"quizResultCreated\";\r\nexport const SUCCESS_OF_QUESTION_RESULT = SOLIDQUIZ.NAMESPACE + \"successOfQuestionResult\";\r\nexport const NUMBER_OF_CORRECT_ANSWERS = SOLIDQUIZ.NAMESPACE + \"numberOfCorrectAnswers\";\r\nexport const SHARE_CREATED = SOLIDQUIZ.NAMESPACE + \"shareCreated\";","import { getStringNoLocale, getStringWithLocale, Thing } from '@inrupt/solid-client';\r\nimport { MultiLangText } from '../models/MultiLangText';\r\n\r\nexport function getString(thing: Thing, propertyUri: string, multiLangSupport: boolean, lang: string): string {\r\n    let str: string | null = null;\r\n\r\n    if (multiLangSupport) {\r\n        str = getStringWithLocale(thing, propertyUri, lang);\r\n    }\r\n    else{\r\n        str = getStringNoLocale(thing, propertyUri);\r\n    }\r\n\r\n    return str ?? \"error\";\r\n}\r\n\r\nexport function getMutliLang(thing: Thing, propertyUri: string, multiLangSupport: boolean, lang: string): MultiLangText {\r\n    if (multiLangSupport) {\r\n        const textEn = getStringWithLocale(thing, propertyUri, 'en') ?? \"error\";\r\n        const textHu = getStringWithLocale(thing, propertyUri, 'hu') ?? \"error\";\r\n\r\n        return { textEn, textHu };\r\n    }\r\n    else{\r\n        const text = getStringNoLocale(thing, propertyUri) ?? \"error\";\r\n\r\n        if (lang === 'hu') {\r\n            return { textEn: \"\", textHu: text };\r\n        }\r\n        else{\r\n            return { textEn: text, textHu: \"\" };\r\n        }\r\n    }\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { getBoolean } from '@inrupt/solid-client';\r\nimport { MULTI_LANGUAGE_SUPPORT, TITLE } from '../../../../../constants/SolidQuizMissingValues';\r\nimport { TranslateContext } from '../../../../../contexts/TranslateContext';\r\nimport { getString } from '../../../../../helpers/LangReader';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nexport const QuizBtn: React.FC<Props> = (props: Props) => {\r\n\tconst { lang } = useContext(TranslateContext);\r\n\tconst [quizTitle, setQuizTitle] = useState<string>(\"\");\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst multiLangSupport = getBoolean(props.datasetAndThing.thing, MULTI_LANGUAGE_SUPPORT);\r\n\r\n\t\tlet title = getString(props.datasetAndThing.thing, TITLE, multiLangSupport ?? false, lang);\r\n\r\n\t\tsetQuizTitle(title);\r\n\t}, [props.datasetAndThing.thing, lang]);\r\n\r\n\treturn (\r\n\t\t\t<Button variant=\"secondary\" size=\"lg\" onClick={() => props.onQuizSelected(props.datasetAndThing)} >{quizTitle}</Button>\r\n\t);\r\n}","import { createSolidDataset, deleteSolidDataset, getSolidDataset, getSourceUrl, getThing, getThingAll, getUrl, saveSolidDatasetAt, Thing, Url, UrlString } from \"@inrupt/solid-client\";\r\nimport { RDF } from '@inrupt/vocab-common-rdf';\r\nimport { WS } from \"@inrupt/vocab-solid\";\r\nimport { SOLID_QUIZ_WORKSPACE } from \"../constants/DefaultValues\";\r\nimport { SolidFetch_Type, SolidDataset_Type } from \"../constants/SolidDatasetType\";\r\n  \r\nexport async function getProfileThing(webId: string, fetch: SolidFetch_Type): Promise<Thing> {\r\n  const profileDataset = await getSolidDataset(webId, {\r\n    fetch: fetch,\r\n  });\r\n  const profileThing = getThing(profileDataset, webId);\r\n\r\n  if (profileThing !== null) {\r\n    return profileThing;\r\n  }\r\n  \r\n  throw new Error('Fetching profile failed!');\r\n}\r\n\r\nexport function getWorkSpaceLocation(profileThing: Thing): string {\r\n  const podRoot = getUrl(profileThing, WS.storage);\r\n\r\n  if (podRoot === null) {\r\n    throw new Error('Determining pod root failed!');\r\n  }\r\n\r\n  return `${podRoot}${SOLID_QUIZ_WORKSPACE}`;\r\n}\r\n\r\nexport async function getOrCreateWorkSpace(workspaceUri: string, fetch: SolidFetch_Type): Promise<SolidDataset_Type> {\r\n    try {\r\n      const workspace = await getSolidDataset(workspaceUri, { fetch });\r\n      return workspace;\r\n    } catch (error: any) {\r\n      if (error.statusCode === 404) {\r\n        const workspace = await saveSolidDatasetAt(\r\n          workspaceUri,\r\n          createSolidDataset(),\r\n          {\r\n            fetch,\r\n          }\r\n        );\r\n        return workspace;\r\n      }\r\n\r\n      console.log(error);\r\n    }\r\n\r\n    throw new Error('unkown error in getOrCreateWorkSpace');\r\n  }\r\n  \r\nexport async function deleteDataset(dataset: SolidDataset_Type, fetch: SolidFetch_Type) {\r\n    const uri = getSourceUrl(dataset);\r\n\r\n    deleteSolidDataset(uri, { fetch });\r\n  }\r\n\r\nexport function getFirstThingByRDFType(workspace: SolidDataset_Type, rdfType: Url | UrlString): Thing | null {\r\n    const allThings = getThingAll(workspace);\r\n\r\n    for (let i = 0; i < allThings.length; i++) {\r\n        const thing = allThings[i];\r\n        const typeUrl = getUrl(thing, RDF.type);\r\n        if (typeUrl === rdfType) {\r\n            return thing;\r\n        }\r\n    }\r\n\r\n    return null;    \r\n}\r\n\r\nexport function getAllThingByRDFType(workspace: SolidDataset_Type, rdfType: Url | UrlString): Array<Thing> {\r\n    const allThings = getThingAll(workspace);\r\n    let result: Array<Thing> = [];\r\n\r\n    allThings.forEach(thing => {\r\n        const typeUrl = getUrl(thing, RDF.type);\r\n        if (typeUrl === rdfType) {\r\n            result.push(thing);\r\n        }\r\n    });\r\n\r\n    return result;    \r\n}\r\n\r\nexport function getAllThingByUris(workspace: SolidDataset_Type, uris: string[]): Array<Thing> {\r\n    let result: Array<Thing> = [];\r\n\r\n    uris.forEach(uri => {\r\n        const thing = getThing(workspace, encodeURI(uri));\r\n\r\n        if (thing !== null) {\r\n          result.push(thing);\r\n        }\r\n    });\r\n\r\n    return result;    \r\n}\r\n","import { getSolidDataset, saveSolidDatasetAt, createSolidDataset, setThing, createThing, buildThing, hasAccessibleAcl, createAcl, setPublicResourceAccess, saveAclFor, getSourceUrl, setAgentResourceAccess } from '@inrupt/solid-client';\r\nimport { SHARES_CONTAINER_DATASET, SOLID_QUIZ_POD_SHARES_DATASET } from '../constants/DefaultValues';\r\nimport { SolidDataset_Type, SolidFetch_Type } from '../constants/SolidDatasetType';\r\nimport SOLIDQUIZ from './../helpers/SOLIDQUIZ';\r\nimport { Thing } from '@inrupt/solid-client';\r\nimport { RDF } from '@inrupt/vocab-common-rdf';\r\nimport { SHARE_CREATED } from '../constants/SolidQuizMissingValues';\r\nimport { getThingAll } from '@inrupt/solid-client';\r\nimport { getUrl } from '@inrupt/solid-client';\r\nimport { getThing } from '@inrupt/solid-client';\r\n\r\nexport async function publishQuiz(quizUri: string): Promise<Thing> {\r\n    let publicSharesDataset = await getOrCreateShares(SOLID_QUIZ_POD_SHARES_DATASET);\r\n    const newPublicShareThing = createPublishedThing(quizUri, SOLIDQUIZ.Quiz.value);\r\n\r\n    publicSharesDataset = setThing(publicSharesDataset, newPublicShareThing);\r\n\r\n    const updatedDataset = await saveSolidDatasetAt(SOLID_QUIZ_POD_SHARES_DATASET, publicSharesDataset);\r\n\r\n    const savedThingUri = getSavedShareThingsUri(newPublicShareThing, updatedDataset);\r\n    const savedThing = getThing(updatedDataset, savedThingUri);\r\n\r\n    if (savedThing === null) {\r\n        throw new Error(\"creating share failed, cannot load it\");\r\n    }\r\n\r\n    return savedThing;\r\n}\r\n\r\nexport async function shareQuiz(friendsShareSpace: string, quizUri: string): Promise<Thing> {\r\n    const friendsSharesDataset = await getSolidDataset(friendsShareSpace);\r\n    const newPublicShareThing = createPublishedThing(quizUri, SOLIDQUIZ.Quiz.value);\r\n\r\n    let publicSharesDataset = setThing(friendsSharesDataset, newPublicShareThing);\r\n\r\n    const updatedDataset = await saveSolidDatasetAt(friendsShareSpace, publicSharesDataset);\r\n\r\n    const savedThingUri = getSavedShareThingsUri(newPublicShareThing, updatedDataset);\r\n    const savedThing = getThing(updatedDataset, savedThingUri);\r\n\r\n    if (savedThing === null) {\r\n        throw new Error(\"creating share failed, cannot load it\");\r\n    }\r\n\r\n    return savedThing;\r\n}\r\n\r\nexport async function publishQuizResult(quizResultUri: string): Promise<Thing> {\r\n    let publicSharesDataset = await getOrCreateShares(SOLID_QUIZ_POD_SHARES_DATASET);\r\n    const newPublicShareThing = createPublishedThing(quizResultUri, SOLIDQUIZ.QuizResult.value);\r\n\r\n    publicSharesDataset = setThing(publicSharesDataset, newPublicShareThing);\r\n\r\n    const updatedDataset = await saveSolidDatasetAt(SOLID_QUIZ_POD_SHARES_DATASET, publicSharesDataset);\r\n\r\n    const savedThingUri = getSavedShareThingsUri(newPublicShareThing, updatedDataset);\r\n    const savedThing = getThing(updatedDataset, savedThingUri);\r\n\r\n    if (savedThing === null) {\r\n        throw new Error(\"creating share failed, cannot load it\");\r\n    }\r\n\r\n    return savedThing;\r\n}\r\n\r\nexport async function getPublishedShares(shareTypeFilter: string): Promise<Thing[]> {\r\n    const publicSharesDataset = await getOrCreateShares(SOLID_QUIZ_POD_SHARES_DATASET);\r\n    const publicSharesThings = getThingAll(publicSharesDataset);\r\n\r\n    const rv: Thing[] = [];\r\n\r\n    publicSharesThings.forEach(thing => {\r\n        const shareType = getUrl(thing, SOLIDQUIZ.sharedResourceType.value);\r\n\r\n        if (shareType === shareTypeFilter) {\r\n            rv.push(thing);\r\n        }\r\n    });\r\n\r\n    return rv;\r\n}\r\n\r\nexport async function getLocalShares(sharesDatasetUri: string, shareTypeFilter: string, fetch: SolidFetch_Type): Promise<Thing[]> {\r\n    const sharesDataset = await getSolidDataset(sharesDatasetUri, { fetch });\r\n    const localSharesThings = getThingAll(sharesDataset);\r\n\r\n    const rv: Thing[] = [];\r\n\r\n    localSharesThings.forEach(thing => {\r\n        const shareType = getUrl(thing, SOLIDQUIZ.sharedResourceType.value);\r\n\r\n        if (shareType === shareTypeFilter) {\r\n            rv.push(thing);\r\n        }\r\n    });\r\n\r\n    return rv;\r\n}\r\n\r\nexport function getSharesDataset(workspaceUri: string) {\r\n    return `${workspaceUri}${SHARES_CONTAINER_DATASET}`;\r\n}\r\n\r\nexport async function createSharesIndexForPublic(workspaceUri: string, webId:string, fetch: SolidFetch_Type) {\r\n    const sharesUri = getSharesDataset(workspaceUri);\r\n\r\n    if (await isLocalSharesExists(sharesUri)) {\r\n        return;\r\n    }\r\n\r\n    const sharesDataset = await saveSolidDatasetAt(sharesUri, createSolidDataset(), {fetch});\r\n\r\n    if (!hasAccessibleAcl(sharesDataset)) {\r\n        throw new Error(\"Has no control right!\");\r\n    }\r\n\r\n    const ownerAcl = createAcl(sharesDataset);\r\n\r\n    const ownerUpdatedAcl = setAgentResourceAccess(\r\n        ownerAcl,\r\n        webId,\r\n        { read: true, append: true, write: true, control: true }\r\n      );\r\n      \r\n    // save the new public Acl:\r\n    await saveAclFor(sharesDataset, ownerUpdatedAcl, { fetch });\r\n\r\n    const publicAcl = createAcl(sharesDataset);\r\n\r\n    const updatedPublicAcl = setPublicResourceAccess(\r\n        publicAcl,\r\n        { read: true, append: true, write: false, control: false }\r\n      );\r\n      \r\n      // save the new public Acl:\r\n      await saveAclFor(sharesDataset, updatedPublicAcl, { fetch });\r\n}\r\n\r\n\r\n//privates\r\nasync function getOrCreateShares(uri: string): Promise<SolidDataset_Type> {\r\n    try {\r\n      const sharesDataset = await getSolidDataset(uri);\r\n      return sharesDataset;\r\n    } catch (error: any) {\r\n      if (error.statusCode === 404) {\r\n        const sharesDataset = await saveSolidDatasetAt(\r\n            uri,\r\n            createSolidDataset()\r\n        );\r\n        return sharesDataset;\r\n      }\r\n\r\n      console.log(error);\r\n    }\r\n\r\n    throw new Error('shares folder unavailable');\r\n}\r\nasync function isLocalSharesExists(uri: string): Promise<boolean> {\r\n    try {\r\n      await getSolidDataset(uri);\r\n      return true;\r\n    } catch (error: any) {\r\n        return false;\r\n    }\r\n}\r\n\r\nfunction createPublishedThing(sharedResourceUri: string, sharedType: string): Thing {\r\n    const shareThing = buildThing(createThing())\r\n    .addUrl(RDF.type, SOLIDQUIZ.Share.value)\r\n    .addDatetime(SHARE_CREATED, new Date())\r\n    .addUrl(SOLIDQUIZ.sharedResource.value, sharedResourceUri)\r\n    .addUrl(SOLIDQUIZ.sharedResourceType.value, sharedType)\r\n    .build();\r\n\r\n    return shareThing;\r\n}\r\n\r\nfunction getSavedShareThingsUri(localThing: Thing, updatedDataset: SolidDataset_Type): string {\r\n    const indexOfSeparator = localThing.url.lastIndexOf('/');\r\n\r\n    const name = localThing.url.substring(indexOfSeparator + 1);\r\n\r\n    const datasetUri = getSourceUrl(updatedDataset);\r\n\r\n    return `${datasetUri}#${name}`;\r\n}\r\n","import { addInteger, addUrl, buildThing, createSolidDataset, createThing, getSolidDataset, getSourceUrl, getThing, saveSolidDatasetAt, setThing, ThingBuilder, ThingLocal } from '@inrupt/solid-client';\r\nimport { RDF } from '@inrupt/vocab-common-rdf';\r\nimport { QUIZZES_CONTAINER } from '../constants/DefaultValues';\r\nimport { CREATED, MULTI_LANGUAGE_SUPPORT, NUMBER_OF_QUESTIONS, TITLE } from '../constants/SolidQuizMissingValues';\r\nimport { SolidDataset_Type, SolidFetch_Type } from '../constants/SolidDatasetType';\r\nimport SOLIDQUIZ from '../helpers/SOLIDQUIZ';\r\nimport { QuizFormModel } from '../models/QuizFormModel';\r\nimport { QuizContainer } from './../models/QuizContainer';\r\nimport { QuestionContainer } from './../models/QuestionContainer';\r\nimport { NestedLocalDataset } from '../models/NestedLocalDataset';\r\nimport { DatasetAndThing } from '../models/DatasetAndThing';\r\n\r\nexport function createQuizContainer(quizName: string, quizFormModel: QuizFormModel, webId: string): QuizContainer {\r\n    const quizThingBuilder = buildThing(createThing({ name: quizName }))\r\n      .addUrl(RDF.type, SOLIDQUIZ.Quiz.value)\r\n      .addDatetime(CREATED, new Date())\r\n      .addUrl(SOLIDQUIZ.createdBy.value, webId)\r\n      .addBoolean(MULTI_LANGUAGE_SUPPORT, quizFormModel.multiLang);\r\n\r\n    addTitlesToQuizBasedOnLang(quizThingBuilder, quizFormModel);\r\n\r\n    const quizThing = quizThingBuilder.build();\r\n\r\n    return { quizName, quizFormModel, quiz: quizThing, questions: [] };\r\n}\r\n\r\n//quiz resource name, contained inside the pod, when saving will get file extension: .ttl\r\nexport function createQuizResourceName(quizFormModel: QuizFormModel): string {\r\n    const trimedEn = quizFormModel.quizTitleEn.replace(/\\s/g, \"\");\r\n    const trimedHu = quizFormModel.quizTitleHu.replace(/\\s/g, \"\");\r\n    return `${trimedEn}_${trimedHu}`;\r\n}\r\n\r\nexport function getQuizzesContainer(workspaceUri: string) {\r\n    return `${workspaceUri}${QUIZZES_CONTAINER}`;\r\n}\r\n\r\nexport function getSpecificQuizUri(workspaceUri: string, quizTitle: string) {\r\n    return `${getQuizzesContainer(workspaceUri)}${quizTitle}/${quizTitle}.ttl`;\r\n}\r\n\r\nexport async function createQuizzesContainer(workspaceUri: string, fetch: SolidFetch_Type) {\r\n    const quizzesWorkspace = getQuizzesContainer(workspaceUri);\r\n\r\n    if (await isQuizzesExists(quizzesWorkspace)) {\r\n        return;\r\n    }\r\n\r\n    await saveSolidDatasetAt(quizzesWorkspace, createSolidDataset(), { fetch });\r\n}\r\n\r\nexport async function checkQuizTitleIsAlreadyReserved(quizTitle: string, workspaceUri: string, fetch: SolidFetch_Type): Promise<boolean> {\r\n  const quizUrl = getSpecificQuizUri(workspaceUri, quizTitle);\r\n  try {\r\n    await getSolidDataset(quizUrl, { fetch });\r\n    return true;\r\n  } catch (error: any) {\r\n    if (error.statusCode === 404) {\r\n      return false;\r\n    }\r\n\r\n    console.log(error);\r\n  }\r\n\r\n  throw new Error('unkown error in checkQuizTitleIsAlreadyReserved');\r\n}\r\n\r\nexport async function saveNewQuiz(quizContainer: QuizContainer, workspaceUri: string, fetch: SolidFetch_Type): Promise<DatasetAndThing> {\r\n  const quizUrl = getSpecificQuizUri(workspaceUri, quizContainer.quizName);\r\n\r\n  addQuestionsToQuiz(quizContainer, quizUrl);\r\n\r\n\r\n  let localeDataset = createSolidDataset();\r\n  localeDataset = setThing(localeDataset, quizContainer.quiz);\r\n  const nestedDateset = { localeDataset };\r\n  addQuestionsToDataset(nestedDateset, quizContainer);\r\n  \r\n  const updatedDataset = await saveSolidDatasetAt(quizUrl, nestedDateset.localeDataset, {\r\n    fetch: fetch,\r\n  });\r\n  \r\n  const savedThingUri = getSavedQuizThingsUri(quizContainer.quizName, updatedDataset);\r\n  const savedThing = getThing(updatedDataset, savedThingUri);\r\n\r\n  if (savedThing === null) {\r\n      throw new Error(\"creating share failed, cannot load it\");\r\n  }\r\n\r\n  return { dataset: updatedDataset, thing: savedThing };\r\n}\r\n\r\n\r\n//privates\r\nfunction addTitlesToQuizBasedOnLang(quizThingBuilder: ThingBuilder<ThingLocal>, quizFormModel: QuizFormModel) {\r\n    if (quizFormModel.multiLang) {\r\n        quizThingBuilder.addStringWithLocale(TITLE, quizFormModel.quizTitleEn, \"en\")\r\n                        .addStringWithLocale(TITLE, quizFormModel.quizTitleHu, \"hu\");\r\n    }\r\n    else if (quizFormModel.lang === 'hu') {\r\n        quizThingBuilder.addStringNoLocale(TITLE, quizFormModel.quizTitleHu);\r\n    }\r\n    else{\r\n        quizThingBuilder.addStringNoLocale(TITLE, quizFormModel.quizTitleEn);\r\n    }\r\n}\r\n\r\nfunction addQuestionsToQuiz(quizContainer: QuizContainer, quizUrl: string){\r\n  for (let i = 0; i < quizContainer.questions.length; i++) {\r\n    const questionContainer = quizContainer.questions[i];\r\n    \r\n    const questionUrl = `${quizUrl}#${questionContainer.questionName}`;\r\n\r\n    quizContainer.quiz = addUrl(quizContainer.quiz, SOLIDQUIZ.quizQuestion.value, questionUrl);\r\n  }\r\n\r\n  quizContainer.quiz = addInteger(quizContainer.quiz, NUMBER_OF_QUESTIONS, quizContainer.questions.length);\r\n}\r\n\r\nfunction addQuestionsToDataset(nestedDataset: NestedLocalDataset, quizContainer: QuizContainer) {\r\n  for (let i = 0; i < quizContainer.questions.length; i++) {\r\n    const questionContainer = quizContainer.questions[i];\r\n    \r\n    nestedDataset.localeDataset = setThing(nestedDataset.localeDataset, questionContainer.question);\r\n    addAnswersToDataset(nestedDataset, questionContainer);\r\n  }\r\n}\r\n\r\nfunction addAnswersToDataset(nestedDataset: NestedLocalDataset, questionContainer: QuestionContainer) {\r\n  for (let i = 0; i < questionContainer.answers.length; i++) {\r\n    const answer = questionContainer.answers[i].answer;\r\n    \r\n    nestedDataset.localeDataset = setThing(nestedDataset.localeDataset, answer);\r\n  }\r\n}\r\n\r\nfunction getSavedQuizThingsUri(quizName: string, updatedDataset: SolidDataset_Type): string {\r\n    const datasetUri = getSourceUrl(updatedDataset);\r\n\r\n    return `${datasetUri}#${quizName}`;\r\n}\r\n\r\nasync function isQuizzesExists(uri: string): Promise<boolean> {\r\n    try {\r\n      await getSolidDataset(uri);\r\n      return true;\r\n    } catch (error: any) {\r\n        return false;\r\n    }\r\n}\r\n","import { DatasetAndThing } from \"../models/DatasetAndThing\";\r\nimport { SolidDataset_Type, SolidFetch_Type } from \"../constants/SolidDatasetType\";\r\nimport * as workspaceService from '../services/WorkspaceService';\r\nimport SOLIDQUIZ from \"./SOLIDQUIZ\";\r\nimport * as sharesService from '../services/SharesService';\r\nimport * as quizService from '../services/QuizService';\r\nimport { getSolidDataset, getSourceUrl, getThing, getUrl, getUrlAll, Thing } from \"@inrupt/solid-client\";\r\nimport { LDP, RDF } from \"@inrupt/vocab-common-rdf\";\r\n\r\nexport async function getOwnQuizzes(workspaceUri: string, fetch: SolidFetch_Type): Promise<SolidDataset_Type[]> {\r\n    const containerUri = quizService.getQuizzesContainer(workspaceUri);\r\n    const containerDataset = await getSolidDataset(containerUri, { fetch });\r\n    const datasetThing = getThing(containerDataset, containerUri);\r\n\r\n    if (datasetThing === null) {\r\n        console.log(\"Cannot found container: \" + containerDataset);\r\n        return [];\r\n    }\r\n\r\n    const containedResources = getUrlAll(datasetThing, LDP.contains);\r\n\r\n    const quizDatasets = await getQuizDatasets(containedResources, fetch);\r\n\r\n    return quizDatasets;\r\n}\r\n\r\nexport function getQuizzesFromDatasets(quizDatasets: SolidDataset_Type[]): DatasetAndThing[] {\r\n    const quizThings: DatasetAndThing[] = [];\r\n\r\n    for (let i = 0; i < quizDatasets.length; i++) {\r\n        const quizDataset = quizDatasets[i];\r\n        \r\n        const quizThing = workspaceService.getFirstThingByRDFType(quizDataset, SOLIDQUIZ.Quiz.value);\r\n\r\n        if (quizThing !== null) {\r\n            quizThings.push({ dataset: quizDataset, thing: quizThing });\r\n        }\r\n    }\r\n\r\n    return quizThings;\r\n}\r\n\r\nexport async function getPublicDatasets(): Promise<SolidDataset_Type[]> {\r\n    const publicQuizThings = await sharesService.getPublishedShares(SOLIDQUIZ.Quiz.value);\r\n\r\n    const rv: SolidDataset_Type[] = [];\r\n\r\n    const fetchedDatasets = await tryGetSharedDatasetsAtOnce(publicQuizThings, undefined);\r\n\r\n    for (let i = 0; i < fetchedDatasets.length; i++) {\r\n        const dataset = fetchedDatasets[i];\r\n        \r\n        if (dataset !== null) {\r\n            rv.push(dataset);\r\n        }\r\n    }\r\n\r\n    return rv;\r\n}\r\n\r\nexport async function getLocalSharesDatasets(workspaceUri: string, fetch: SolidFetch_Type): Promise<SolidDataset_Type[]> {\r\n    const localSharesUri = sharesService.getSharesDataset(workspaceUri);\r\n    const localSharesQuizThings = await sharesService.getLocalShares(localSharesUri, SOLIDQUIZ.Quiz.value, fetch);\r\n\r\n    const rv: SolidDataset_Type[] = [];\r\n\r\n    const fetchedDatasets = await tryGetSharedDatasetsAtOnce(localSharesQuizThings, fetch);\r\n\r\n    for (let i = 0; i < fetchedDatasets.length; i++) {\r\n        const dataset = fetchedDatasets[i];\r\n        \r\n        if (dataset !== null) {\r\n            rv.push(dataset);\r\n        }\r\n    }\r\n\r\n    return rv;\r\n}\r\n\r\nexport function mergeQuizzes(localResults: SolidDataset_Type[], publicSharesResults: SolidDataset_Type[], localharesResults: SolidDataset_Type[]): SolidDataset_Type[] {    \r\n    const rv: SolidDataset_Type[] = [...localResults];\r\n\r\n    publicSharesResults.forEach(publisResult => {\r\n        const conflict = rv.find(item => {\r\n            const publishedUri = getSourceUrl(publisResult);\r\n            const localUri = getSourceUrl(item);\r\n\r\n            return publishedUri === localUri;\r\n        });\r\n\r\n        if (conflict === undefined) {\r\n            rv.push(publisResult);\r\n        }\r\n    });\r\n\r\n    localharesResults.forEach(localShareResult => {\r\n        const conflict = rv.find(item => {\r\n            const publishedUri = getSourceUrl(localShareResult);\r\n            const localUri = getSourceUrl(item);\r\n\r\n            return publishedUri === localUri;\r\n        });\r\n\r\n        if (conflict === undefined) {\r\n            rv.push(localShareResult);\r\n        }\r\n    });\r\n\r\n    return rv;\r\n}\r\n\r\nasync function tryGetDataset(datasetUri: string, fetch: SolidFetch_Type | undefined): Promise<SolidDataset_Type | null> {\r\n    try {        \r\n        let dataset: SolidDataset_Type | null = null;\r\n\r\n        if (fetch === undefined) {\r\n            dataset = await getSolidDataset(datasetUri);\r\n        }\r\n        else {\r\n            dataset = await getSolidDataset(datasetUri, { fetch });\r\n        }\r\n\r\n        return dataset;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nasync function getQuizDatasets(quizContainerContainedUris: string[], fetch: SolidFetch_Type): Promise<SolidDataset_Type[]> {\r\n    const rv: SolidDataset_Type[] = [];\r\n\r\n    //fetch together\r\n    const promiseList: Promise<SolidDataset_Type | null>[] = [];\r\n    for (let i = 0; i < quizContainerContainedUris.length; i++) {\r\n        const quizUri = tryGetQuizUri(quizContainerContainedUris[i]);\r\n\r\n        if (quizUri !== null) {\r\n            promiseList.push(tryGetQuizDataset(quizUri, fetch));\r\n        }\r\n    }    \r\n    const fetchedPromises = await Promise.all(promiseList);\r\n\r\n    for (let i = 0; i < fetchedPromises.length; i++) {\r\n        const promiseResult = fetchedPromises[i];\r\n           \r\n        if (promiseResult !== null) {\r\n            rv.push(promiseResult); \r\n        }\r\n    }\r\n\r\n    return rv;\r\n}\r\n\r\nfunction tryGetQuizUri(uri: string): string | null {\r\n    if (!uri.endsWith('/')) {\r\n        return null;\r\n    }\r\n\r\n    const lastWord = getLastWordFromUri(uri);\r\n\r\n    return `${uri}${lastWord}.ttl#${lastWord}`;\r\n}\r\n\r\nfunction getLastWordFromUri(uri: string) {\r\n    uri = uri.substring(0, uri.length - 1);\r\n\r\n    const indexOfLast = uri.lastIndexOf('/');\r\n\r\n    const uriLastWord = uri.substring(indexOfLast + 1);\r\n\r\n    return uriLastWord;\r\n}\r\n\r\nasync function tryGetQuizDataset(quizUri: string, fetch: SolidFetch_Type): Promise<SolidDataset_Type | null> {\r\n    try {\r\n        const dataset = await getSolidDataset(quizUri, { fetch });\r\n\r\n        if (validateDatasetForQuizType(quizUri, dataset)) {\r\n            return dataset;\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction validateDatasetForQuizType(quizUri: string, dataset: SolidDataset_Type): boolean {\r\n    const quizThing = getThing(dataset, quizUri);\r\n\r\n    if (quizThing === null) {\r\n        return false;\r\n    }\r\n\r\n    const typeUrls = getUrlAll(quizThing, RDF.type);\r\n  \r\n    const quizTypeUrl = typeUrls.find((item) => item === SOLIDQUIZ.Quiz.value);\r\n\r\n    return quizTypeUrl !== undefined;\r\n}\r\n\r\nasync function tryGetSharedDatasetsAtOnce(sharedQuizThings: Thing[], fetch: SolidFetch_Type | undefined) {\r\n    \r\n    //fetch together\r\n    const promises: Promise<SolidDataset_Type | null>[] = [];\r\n    for (let i = 0; i < sharedQuizThings.length; i++) {\r\n        const thing = sharedQuizThings[i];\r\n        \r\n        const quizDatasetUri = getUrl(thing, SOLIDQUIZ.sharedResource.value) ?? \"error\";\r\n\r\n        promises.push(tryGetDataset(quizDatasetUri, fetch));\r\n    }\r\n    const fetchedPromises = await Promise.all(promises);\r\n\r\n    return fetchedPromises;\r\n}\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { QuizBtn } from './quizBtn';\r\nimport { getQuizzesFromDatasets } from '../../../../helpers/QuizListHelper';\r\nimport { TranslateContext } from '../../../../contexts/TranslateContext';\r\n\r\nexport const QuizList: React.FC<Props> = (props: Props) => {\r\n\tconst { t } = useContext(TranslateContext);\t\r\n\tconst [quizBtns, setQuizBtns] = useState<JSX.Element[]>([]);\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst quizData = getQuizzesFromDatasets(props.quizDatasets);\r\n\r\n\t\tsetQuizBtns(\r\n\t\t\tquizData.map((datasetAndThing, indx) => \r\n\t\t\t\t<QuizBtn key={indx} datasetAndThing={datasetAndThing} onQuizSelected={props.onQuizSelected} />)\r\n\t\t);\r\n\t}, [props.quizDatasets, props.onQuizSelected]);\r\n\r\n\tif (quizBtns.length === 0) {\r\n\t\treturn <h2 className='empty-list-style'>{t(\"page.common.list.empty\")}</h2>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='d-grid gap-3'>\r\n\t\t\t{quizBtns}\r\n\t\t</div>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { useSession } from '@inrupt/solid-ui-react';\r\nimport { WorkspaceContext } from '../../../contexts/WorkspaceContext';\r\nimport { SolidDataset_Type } from '../../../constants/SolidDatasetType';\r\nimport { SpinnerContext } from '../../../contexts/SpinnerContext';\r\nimport { QuizList } from './quizList';\r\nimport { getLocalSharesDatasets, getOwnQuizzes, getPublicDatasets, mergeQuizzes } from '../../../helpers/QuizListHelper';\r\nimport { PageSwitcherContext } from '../../../contexts/PageSwitcherContext';\r\nimport { Button } from 'react-bootstrap';\r\nimport { TranslateContext } from '../../../contexts/TranslateContext';\r\n\r\nexport const QuizListLoader: React.FC<Props> = (props: Props) => {\r\n\tconst { t } = useContext(TranslateContext);\r\n\tconst { session } = useSession();\r\n\tconst { workspaceUrl } = useContext(WorkspaceContext);\r\n\tconst { SpinAround } = useContext(SpinnerContext);\r\n\tconst { GoBack } = useContext(PageSwitcherContext);\r\n\tconst [quizDatasets, setQuizDatasets] = useState<SolidDataset_Type[]>([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tSpinAround(async () => {\r\n\t\t\t//load locales\r\n\t\t\tconst fetchedQuizDatasets = await getOwnQuizzes(workspaceUrl, session.fetch);\r\n\r\n\t\t\t//load public shares\r\n\t\t\tconst fetchedPublicQuizDatasets = await getPublicDatasets();\r\n\r\n\t\t\t//load local shares\r\n\t\t\tconst fetchedLocalSharesQuizDatasets = await getLocalSharesDatasets(workspaceUrl, session.fetch);\r\n\r\n\t\t\t//merge\r\n\t\t\tconst mergedQuizDatasets = mergeQuizzes(fetchedQuizDatasets, fetchedPublicQuizDatasets, fetchedLocalSharesQuizDatasets);\r\n\t\r\n\t\t\tsetQuizDatasets(mergedQuizDatasets);\r\n\t\t});\t\r\n\t}, [workspaceUrl, session.fetch, SpinAround]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<QuizList quizDatasets={quizDatasets} onQuizSelected={props.onQuizSelected} />\r\n\r\n\t\t\t<Button variant='light' className='back-btn' onClick={() => GoBack()}>{t(\"page.common.back\")}</Button>\r\n\t\t</>\r\n\t);\r\n}","import React from \"react\";\r\nimport { GameStatus } from \"../models/GameStatus\";\r\nimport { DatasetAndThing } from './../models/DatasetAndThing';\r\nimport { createThing } from '@inrupt/solid-client';\r\n\r\nexport interface IGameContext {\r\n    getQuizData: () => DatasetAndThing,\r\n    multiLang: boolean,\r\n    gameStatus: GameStatus,\r\n    setGameStatus: (delegate: (val: GameStatus) => GameStatus) => void\r\n}\r\n  \r\nexport const defaultGameState = {\r\n    getQuizData: () => {throw new Error(\"you should not call this (defaultPageSwitcherState.getQuizData)!\")},\r\n    multiLang: false,\r\n    gameStatus: { actQuestionIndex: -1, allQuestions: -1, quizResultNameUri: \"\", quizResultThing: createThing(), questionResultThings: [], multiLang: false },\r\n    setGameStatus: () => {}\r\n};\r\n  \r\nexport const GameContext = React.createContext<IGameContext>(defaultGameState);","import React, { useCallback, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { GameContext } from '../../../contexts/GameContext';\r\n\r\nexport const GameContextComponent: React.FC<Props> = (props: Props) => {\r\n\tconst [gameStatus, setGameStatus] = useState(props.gameStatus);\r\n\r\n\tconst getQuizData = useCallback(() => {\r\n\t\treturn props.quizData;\r\n\t}, [props.quizData])\r\n\r\n\treturn (\r\n\t\t<GameContext.Provider value={{\r\n\t\t\tgetQuizData,\r\n\t\t\tmultiLang: props.multiLang,\r\n\t\t\tgameStatus,\r\n\t\t\tsetGameStatus\r\n\t\t}}>\r\n\t\t\t{props.children}\r\n\t\t</GameContext.Provider>\r\n\t);\r\n}","import { GameStatus } from '../models/GameStatus';\r\nimport { Thing, addUrl, getBoolean, addInteger } from '@inrupt/solid-client';\r\nimport SOLIDQUIZ from './SOLIDQUIZ';\r\nimport { getUrl } from '@inrupt/solid-client';\r\nimport { NUMBER_OF_CORRECT_ANSWERS, SUCCESS_OF_QUESTION_RESULT } from '../constants/SolidQuizMissingValues';\r\n\r\nexport function generateRandomSeries(count: number): number[] {\r\n    const rv: number[] = [];\r\n    const seriesValues = generateSeries(count);\r\n\r\n    for (let i = count; i > 0; i--) {\r\n        const selected = Math.floor(Math.random() * i);\r\n        \r\n        const fromSeries = seriesValues.splice(selected, 1)[0];\r\n\r\n        rv.push(fromSeries);\r\n    }\r\n\r\n    return rv;\r\n}\r\n\r\nexport function addNewQuestionResult(gameStatus: GameStatus, newQuestionResultThing: Thing) {\r\n    //if first question result\r\n    if (gameStatus.questionResultThings.length === 0) {\r\n        gameStatus.quizResultThing = addUrl(\r\n            gameStatus.quizResultThing, \r\n            SOLIDQUIZ.firstQuestionResult.value, \r\n            getFutureUrl(gameStatus.quizResultNameUri, newQuestionResultThing));\r\n        gameStatus.questionResultThings.push(newQuestionResultThing);\r\n\r\n        return;\r\n    }\r\n\r\n    //get last question result, will be modified -> add nextQuestionResult url to it\r\n    const lastQuestionResultThing = getLastQuestionResult(gameStatus.questionResultThings);\r\n\r\n    const indexOfLast = gameStatus.questionResultThings.indexOf(lastQuestionResultThing);\r\n\r\n    gameStatus.questionResultThings[indexOfLast] = addUrl(\r\n        lastQuestionResultThing, \r\n        SOLIDQUIZ.nextQuestionResult.value, \r\n        getFutureUrl(gameStatus.quizResultNameUri, newQuestionResultThing));\r\n\r\n    //set (need to overwrite) previousQuestionResult to the lastQuestionResultThing\r\n    newQuestionResultThing = addUrl(\r\n        newQuestionResultThing, \r\n        SOLIDQUIZ.previousQuestionResult.value, \r\n        getFutureUrl(gameStatus.quizResultNameUri, lastQuestionResultThing));\r\n\r\n    //push to arr\r\n    gameStatus.questionResultThings.push(newQuestionResultThing);\r\n}\r\n\r\nexport function addNumberOfSuccessToQuizResult(gameStatus: GameStatus) {\r\n    let successCounter = 0;\r\n\r\n    gameStatus.questionResultThings.forEach((questionResultThing) => {\r\n        const success = getBoolean(questionResultThing, SUCCESS_OF_QUESTION_RESULT) ?? false;\r\n\r\n        if (success) {\r\n            successCounter++;\r\n        }\r\n    });\r\n\r\n    gameStatus.quizResultThing = addInteger(gameStatus.quizResultThing, NUMBER_OF_CORRECT_ANSWERS, successCounter);\r\n}\r\n\r\n\r\n//privates\r\nfunction getLastQuestionResult(questionResultThings: Thing[]): Thing {\r\n    for (let i = 0; i < questionResultThings.length; i++) {\r\n        const questionResultThing = questionResultThings[i];\r\n        \r\n        const nextUri = getUrl(questionResultThing, SOLIDQUIZ.nextQuestionResult.value);\r\n\r\n        //if missing nextQuestionResult, will be set and next time will pass this statement\r\n        if (nextUri === null) {\r\n            return questionResultThing;\r\n        }\r\n    }\r\n\r\n    throw new Error(\"something went wrong (getLastQuestionResult)\");\r\n}\r\n\r\nfunction getFutureUrl(quizResultNameUri: string, thing: Thing): string {\r\n    const indexOfSeparator = thing.url.lastIndexOf('/');\r\n\r\n    const str = thing.url.substring(indexOfSeparator + 1);\r\n\r\n    return `${quizResultNameUri}#${str}`;\r\n}\r\n\r\nfunction generateSeries(count: number): number[] {\r\n    const rv: number[] = [];\r\n\r\n    for (let i = 0; i < count; i++) {\r\n        rv.push(i);    \r\n    }\r\n\r\n    return rv;\r\n}\r\n","import { buildThing, createSolidDataset, createThing, getSolidDataset, getThingAll, saveSolidDatasetAt, setThing, Thing } from \"@inrupt/solid-client\";\r\nimport { RDF } from \"@inrupt/vocab-common-rdf\";\r\nimport { SHARE_LINKS_CONTAINER_DATASET } from \"../constants/DefaultValues\";\r\nimport { SolidDataset_Type, SolidFetch_Type } from \"../constants/SolidDatasetType\";\r\nimport SOLIDQUIZ from \"../helpers/SOLIDQUIZ\";\r\n\r\nexport async function createShareLink(workspaceUri: string, individualWebId: string, shareUri: string, fetch: SolidFetch_Type) {\r\n    const linksUrl = `${workspaceUri}${SHARE_LINKS_CONTAINER_DATASET}`;\r\n    let linksDataset = await getOrCreateLinksDataset(linksUrl, fetch);\r\n\r\n    const shareLinkThing = buildThing(createThing())\r\n      .addUrl(RDF.type, SOLIDQUIZ.ShareLink.value)\r\n      .addUrl(SOLIDQUIZ.shareLinksLink.value, shareUri)\r\n      .addUrl(SOLIDQUIZ.shareLinksIndividual.value, individualWebId)\r\n      .build();\r\n\r\n    linksDataset = setThing(linksDataset, shareLinkThing);\r\n\r\n    await saveSolidDatasetAt(linksUrl, linksDataset, {\r\n        fetch: fetch,\r\n    });\r\n}\r\n\r\nexport async function getAllShareLink(workspaceUri: string, fetch: SolidFetch_Type): Promise<Thing[]> {\r\n    const linksDatasetUri = getShareLinksDatasetUri(workspaceUri);\r\n\r\n    const linksDataset = await getOrCreateLinksDataset(linksDatasetUri, fetch);\r\n\r\n    return getThingAll(linksDataset);\r\n}\r\n\r\nexport function getShareLinksDatasetUri(workspaceUri: string) {\r\n    return `${workspaceUri}${SHARE_LINKS_CONTAINER_DATASET}`;\r\n}\r\n\r\n\r\n//privates\r\nasync function getOrCreateLinksDataset(linksUrl: string, fetch: SolidFetch_Type): Promise<SolidDataset_Type> {\r\n    try {\r\n      const workspace = await getSolidDataset(linksUrl, { fetch });\r\n      return workspace;\r\n    } catch (error: any) {\r\n      if (error.statusCode === 404) {\r\n        const workspace = await saveSolidDatasetAt(\r\n            linksUrl,\r\n            createSolidDataset(),\r\n            {\r\n                fetch,\r\n            }\r\n        );\r\n        return workspace;\r\n      }\r\n\r\n      console.log(error);\r\n    }\r\n\r\n    throw new Error('unkown error in getOrCreateWorkSpace');\r\n}\r\n","import { createAcl, getAgentAccess, getResourceAcl, getSolidDatasetWithAcl, getSourceUrl, hasAccessibleAcl, saveAclFor, setAgentResourceAccess, setPublicResourceAccess } from \"@inrupt/solid-client\";\r\nimport { SolidDataset_Type, SolidFetch_Type } from \"../constants/SolidDatasetType\";\r\n\r\nexport async function createPublicAclForNewResource(dataset: SolidDataset_Type, fetch: SolidFetch_Type) {\r\n    try {\r\n        //check for control right (createAcl wont work if this check missing)\r\n        if (!hasAccessibleAcl(dataset)) {\r\n            throw new Error(\"Has no control right!\");\r\n        }\r\n\r\n        const newAcl = createAcl(dataset);\r\n\r\n        const updatedAcl = setPublicResourceAccess(\r\n            newAcl,\r\n            { read: true, append: false, write: false, control: false }\r\n          );\r\n          \r\n          // save the new public Acl:\r\n          await saveAclFor(dataset, updatedAcl, { fetch });\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport async function createAgentAclForNewResource(friendsWebId: string, dataset: SolidDataset_Type, fetch: SolidFetch_Type) {\r\n    try {\r\n        //check for control right (createAcl wont work if this check missing)\r\n        if (!hasAccessibleAcl(dataset)) {\r\n            throw new Error(\"Has no control right!\");\r\n        }\r\n\r\n        const newAcl = createAcl(dataset);\r\n\r\n        const updatedAcl = setAgentResourceAccess(\r\n            newAcl,\r\n            friendsWebId,\r\n            { read: true, append: false, write: false, control: false }\r\n          );\r\n          \r\n          // save the new public Acl:\r\n          await saveAclFor(dataset, updatedAcl, { fetch });\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport async function createFallbackAclForOwner(webId: string, dataset: SolidDataset_Type, fetch: SolidFetch_Type) {\r\n    try {\r\n        if (await checkForOwnerRights(webId, dataset, fetch)) {\r\n            return;\r\n        }\r\n\r\n        //check for control right (createAcl wont work if this check missing)\r\n        if (!hasAccessibleAcl(dataset)) {\r\n            throw new Error(\"Has no control right!\");\r\n        }\r\n\r\n        const newFallbackAcl = createAcl(dataset);\r\n\r\n        const updatedAcl = setAgentResourceAccess(\r\n            newFallbackAcl,\r\n            webId,\r\n            { read: true, append: true, write: true, control: true }\r\n          );\r\n          \r\n          // save the new public Acl:\r\n          await saveAclFor(dataset, updatedAcl, { fetch });\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function takeAwayPublicAcl(resourceUri: string, fetch: SolidFetch_Type) {\r\n    const resourceDataset = await getSolidDatasetWithAcl(resourceUri, { fetch });\r\n\r\n    //check for control right (createAcl wont work if this check missing)\r\n    if (!hasAccessibleAcl(resourceDataset)) {\r\n        throw new Error(\"Has no control right!\");\r\n    }\r\n\r\n    const resourceAcl = getResourceAcl(resourceDataset);\r\n\r\n    if (resourceAcl === null) {\r\n        return;\r\n    }\r\n\r\n    const updatedAcl = setPublicResourceAccess(\r\n        resourceAcl,\r\n        { read: false, append: false, write: false, control: false }\r\n      );\r\n      \r\n      // save the new public Acl:\r\n      await saveAclFor(resourceDataset, updatedAcl, { fetch });\r\n}\r\n\r\nexport async function takeAwayAgentAcl(resourceUri: string, agentWebId: string, fetch: SolidFetch_Type) {\r\n    const resourceDataset = await getSolidDatasetWithAcl(resourceUri, { fetch });\r\n\r\n    //check for control right (createAcl wont work if this check missing)\r\n    if (!hasAccessibleAcl(resourceDataset)) {\r\n        throw new Error(\"Has no control right!\");\r\n    }\r\n\r\n    const resourceAcl = getResourceAcl(resourceDataset);\r\n\r\n    if (resourceAcl === null) {\r\n        return;\r\n    }\r\n\r\n    const updatedAcl = setAgentResourceAccess(\r\n        resourceAcl,\r\n        agentWebId,\r\n        { read: false, append: false, write: false, control: false }\r\n      );\r\n      \r\n      // save the new public Acl:\r\n      await saveAclFor(resourceDataset, updatedAcl, { fetch });\r\n}\r\n\r\n\r\n//privates\r\nasync function checkForOwnerRights(webId: string, dataset: SolidDataset_Type, fetch: SolidFetch_Type): Promise<boolean> {\r\n    try {\r\n        const datasetUri = getSourceUrl(dataset);\r\n        const datasetWithAcl = await getSolidDatasetWithAcl(datasetUri, { fetch });\r\n        const agentAccess = getAgentAccess(datasetWithAcl, webId);\r\n\r\n        return agentAccess !== null && \r\n                agentAccess.read &&\r\n                agentAccess.write &&\r\n                agentAccess.append &&\r\n                agentAccess.control;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n\r\n    return false;\r\n}\r\n","import * as sharesService from '../services/SharesService';\r\nimport * as shareLinksService from '../services/ShareLinksService';\r\nimport * as workspaceService from '../services/WorkspaceService';\r\nimport * as aclService from '../services/AclService';\r\nimport { DatasetAndThing } from './../models/DatasetAndThing';\r\nimport { SolidFetch_Type } from '../constants/SolidDatasetType';\r\nimport { getSolidDataset } from '@inrupt/solid-client';\r\nimport { getThing } from '@inrupt/solid-client';\r\nimport { FOAF } from '@inrupt/vocab-common-rdf';\r\nimport { getUrlAll } from '@inrupt/solid-client';\r\nimport { SOLID_QUIZ_POD_PROFILE } from '../constants/DefaultValues';\r\n\r\nexport async function handlePublishQuiz(webId: string, workspaceUri: string, quizData: DatasetAndThing, fetch: SolidFetch_Type) {\r\n    //create public share\r\n    const shareThing = await sharesService.publishQuiz(quizData.thing.url);\r\n\r\n    //create local shareLink\r\n    await shareLinksService.createShareLink(workspaceUri, SOLID_QUIZ_POD_PROFILE, shareThing.url, fetch);\r\n\r\n    //create fallback acl (without this we loose control over the resource)\r\n    await aclService.createFallbackAclForOwner(webId, quizData.dataset, fetch);\r\n    //create acl for the resource\r\n    await aclService.createPublicAclForNewResource(quizData.dataset, fetch);\r\n}\r\n\r\nexport async function handlePublishQuizResult(webId: string, workspaceUri: string, quizResultData: DatasetAndThing, fetch: SolidFetch_Type) {\r\n    //create public share\r\n    const shareThing = await sharesService.publishQuizResult(quizResultData.thing.url);\r\n\r\n    //create local shareLink\r\n    await shareLinksService.createShareLink(workspaceUri, SOLID_QUIZ_POD_PROFILE, shareThing.url, fetch);\r\n\r\n    //create fallback acl (without this we loose control over the resource)\r\n    await aclService.createFallbackAclForOwner(webId, quizResultData.dataset, fetch);\r\n    //create acl for the resource\r\n    await aclService.createPublicAclForNewResource(quizResultData.dataset, fetch);\r\n}\r\n\r\nexport async function shareQuizWithFriend(webId: string, friendsWebId: string, ownWorkSpace: string, quizResultData: DatasetAndThing, fetch: SolidFetch_Type) {\r\n    //create public share\r\n    const friendsShareSpace = await getFriendsShareSpace(friendsWebId);\r\n    const shareThing = await sharesService.shareQuiz(friendsShareSpace, quizResultData.thing.url);\r\n\r\n    //create local shareLink\r\n    await shareLinksService.createShareLink(ownWorkSpace, friendsWebId, shareThing.url, fetch);\r\n\r\n    //create fallback acl (without this we loose control over the resource)\r\n    await aclService.createFallbackAclForOwner(webId, quizResultData.dataset, fetch);\r\n    //create acl for the resource\r\n    await aclService.createAgentAclForNewResource(friendsWebId, quizResultData.dataset, fetch);\r\n}\r\n\r\nexport async function checkForQuizShare(quizData: DatasetAndThing, fetch: SolidFetch_Type): Promise<boolean> {\r\n    //no check, because shares page shows all your share, event the duplicates, so you can delete it there if its duplicate\r\n    //maybe a future to do\r\n    return false;\r\n}\r\n\r\nexport async function getFriendsList(webId: string, fetch: SolidFetch_Type): Promise<string[]> {\r\n    const profileDataset = await getSolidDataset(webId, { fetch });\r\n    const profileThing = getThing(profileDataset, webId);\r\n\r\n    if (profileThing !== null) {\r\n        const friendUris = getUrlAll(profileThing, FOAF.knows);\r\n\r\n        return friendUris;\r\n    }\r\n\r\n    return [];\r\n}\r\n\r\n\r\n//privates\r\nasync function getFriendsShareSpace(friendsWebId: string): Promise<string> {\r\n    const friendsProfileDataset = await getSolidDataset(friendsWebId);\r\n    const friendsProfileThing = getThing(friendsProfileDataset, friendsWebId);\r\n\r\n    if (friendsProfileThing === null) {\r\n        throw new Error(\"Fetching friends profile failed!\");\r\n    }\r\n\r\n    const friendsWorkspace = workspaceService.getWorkSpaceLocation(friendsProfileThing);\r\n    \r\n    const friendsShareSpace = sharesService.getSharesDataset(friendsWorkspace);\r\n\r\n    return friendsShareSpace;\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Row, Button, Col, Alert } from 'react-bootstrap';\r\nimport { IoMdShare } from \"@react-icons/all-files/io/IoMdShare\";\r\nimport { SpinnerContext } from '../../../../../../../contexts/SpinnerContext';\r\nimport { TranslateContext } from '../../../../../../../contexts/TranslateContext';\r\nimport { useSession } from '@inrupt/solid-ui-react';\r\nimport { handlePublishQuizResult } from '../../../../../../../helpers/SharesHelper';\r\nimport { WorkspaceContext } from '../../../../../../../contexts/WorkspaceContext';\r\n\r\nexport const ShareGameResult: React.FC<Props> = (props: Props) => {\r\n\tconst { t } = useContext(TranslateContext);\r\n\tconst { SpinAround } = useContext(SpinnerContext);\r\n\tconst { workspaceUrl, webId } = useContext(WorkspaceContext);\r\n\tconst { session } = useSession();\r\n\tconst [shared, setShared] = useState(false);\r\n\r\n\tconst onPublish = () => {\r\n\t\tSpinAround(async () => {\t\t\t\r\n\t\t\tawait handlePublishQuizResult(webId, workspaceUrl, props.quizResultData, session.fetch);\r\n\r\n\t\t\tsetShared(true);\r\n\t\t});\t\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Row>\r\n\t\t\t\t\t<h3 className='share-title'>{t(\"playGame.gameResult.share\")}</h3> \r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Button className='share-btn' onClick={onPublish} disabled={shared}><IoMdShare /></Button>\r\n\t\t\t\t\t{shared &&\r\n\t\t\t\t\t<Alert className='share-alert'>{t(\"playGame.gameResult.shareComplete\")}</Alert>}\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Alert, Button, Row } from 'react-bootstrap';\r\nimport { getInteger } from '@inrupt/solid-client';\r\nimport { TITLE, NUMBER_OF_CORRECT_ANSWERS } from '../../../../../../constants/SolidQuizMissingValues';\r\nimport { TranslateContext } from '../../../../../../contexts/TranslateContext';\r\nimport { PageSwitcherContext } from '../../../../../../contexts/PageSwitcherContext';\r\nimport { getString } from './../../../../../../helpers/LangReader';\r\nimport { ShareGameResult } from './shareGameResult';\r\n\r\nexport const GameResult: React.FC<Props> = (props: Props) => {\r\n\tconst { t, lang } = useContext(TranslateContext);\r\n\tconst { GoBack } = useContext(PageSwitcherContext);\r\n\tconst [quizTitle, setQuizTitle] = useState(\"\");\r\n\tconst [answersSucceded, setAnswersSucceded] = useState(0);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst actualQuizTitle = getString(props.quizThing, TITLE, props.gameResult.gameStatus.multiLang, lang);\r\n\t\tconst actualAnswersSucceded = getInteger(props.gameResult.gameStatus.quizResultThing, NUMBER_OF_CORRECT_ANSWERS) ?? -1;\r\n\r\n\t\tsetQuizTitle(actualQuizTitle);\r\n\t\tsetAnswersSucceded(actualAnswersSucceded);\r\n\t}, [props.gameResult, lang, props.quizThing]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className='main-title'>{quizTitle} {t(\"playGame.gameResult.title\")}</h3>\r\n\r\n\t\t\t<Row>\r\n\t\t\t\t<Alert variant='success' className='quizOverText-style'>{t(\"playGame.gameResult.quizOverText\")}</Alert>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<Alert variant='info' className='quizResults-style'>\r\n\t\t\t\t\t{t(\"playGame.gameResult.quizResultsAll\")}: {props.gameResult.gameStatus.allQuestions} \r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t{t(\"playGame.gameResult.quizResultsSuccess\")}: {answersSucceded}</Alert>\r\n\t\t\t</Row>\r\n\r\n\t\t\t<ShareGameResult quizResultData={props.gameResult.savedQuizResultData} />\r\n\r\n\t\t\t<Button variant='light' className='back-btn' onClick={() => GoBack()}>{t(\"page.common.back\")}</Button>\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport { TranslateContext } from '../../../../../../../../../../contexts/TranslateContext';\r\nimport { GameContext } from '../../../../../../../../../../contexts/GameContext';\r\nimport { getString } from '../../../../../../../../../../helpers/LangReader';\r\nimport { ANSWER_TEXT } from '../../../../../../../../../../constants/SolidQuizMissingValues';\r\n\r\nexport const Answer: React.FC<Props> = (props: Props) => {\r\n\tconst { lang } = useContext(TranslateContext);\r\n\tconst { multiLang, gameStatus } = useContext(GameContext);\r\n\tconst [answerText, setAnswerText] = useState<string>(\"\");\r\n\tconst [btnVariant, setBtnVariant] =  useState(\"secondary\");\r\n\r\n\tuseEffect(() => {\t\t\r\n\t\tconst text = getString(props.answerThing, ANSWER_TEXT, multiLang, lang);\r\n\r\n\t\tsetBtnVariant(\"secondary\");\r\n\r\n\t\tsetAnswerText(text);\r\n\t}, [props.answerThing, lang, multiLang, gameStatus.actQuestionIndex ]);\r\n\r\n\tconst handleClick = () => {\r\n\t\tconst answerSelectedResult = props.onAnswerSelected(props.answerThing);\r\n\r\n\t\tif (answerSelectedResult) {\r\n\t\t\tsetBtnVariant(\"success\");\r\n\t\t}\r\n\t\telse{\r\n\t\t\tsetBtnVariant(\"danger\");\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button variant={btnVariant} disabled={props.disabled} onClick={handleClick}>{answerText}</Button>\r\n\t\t</>\r\n\t);\r\n}","import { buildThing, createThing, Thing, createSolidDataset, setThing, saveSolidDatasetAt, getSolidDataset } from '@inrupt/solid-client';\r\nimport { RDF } from '@inrupt/vocab-common-rdf';\r\nimport { QUIZZES_CONTAINER, QUIZ_RESULTS_CONTAINER } from '../constants/DefaultValues';\r\nimport { QUIZ_RESULT_CREATED, SUCCESS_OF_QUESTION_RESULT } from '../constants/SolidQuizMissingValues';\r\nimport { SolidDataset_Type, SolidFetch_Type } from '../constants/SolidDatasetType';\r\nimport SOLIDQUIZ from '../helpers/SOLIDQUIZ';\r\nimport { NestedLocalDataset } from '../models/NestedLocalDataset';\r\n\r\nexport function createQuizResult(quizThing: Thing, webId: string): Thing {\r\n    const quizResultThing = buildThing(createThing())\r\n      .addUrl(RDF.type, SOLIDQUIZ.QuizResult.value)\r\n      .addDatetime(QUIZ_RESULT_CREATED, new Date())\r\n      .addUrl(SOLIDQUIZ.quizResultCreatedBy.value, webId)\r\n      .addUrl(SOLIDQUIZ.quizResultOf.value, quizThing.url)\r\n      .build();\r\n\r\n    return quizResultThing;\r\n}   \r\n\r\nexport function createQuestionResult(questionThing: Thing, answerThing: Thing, success: boolean): Thing {\r\n    const questionResultThing = buildThing(createThing())\r\n      .addUrl(RDF.type, SOLIDQUIZ.QuestionResult.value)\r\n      .addUrl(SOLIDQUIZ.questionResultOf.value, questionThing.url)\r\n      .addUrl(SOLIDQUIZ.questionResultsAnswer.value, answerThing.url)\r\n      .addBoolean(SUCCESS_OF_QUESTION_RESULT, success)\r\n      .build();\r\n\r\n    return questionResultThing;\r\n}\r\n\r\nexport async function saveQuizResult(quizResultUri: string, quizResultThing: Thing, questionResultThings: Thing[], fetch: SolidFetch_Type): Promise<SolidDataset_Type> {\r\n    let localeDataset = createSolidDataset();\r\n    localeDataset = setThing(localeDataset, quizResultThing);\r\n    const nestedDateset = { localeDataset };\r\n    addQuestionResultssToDataset(nestedDateset, questionResultThings);\r\n    \r\n    return await saveSolidDatasetAt(quizResultUri, nestedDateset.localeDataset, {\r\n      fetch: fetch,\r\n    });\r\n}\r\n\r\nexport function getQuizResultsContainer(workspaceUri: string, quizName: string) {\r\n    return `${workspaceUri}${QUIZZES_CONTAINER}${quizName}/${QUIZ_RESULTS_CONTAINER}`;\r\n}\r\nexport function createQuizResultUri(workspaceUri: string, quizName: string) {\r\n    return `${getQuizResultsContainer(workspaceUri, quizName)}${new Date().getTime()}.ttl`;\r\n}\r\n\r\nexport async function createQuizResultsContainer(workspaceUri: string, quizName: string, fetch: SolidFetch_Type) {\r\n    const quizResultsWorkspace = getQuizResultsContainer(workspaceUri, quizName);\r\n\r\n    if (await isQuizResultsExists(quizResultsWorkspace)) {\r\n        return;\r\n    }\r\n\r\n    await saveSolidDatasetAt(quizResultsWorkspace, createSolidDataset(), { fetch });\r\n}\r\n\r\n\r\n//privates\r\nfunction addQuestionResultssToDataset(nestedDataset: NestedLocalDataset, questionResultThings: Thing[]) {\r\n    for (let i = 0; i < questionResultThings.length; i++) {\r\n      const questionResultThing = questionResultThings[i];\r\n      \r\n      nestedDataset.localeDataset = setThing(nestedDataset.localeDataset, questionResultThing);\r\n    }\r\n}\r\n\r\nasync function isQuizResultsExists(uri: string): Promise<boolean> {\r\n    try {\r\n      await getSolidDataset(uri);\r\n      return true;\r\n    } catch (error: any) {\r\n        return false;\r\n    }\r\n}\r\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Thing, getUrl } from '@inrupt/solid-client';\r\nimport SOLIDQUIZ from '../../../../../../../../../helpers/SOLIDQUIZ';\r\nimport { Answer } from './answer';\r\nimport { Button } from 'react-bootstrap';\r\nimport { TranslateContext } from '../../../../../../../../../contexts/TranslateContext';\r\nimport { GameContext } from '../../../../../../../../../contexts/GameContext';\r\nimport * as quizResultService from '../../../../../../../../../services/QuizResultService';\r\nimport { addNewQuestionResult } from '../../../../../../../../../helpers/GameHelper';\r\n\r\nexport const AnswerController: React.FC<Props> = (props: Props) => {\r\n\tconst { t } = useContext(TranslateContext);\r\n\tconst { setGameStatus } = useContext(GameContext);\r\n\tconst [correctAnswer, setCorrectAnswer] = useState<string | null>(null);\r\n\tconst [answerSelected, setAnswerSelected] = useState(false);\r\n\tconst [answerBtns, setAnswerBtns] = useState<JSX.Element[]>([]);\r\n\r\n\tconst onAnswerSelected = useCallback((answerThing: Thing) => {\r\n\t\tsetAnswerSelected(true);\r\n\t\tconst success = answerThing.url === correctAnswer;\r\n\r\n\t\tsetGameStatus((act) => {\r\n\t\t\tlet rv = { ...act };\r\n\r\n\t\t\tconst newQuestionResultThing = quizResultService.createQuestionResult(props.questionThing, answerThing, success);\r\n\t\t\taddNewQuestionResult(rv, newQuestionResultThing);\r\n\r\n\t\t\treturn rv;\r\n\t\t});\r\n\r\n\t\treturn success;\r\n\t}, [correctAnswer, setGameStatus, props.questionThing]);\r\n\r\n\tconst onNextClick = () => {\r\n\t\tsetAnswerSelected(false);\r\n\r\n\t\tsetGameStatus((act) => {\r\n\t\t\tlet rv = { ...act };\r\n\r\n\t\t\trv.actQuestionIndex++;\r\n\r\n\t\t\treturn rv;\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst correctAnswerThingUri = getUrl(props.questionThing, SOLIDQUIZ.correctAnswerOption.value);\r\n\t\tsetCorrectAnswer(encodeURI(correctAnswerThingUri ?? \"error\"));\r\n\r\n\t\tsetAnswerBtns(\r\n\t\t\tprops.answerThings.map((thing, indx) => \r\n\t\t\t\t<Answer key={indx} answerThing={thing} onAnswerSelected={onAnswerSelected} disabled={answerSelected} />)\r\n\t\t);\r\n\t}, [props.questionThing, props.answerThings, onAnswerSelected, answerSelected]);\r\n\r\n\treturn (\r\n\t\t<div className='d-grid gap-3'>\r\n\t\t\t{answerBtns}\r\n\r\n\t\t\t{\r\n\t\t\t\tanswerSelected &&\r\n\t\t\t\t<Button variant=\"warning\" className='next-btn' onClick={onNextClick}>{t(\"playGame.game.btn.nextQuestion\")}</Button> \r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { GameContext } from '../../../../../../../../contexts/GameContext';\r\nimport { getUrlAll, Thing } from '@inrupt/solid-client';\r\nimport SOLIDQUIZ from '../../../../../../../../helpers/SOLIDQUIZ';\r\nimport * as workspaceService from '../../../../../../../../services/WorkspaceService';\r\nimport { generateRandomSeries } from '../../../../../../../../helpers/GameHelper';\r\nimport { AnswerController } from './answerController';\r\n\r\nexport const AnswerLoader: React.FC<Props> = (props: Props) => {\r\n\tconst {  getQuizData } = useContext(GameContext);\r\n\tconst [answerThings, setAnswerThings] = useState<Thing[]>([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst answerUris = getUrlAll(props.questionThing, SOLIDQUIZ.answerOption.value);\t\t\r\n\t\tconst answerThings = workspaceService.getAllThingByUris(getQuizData().dataset, answerUris);\r\n\t\tconst series = generateRandomSeries(answerThings.length);\r\n\r\n\t\tconst answersInRandOrder: Thing[] = [];\r\n\r\n\t\tfor (let i = 0; i < series.length; i++) {\r\n\t\t\tconst index = series[i];\r\n\t\t\t\r\n\t\t\tanswersInRandOrder.push(answerThings[index]);\r\n\t\t}\r\n\r\n\t\tsetAnswerThings(answersInRandOrder);\r\n\t}, [getQuizData, props.questionThing]);\r\n\r\n\treturn (\r\n\t\t<AnswerController questionThing={props.questionThing} answerThings={answerThings} />\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { TranslateContext } from '../../../../../../../contexts/TranslateContext';\r\nimport { getString } from '../../../../../../../helpers/LangReader';\r\nimport { GameContext } from '../../../../../../../contexts/GameContext';\r\nimport { QUESTION_TEXT } from './../../../../../../../constants/SolidQuizMissingValues';\r\nimport { Col, FloatingLabel, Form, Row } from 'react-bootstrap';\r\nimport { AnswerLoader } from './answerLoader';\r\n\r\nexport const Question: React.FC<Props> = (props: Props) => {\r\n\tconst { t, lang } = useContext(TranslateContext);\r\n\tconst { multiLang } = useContext(GameContext);\r\n\tconst [questionText, setQuestionText] = useState<string>(\"\");\r\n\r\n\tuseEffect(() => {\t\t\r\n\t\tconst text = getString(props.questionThing, QUESTION_TEXT, multiLang, lang);\r\n\r\n\t\tsetQuestionText(text);\r\n\t}, [props.questionThing, lang, multiLang ]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<FloatingLabel controlId=\"floatingTextarea\" label={t(\"playGame.game.questionText\")} className=\"mb-3\">\r\n\t\t\t\t\t\t<Form.Control as=\"textarea\"\tplaceholder={t(\"playGame.game.questionText\")} className='textarea-style' defaultValue={questionText} disabled />\r\n\t\t\t\t\t</FloatingLabel>\t\t\t\t\t\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t\r\n\t\t\t<Row className='answers-row'>\r\n\t\t\t\t<AnswerLoader questionThing={props.questionThing} />\r\n\t\t\t</Row>\r\n\t\t</>\r\n\t);\r\n}","import { DatasetAndThing } from \"../models/DatasetAndThing\";\r\nimport { SolidDataset_Type, SolidFetch_Type } from \"../constants/SolidDatasetType\";\r\nimport * as workspaceService from '../services/WorkspaceService';\r\nimport * as sharesService from '../services/SharesService';\r\nimport SOLIDQUIZ from \"./SOLIDQUIZ\";\r\nimport { getUrl, Thing, getInteger, getDatetime, getThing, getUrlAll } from '@inrupt/solid-client';\r\nimport { NUMBER_OF_CORRECT_ANSWERS, QUIZ_RESULT_CREATED } from \"../constants/SolidQuizMissingValues\";\r\nimport { getSolidDataset } from '@inrupt/solid-client';\r\nimport { LDP } from \"@inrupt/vocab-common-rdf\";\r\n\r\nexport async function getQuizResultsFromContainer(containerUri: string, fetch: SolidFetch_Type): Promise<SolidDataset_Type[]> {\r\n    const containerDataset = await getSolidDataset(containerUri, { fetch });\r\n    const datasetThing = getThing(containerDataset, containerUri);\r\n\r\n    if (datasetThing === null) {\r\n        console.log(\"Cannot found container: \" + containerDataset);\r\n        return [];\r\n    }\r\n\r\n    const containedResources = getUrlAll(datasetThing, LDP.contains);\r\n    \r\n    const quizResultDatasets = await getQuizResultDatasets(containedResources, fetch);\r\n\r\n    return quizResultDatasets;\r\n  }\r\n\r\nexport function getQuizResultsFromDatasets(quizResultDatasets: SolidDataset_Type[], quizResultOf: Thing): DatasetAndThing[] {\r\n    const quizResultsThings: DatasetAndThing[] = [];\r\n\r\n    for (let i = 0; i < quizResultDatasets.length; i++) {\r\n        const quizResultDataset = quizResultDatasets[i];\r\n        \r\n        const quizResultThing = workspaceService.getFirstThingByRDFType(quizResultDataset, SOLIDQUIZ.QuizResult.value);\r\n\r\n        if (quizResultThing !== null) {\r\n            const quizOfUri = getUrl(quizResultThing, SOLIDQUIZ.quizResultOf.value);\r\n\r\n            if (quizOfUri === quizResultOf.url) {\r\n                quizResultsThings.push({ dataset: quizResultDataset, thing: quizResultThing });\r\n            }\r\n        }\r\n    }\r\n\r\n    return quizResultsThings;\r\n}\r\n\r\nexport function sortQuizResultDatas(quizResultDatas: DatasetAndThing[]) {\r\n    quizResultDatas.sort((a, b) => {\r\n        const byCorrectAnswer = compareByCorrectAnswer(a.thing, b.thing);\r\n\r\n        if (byCorrectAnswer !== 0) {\r\n            return byCorrectAnswer;\r\n        }\r\n\r\n        const byNewer = compareByNewer(a.thing, b.thing);\r\n\r\n        return byNewer;\r\n    });\r\n}\r\n\r\nexport function getSavedQuizResultName(datasetUri: string, localThing: Thing) {\r\n    const indexOfSeparator = localThing.url.lastIndexOf('/');\r\n\r\n    const resultsName = localThing.url.substring(indexOfSeparator + 1);\r\n    \r\n    return `${datasetUri}#${resultsName}`;\r\n}\r\n\r\nexport function getQuizNameFromQuizThing(quizThing: Thing) {\r\n    const indexOfSeparator = quizThing.url.lastIndexOf('#');\r\n\r\n    const quizName = quizThing.url.substring(indexOfSeparator + 1);\r\n    \r\n    return quizName;\r\n}\r\n\r\nexport async function getPublicQuizResultDatasets(quizResultOf: Thing): Promise<DatasetAndThing[]> {\r\n    const publicQuizResultThings = await sharesService.getPublishedShares(SOLIDQUIZ.QuizResult.value);\r\n\r\n    const rv: DatasetAndThing[] = [];\r\n\r\n    for (let i = 0; i < publicQuizResultThings.length; i++) {\r\n        const thing = publicQuizResultThings[i];\r\n        \r\n        const quizResultDatasetUri = getUrl(thing, SOLIDQUIZ.sharedResource.value) ?? \"error\";\r\n\r\n        const quizResultsDataset = await checkQuizResultsQuizOf(quizResultDatasetUri, quizResultOf);\r\n\r\n        if (quizResultsDataset !== null) {\r\n            rv.push(quizResultsDataset);\r\n        }\r\n    }\r\n\r\n    return rv;\r\n}\r\n\r\nexport function mergeQuizResults(localResults: DatasetAndThing[], publicResults: DatasetAndThing[]): DatasetAndThing[] {    \r\n    const rv: DatasetAndThing[] = [...localResults];\r\n\r\n    publicResults.forEach(publisResult => {\r\n        const conflict = localResults.find(item => publisResult.thing.url === item.thing.url);\r\n\r\n        if (conflict === undefined) {\r\n            rv.push(publisResult);\r\n        }\r\n    });\r\n\r\n    return rv;\r\n}\r\n\r\n\r\n//privates\r\nfunction compareByCorrectAnswer(thingA: Thing, thingB: Thing): number {\r\n    const correctAnswersA = getInteger(thingA, NUMBER_OF_CORRECT_ANSWERS) ?? 0;\r\n    const correctAnswersB = getInteger(thingB, NUMBER_OF_CORRECT_ANSWERS) ?? 0;\r\n\r\n    return correctAnswersB - correctAnswersA;\r\n}\r\n\r\nfunction compareByNewer(thingA: Thing, thingB: Thing): number {\r\n    const dateA = getDatetime(thingA, QUIZ_RESULT_CREATED)?.getTime() ?? 0;\r\n    const dateB = getDatetime(thingB, QUIZ_RESULT_CREATED)?.getTime() ?? 0;\r\n\r\n    return dateB - dateA;\r\n}\r\n\r\nasync function checkQuizResultsQuizOf(quizResultUri: string, quizResultOf: Thing): Promise<DatasetAndThing | null> {\r\n    const quizResultDataset = await getSolidDataset(quizResultUri);\r\n    \r\n    //find quizResult thing inside the dataset (there are also questionResults)\r\n    const quizResultThing = workspaceService.getFirstThingByRDFType(quizResultDataset, SOLIDQUIZ.QuizResult.value);\r\n    if (quizResultThing !== null) {\r\n        const quizUri = getUrl(quizResultThing, SOLIDQUIZ.quizResultOf.value);\r\n\r\n        if (quizUri === quizResultOf.url){\r\n            return { dataset: quizResultDataset, thing: quizResultThing };\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nasync function getQuizResultDatasets(quizContainerContainedUris: string[], fetch: SolidFetch_Type): Promise<SolidDataset_Type[]> {\r\n    const rv: SolidDataset_Type[] = [];\r\n\r\n    //fetch together\r\n    const promiseList: Promise<SolidDataset_Type | null>[] = [];\r\n    for (let i = 0; i < quizContainerContainedUris.length; i++) {\r\n        const quizResultUri = quizContainerContainedUris[i];\r\n\r\n        promiseList.push(tryGetQuizResultDataset(quizResultUri, fetch));\r\n    }\r\n    const fetchedPromises = await Promise.all(promiseList);\r\n\r\n    for (let i = 0; i < fetchedPromises.length; i++) {\r\n        const promiseResult = fetchedPromises[i];\r\n\r\n        if (promiseResult !== null) {\r\n            rv.push(promiseResult);\r\n        }\r\n    }\r\n\r\n    return rv;\r\n}\r\n\r\nasync function tryGetQuizResultDataset(quizResultUri: string, fetch: SolidFetch_Type): Promise<SolidDataset_Type | null> {\r\n    try {\r\n        const dataset = await getSolidDataset(quizResultUri, { fetch });\r\n\r\n        return dataset;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n\r\n    return null;\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { GameContext } from '../../../../../../contexts/GameContext';\r\nimport { Thing } from '@inrupt/solid-client';\r\nimport { Question } from './question';\r\nimport { addNumberOfSuccessToQuizResult } from '../../../../../../helpers/GameHelper';\r\nimport * as quizResultService from '../../../../../../services/QuizResultService';\r\nimport { useSession } from '@inrupt/solid-ui-react';\r\nimport { SpinnerContext } from '../../../../../../contexts/SpinnerContext';\r\nimport { getThing } from '@inrupt/solid-client';\r\nimport { getSavedQuizResultName } from '../../../../../../helpers/QuizResultsListHelper';\r\n\r\nexport const QuestionController: React.FC<Props> = ({ questions, onCompleteGame }) => {\r\n\tconst { session } = useSession();\r\n\tconst { gameStatus } = useContext(GameContext);\r\n\tconst { SpinAround } = useContext(SpinnerContext);\r\n\tconst [actQuestion, setActQuestion] = useState<Thing | null>(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (gameStatus.actQuestionIndex >= questions.length) {\r\n\t\t\tSpinAround(async () => {\r\n\t\t\t\taddNumberOfSuccessToQuizResult(gameStatus);\r\n\r\n\t\t\t\tconst updatedDataset = await quizResultService.saveQuizResult(\r\n\t\t\t\t\tgameStatus.quizResultNameUri, \r\n\t\t\t\t\tgameStatus.quizResultThing, \r\n\t\t\t\t\tgameStatus.questionResultThings, \r\n\t\t\t\t\tsession.fetch);\r\n\r\n\t\t\t\tconst savedThingName = getSavedQuizResultName(gameStatus.quizResultNameUri, gameStatus.quizResultThing);\r\n\t\t\t\tconst updatedThing = getThing(updatedDataset, savedThingName);\r\n\r\n\t\t\t\tif (updatedThing === null) {\r\n\t\t\t\t\tthrow new Error(\"persist result failed!\");\r\n\t\t\t\t}\r\n\t\t\r\n\t\t\t\tonCompleteGame({ gameStatus, savedQuizResultData: { dataset: updatedDataset, thing: updatedThing } });\r\n\t\t\t});\t\r\n\t\t}\r\n\t\telse{\r\n\t\t\tsetActQuestion(questions[gameStatus.actQuestionIndex]);\r\n\t\t}\r\n\t}, [gameStatus.actQuestionIndex, questions, onCompleteGame, gameStatus, session.fetch, SpinAround]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{actQuestion !== null &&\r\n\t\t\t<Question questionThing={actQuestion} />}\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport { TranslateContext } from '../../../../contexts/TranslateContext';\r\n\r\nexport const YesNoModal: React.FC<Props> = (props: Props) => {\t\r\n\tconst { t } = useContext(TranslateContext);\r\n\r\n\treturn (\r\n\t\t<> \r\n\t\t\t<Modal show={props.show} onHide={props.onHide} centered>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>{t(\"page.common.yesno.title\")}</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t{props.body}\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button variant=\"secondary\" onClick={props.onHide}>{t(\"page.common.yesno.refuse\")}</Button>\r\n\t\t\t\t\t<Button variant=\"primary\" onClick={props.onConfirm}>{t(\"page.common.yesno.accept\")}</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n}","import React, { useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport { YesNoModal } from '../yesNoModal';\r\n\r\nexport const CustomButtonYesNo: React.FC<Props> = (props: Props) => {\r\n\tconst [modalShow, setModalShow] = useState(false);\r\n\r\n\tconst handleConfirm = () => {\r\n\t\tsetModalShow(false);\r\n\t\tprops.onConfirm();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button variant={props.variant} size='lg' style={props.style} onClick={() => setModalShow(true)}>\r\n\t\t\t\t{props.children}\r\n\t\t\t</Button>\r\n\t\r\n\t\t\t<YesNoModal\r\n\t\t\t\tshow={modalShow}\r\n\t\t\t\tonHide={() => setModalShow(false)}\r\n\t\t\t\tbody={props.modalText}\r\n\t\t\t\tonConfirm={handleConfirm}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Col, Container, Row, Alert } from 'react-bootstrap';\r\nimport { GameContext } from '../../../../../../contexts/GameContext';\r\nimport { TranslateContext } from '../../../../../../contexts/TranslateContext';\r\nimport { getString } from '../../../../../../helpers/LangReader';\r\nimport { TITLE } from '../../../../../../constants/SolidQuizMissingValues';\r\nimport { CustomButtonYesNo } from '../../../../../common/buttonToYesNoModal/customButtonYesNo';\r\nimport { PageSwitcherContext } from '../../../../../../contexts/PageSwitcherContext';\r\n\r\nexport const GameContainer: React.FC<Props> = (props: Props) => {\t\r\n\tconst { t, lang } = useContext(TranslateContext);\r\n\tconst { GoBack } = useContext(PageSwitcherContext);\r\n\tconst { gameStatus, getQuizData, multiLang } = useContext(GameContext);\r\n\t\r\n\tconst title = getString(getQuizData().thing, TITLE, multiLang, lang);\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<h3 className='main-title'>{t(\"playGame.game.title\")}: {title}</h3>\r\n\t\t\t\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Alert variant='light'>{t(\"playGame.game.actQuestion\")}: {gameStatus.actQuestionIndex + 1}</Alert>\t\t\t\t\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col className='justify-content-right'>\r\n\t\t\t\t\t<Alert variant='light'>{t(\"playGame.game.allQuestions\")}: {gameStatus.allQuestions}</Alert>\t\t\t\t\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t\r\n\t\t\t{props.children}\r\n\r\n\t\t\t<div className='back-btn'>\r\n\t\t\t\t\t<CustomButtonYesNo variant=\"light\" modalText={t(\"playGame.modal.confirmClose\")} onConfirm={() => GoBack()}>\r\n\t\t\t\t\t\t\t{t(\"page.common.back\")}\r\n\t\t\t\t\t</CustomButtonYesNo>\r\n\t\t\t\t</div>\r\n\t\t</Container>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { GameContext } from './../../../../../contexts/GameContext';\r\nimport { generateRandomSeries } from '../../../../../helpers/GameHelper';\r\nimport * as workspaceService from '../../../../../services/WorkspaceService';\r\nimport { getUrlAll, Thing } from '@inrupt/solid-client';\r\nimport SOLIDQUIZ from '../../../../../helpers/SOLIDQUIZ';\r\nimport { GameResult } from './gameResult';\r\nimport { QuestionController } from './questionController';\r\nimport { GameContainer } from './gameContainer';\r\nimport { GameResultData } from '../../../../../models/GameResultData';\r\n\r\nexport const GameController: React.FC<Props> = (props: Props) => {\r\n\tconst { getQuizData } = useContext(GameContext);\r\n\tconst [questions, setQuestions] = useState<Thing[] | null>(null);\r\n\tconst [gameResult, setGameResult] = useState<GameResultData | null>(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst quizData = getQuizData();\r\n\t\tconst questionUris = getUrlAll(quizData.thing, SOLIDQUIZ.quizQuestion.value);\t\t\r\n\t\tconst questionThings = workspaceService.getAllThingByUris(quizData.dataset, questionUris);\r\n\t\tconst series = generateRandomSeries(questionThings.length);\r\n\r\n\t\tconst questionsInRandOrder: Thing[] = [];\r\n\r\n\t\tfor (let i = 0; i < series.length; i++) {\r\n\t\t\tconst index = series[i];\r\n\t\t\t\r\n\t\t\tquestionsInRandOrder.push(questionThings[index]);\r\n\t\t}\r\n\r\n\t\tsetQuestions(questionsInRandOrder);\r\n\t}, [getQuizData]);\r\n\r\n\tif (questions === null) {\r\n\t\treturn <></>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{\r\n\t\t\t\tgameResult !== null ?\r\n\t\t\t\t<GameResult quizThing={getQuizData().thing} gameResult={gameResult} /> :\r\n\t\t\t\t<GameContainer>\r\n\t\t\t\t\t<QuestionController questions={questions} onCompleteGame={setGameResult} />\r\n\t\t\t\t</GameContainer>\r\n\t\t\t}\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { GameContextComponent } from '../../../common/gameContextComponent';\r\nimport { getUrlAll, getBoolean } from '@inrupt/solid-client';\r\nimport SOLIDQUIZ from './../../../../helpers/SOLIDQUIZ';\r\nimport { GameController } from './gameController';\r\nimport { GameStatus } from '../../../../models/GameStatus';\r\nimport { MULTI_LANGUAGE_SUPPORT } from '../../../../constants/SolidQuizMissingValues';\r\nimport * as quizResultService from '../../../../services/QuizResultService';\r\nimport { WorkspaceContext } from '../../../../contexts/WorkspaceContext';\r\nimport { getQuizNameFromQuizThing } from '../../../../helpers/QuizResultsListHelper';\r\n\r\nexport const GameLoader: React.FC<Props> = (props: Props) => {\r\n\tconst { webId, workspaceUrl } = useContext(WorkspaceContext);\r\n\tconst [multiLang, setMultiLang] = useState<boolean>(false);\r\n\tconst [newGameStatus, setNewGameStatus] = useState<GameStatus | null>(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst multiLang = getBoolean(props.quizData.thing, MULTI_LANGUAGE_SUPPORT) ?? false;\r\n\t\tconst questionsCount = getUrlAll(props.quizData.thing, SOLIDQUIZ.quizQuestion.value).length;\r\n\t\tconst quizName = getQuizNameFromQuizThing(props.quizData.thing);\r\n\t\tconst quizResultNameUri = quizResultService.createQuizResultUri(workspaceUrl, quizName);\r\n\t\tconst quizResultThing = quizResultService.createQuizResult(props.quizData.thing, webId);\r\n\r\n\t\tsetMultiLang(multiLang);\r\n\t\tsetNewGameStatus({ actQuestionIndex: 0, allQuestions: questionsCount, quizResultNameUri, quizResultThing, questionResultThings: [], multiLang });\r\n\t}, [props.quizData, webId, workspaceUrl]);\t\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{newGameStatus !== null &&\r\n\t\t\t\t<GameContextComponent \r\n\t\t\t\t\tquizData={props.quizData}\r\n\t\t\t\t\tmultiLang={multiLang}\r\n\t\t\t\t\tgameStatus={newGameStatus}>\r\n\t\t\t\t\t<GameController />\r\n\t\t\t\t</GameContextComponent>\r\n\t\t\t}\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { TranslateContext } from '../../../contexts/TranslateContext';\r\nimport { DatasetAndThing } from './../../../models/DatasetAndThing';\r\nimport { QuizListLoader } from '../../common/quizListLoader';\r\nimport { GameLoader } from './gameLoader';\r\n\r\nexport const PlayGame: React.FC<Props> = (props: Props) => {\r\n\tconst { t } = useContext(TranslateContext);\r\n\tconst [selectedQuiz, setSelectedQuiz] = useState<DatasetAndThing | null>(null);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{\r\n\t\t\t\tselectedQuiz === null ?\r\n\t\t\t\t<>\r\n\t\t\t\t\t<h3 className='main-title'>{t(\"playGame.title\")}</h3>\r\n\t\t\t\t\t<QuizListLoader onQuizSelected={setSelectedQuiz} /> \r\n\t\t\t\t</> :\r\n\t\t\t\t<GameLoader quizData={selectedQuiz} /> \r\n\t\t\t}\t\t\t\r\n\t\t</>\r\n\t);\r\n}","import React from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Formik, Form } from 'formik';\r\n\r\nexport const FormBase: React.FC<Props> = (props: Props) => {\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tvalidationSchema={props.schema}\r\n\t\t\tonSubmit={props.onSubmit}\r\n\t\t\tinitialValues={props.initialValues}\r\n\t\t>\r\n\t\t\t<Form>\r\n\t\t\t\t{props.children}\r\n\t\t\t\t<Button type=\"submit\" className='submit-btn'>{props.submitLabel}</Button>\r\n\t\t\t</Form>\r\n\t\t</Formik>\r\n\t);\r\n}","import React from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { FloatingLabel, Form } from 'react-bootstrap';\r\nimport { useField } from 'formik';\r\n\r\nexport const BasicInput: React.FC<Props> = (props: Props) => {\r\n\tconst [field, meta] = useField(props.formikId);\r\n\r\n   \treturn (\r\n\t \t<FloatingLabel\r\n\t\t\tcontrolId=\"floatingInput\"\r\n\t\t\tlabel={props.label}\r\n\t\t\tclassName=\"mb-3 basic-input-style\"\r\n\t\t>\r\n\t\t\t<Form.Control type={props.type} placeholder={props.label} {...field} isInvalid={meta.touched && !!meta.error} />\r\n\t\t\t<Form.Control.Feedback type=\"invalid\">{meta.error}</Form.Control.Feedback>\r\n\t\t</FloatingLabel>\r\n   \t);\r\n}","import React, { useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { FormBase } from '../../../../common/formBase';\r\nimport { BasicInput } from '../../../../common/formBase/basicInput';\r\nimport { TranslateContext } from '../../../../../contexts/TranslateContext';\r\nimport * as Yup from 'yup';\r\n\r\nexport const MultiLang: React.FC<Props> = (props: Props) => {\r\n\tconst { t } = useContext(TranslateContext);\r\n\r\n\tconst schema = Yup.object({\r\n\t\tquizTitleEn: Yup.string()\r\n\t\t\t\t\t .required(t(\"page.common.required\"))\r\n\t\t\t\t\t .max(50, t(\"createQuiz.quiz.maxExceeded\"))\r\n\t\t\t\t\t .matches(/^([ 0-9a-zA-ZáéiíoóöőuúüűÁÉIÍOÓÖŐUÚÜŰ])*$/, t(\"page.common.alphanumeric\")),\r\n\t\tquizTitleHu: Yup.string()\r\n\t\t\t\t\t .required(t(\"page.common.required\"))\r\n\t\t\t\t\t .max(50, t(\"createQuiz.quiz.maxExceeded\"))\r\n\t\t\t\t\t .matches(/^([ 0-9a-zA-ZáéiíoóöőuúüűÁÉIÍOÓÖŐUÚÜŰ])*$/, t(\"page.common.alphanumeric\")),\r\n\t});\r\n\r\n\tconst initialValues = {\r\n\t\tquizTitleEn: \"\",\r\n\t\tquizTitleHu: \"\"\r\n\t};\r\n\r\n\treturn (\r\n\t\t<FormBase onSubmit={props.onSubmit} schema={schema} initialValues={initialValues} submitLabel={t(\"createQuiz.quiz.submit\")}>\r\n\t\t\t\t<BasicInput formikId=\"quizTitleEn\" label={t(\"createQuiz.quiz.nameEn\")} type='text' /> \r\n\t\t\t\t<BasicInput formikId=\"quizTitleHu\" label={t(\"createQuiz.quiz.nameHu\")} type='text' /> \r\n\t\t</FormBase>\r\n\t);\r\n}","import React, { useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { TranslateContext } from '../../../../../contexts/TranslateContext';\r\nimport * as Yup from 'yup';\r\nimport { FormBase } from '../../../../common/formBase';\r\nimport { BasicInput } from '../../../../common/formBase/basicInput';\r\nimport { FormikValues } from 'formik';\r\n\r\nexport const MonoLang: React.FC<Props> = (props: Props) => {\r\n\tconst { t, lang } = useContext(TranslateContext);\r\n\r\n\tconst schema = Yup.object({\r\n\t\tquizTitle: Yup.string()\r\n\t\t\t\t\t .required(t(\"page.common.required\"))\r\n\t\t\t\t\t .max(50, t(\"createQuiz.quiz.maxExceeded\"))\r\n\t\t\t\t\t .matches(/^([ 0-9a-zA-ZáéiíoóöőuúüűÁÉIÍOÓÖŐUÚÜŰ])*$/, t(\"page.common.alphanumeric\")),\r\n\t});\r\n\r\n\tconst initialValues = {\r\n\t\tquizTitle: \"\"\r\n\t};\r\n\r\n\tconst handleOnSubmit = (values: FormikValues) => {\r\n\t\tlet langValues: FormikValues;\r\n\r\n\t\tif (lang === 'hu') {\r\n\t\t\tlangValues = {'quizTitleHu': values.quizTitle};\r\n\t\t}\r\n\t\telse{\r\n\t\t\tlangValues = {'quizTitleEn': values.quizTitle};\r\n\t\t}\r\n\r\n\t\tprops.onSubmit(langValues);\r\n\t}\r\n\r\n\tconst label = lang === 'hu' ? t(\"createQuiz.quiz.nameHu\") : t(\"createQuiz.quiz.nameEn\");\r\n\r\n\treturn (\r\n\t\t<FormBase onSubmit={handleOnSubmit} schema={schema} initialValues={initialValues} submitLabel={t(\"createQuiz.quiz.submit\")}>\r\n\t\t\t\t<BasicInput formikId=\"quizTitle\" label={label} type='text' /> \r\n\t\t</FormBase>\r\n\t);\r\n}","import React, { useContext, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { TranslateContext } from '../../../../contexts/TranslateContext';\r\nimport { FormikValues } from 'formik';\r\nimport { Col, Form, Row } from 'react-bootstrap';\r\nimport { MultiLang } from './multiLang';\r\nimport { MonoLang } from './monoLang';\r\n\r\nexport const QuizForm: React.FC<Props> = (props: Props) => {\r\n\tconst { t, lang } = useContext(TranslateContext);\r\n\tconst [isMultiLang, setIsMultiLang] = useState(false);\r\n\r\n\tconst onSubmit = (values: FormikValues) => {\r\n\t\tprops.afterFormSubmit(\r\n\t\t\t{\r\n\t\t\t\tquizTitleEn: values.quizTitleEn ?? \"\", \r\n\t\t\t\tquizTitleHu: values.quizTitleHu ?? \"\", \r\n\t\t\t\tmultiLang: isMultiLang,\r\n\t\t\t\tlang\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleLangChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetIsMultiLang(!!event.target.checked);\r\n\t};\r\n\r\n\tconst formContent = isMultiLang ? \r\n\t\t<MultiLang onSubmit={onSubmit} /> :\r\n\t\t<MonoLang onSubmit={onSubmit} />;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className='main-title'>{t(\"createQuiz.quiz.title\")}</h3>\r\n\t\t\t<Row className=\"justify-content-md-center checkbox-row\">\r\n\t\t\t\t<Col md=\"3\">\t\t\t\t\r\n\t\t\t\t\t<Form.Check id=\"quizFormCheckbox\" label={t(\"createQuiz.quiz.multiLang\")} checked={isMultiLang} onChange={handleLangChange} />\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t{formContent}\r\n\t\t</>\r\n\t);\r\n}","import { buildThing, createThing, getStringNoLocale, getStringWithLocale, Thing, ThingBuilder, ThingLocal } from '@inrupt/solid-client';\r\nimport { RDF } from '@inrupt/vocab-common-rdf';\r\nimport { ANSWER_TEXT, QUESTION_TEXT } from '../constants/SolidQuizMissingValues';\r\nimport SOLIDQUIZ from '../helpers/SOLIDQUIZ';\r\nimport { MultiLangText } from '../models/MultiLangText';\r\nimport { QuestionContainer } from '../models/QuestionContainer';\r\nimport { QuestionCreateModel } from '../models/QuestionCreateModel';\r\nimport { QuizContainer } from '../models/QuizContainer';\r\nimport { AnswerContainer } from './../models/AnswerContainer';\r\nimport { AnswerCreateModel } from './../models/AnswerCreateModel';\r\n\r\nexport function createQuestionContainer(questionModel: QuestionCreateModel, quizUri: string): QuestionContainer {\r\n    const questionName = createQuestionName(questionModel);\r\n    const answerContainers = createAnswerThings(questionModel);\r\n\r\n    const questionThingBuilder = buildThing(createThing({ name: questionName }))\r\n        .addUrl(RDF.type, SOLIDQUIZ.Question.value);\r\n\r\n    addTextToQuestionBasedOnLang(questionThingBuilder, questionModel);\r\n\r\n    addAnswersToQuestion(questionThingBuilder, questionModel.answerOptions, quizUri, questionModel.correctAnswerId);\r\n\r\n    const questionThing = questionThingBuilder.build();\r\n\r\n    return { questionName, questionModel, question: questionThing, answers: answerContainers }; \r\n}\r\n\r\nexport function getQuestionText(quizContainer: QuizContainer, questionNumber: number) : MultiLangText {    \r\n    const questionContainer = getQuestionContainer(questionNumber, quizContainer);\r\n\r\n    return getMultiLangTextFromThing(\r\n        quizContainer.quizFormModel.multiLang, \r\n        quizContainer.quizFormModel.lang,\r\n        questionContainer.question,\r\n        QUESTION_TEXT); \r\n}\r\n\r\nexport function getAnswerText(quizContainer: QuizContainer, questionNumber: number, answerId: string) : MultiLangText {\r\n    const questionContainer = getQuestionContainer(questionNumber, quizContainer);\r\n\r\n    const answerName = createAnswerNameFromAnswerId(answerId);\r\n\r\n    const answerContainer = questionContainer.answers.find((container) => container.answerName === answerName);\r\n\r\n    if (answerContainer === undefined) {\r\n        throw new Error(`cannot find answer based on ${answerName}`);\r\n    }\r\n    \r\n    return getMultiLangTextFromThing(\r\n        quizContainer.quizFormModel.multiLang, \r\n        quizContainer.quizFormModel.lang,\r\n        answerContainer.answer,\r\n        ANSWER_TEXT);\r\n}\r\n\r\nexport function getQuestionContainer(questionNumber: number, quizContainer: QuizContainer): QuestionContainer {\r\n    const questionName = createQuestionNameFromNumber(questionNumber);\r\n\r\n    const questionContainer = quizContainer.questions.find((container) => container.questionName === questionName);\r\n\r\n    if (questionContainer === undefined) {\r\n        throw new Error(`cannot find question based on ${questionName}`);\r\n    }\r\n\r\n    return questionContainer;\r\n}\r\n\r\nexport function isAnswerExists(answerId: string, questionNumber: number, quizContainer: QuizContainer): boolean {\r\n    try {\r\n        const questionContainer = getQuestionContainer(questionNumber, quizContainer);\r\n\r\n        const answerName = createAnswerNameFromAnswerId(answerId);\r\n\r\n        const answerContainer = questionContainer.answers.find((container) => container.answerName === answerName);\r\n        \r\n        return answerContainer !== undefined;\r\n    } catch {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function getQuestionNumber(questionName: string): number {\r\n    const indexOfSeparator = questionName.indexOf('_');\r\n\r\n    const str = questionName.substring(indexOfSeparator + 1);\r\n\r\n    return +(str);\r\n}\r\n\r\nexport function getAnswerNumber(answerName: string): number {\r\n    const indexOfSeparator = answerName.indexOf('_');\r\n\r\n    const str =  answerName.substring(indexOfSeparator + 1);\r\n\r\n    return +(str);\r\n}\r\n\r\n\r\n//privates\r\nfunction createQuestionName(questionModel: QuestionCreateModel): string {\r\n    return `question_${questionModel.questionNumber}`;\r\n}\r\n\r\nfunction createQuestionNameFromNumber(questionNumber: number): string {\r\n    return `question_${questionNumber.toString()}`;\r\n}\r\n\r\nfunction createAnswerName(answerOption: AnswerCreateModel): string {\r\n    return `answer_${answerOption.answerId}`;\r\n}\r\n\r\nfunction createAnswerNameFromAnswerId(answerNumber: string): string {\r\n    return `answer_${answerNumber}`;\r\n}\r\n\r\nfunction createAnswerThings(questionModel: QuestionCreateModel): AnswerContainer[] {\r\n    const arr: AnswerContainer[] = [];\r\n\r\n    for (let i = 0; i < questionModel.answerOptions.length; i++) {\r\n        const answerOption = questionModel.answerOptions[i];\r\n        \r\n        const answerName = createAnswerName(answerOption);\r\n\r\n        const answerThingBuilder = buildThing(createThing({ name: answerName }))\r\n            .addUrl(RDF.type, SOLIDQUIZ.Answer.value);\r\n\r\n        addTextToAnswerBasedOnLang(answerThingBuilder, questionModel, answerOption);\r\n        \r\n        const answerThing = answerThingBuilder.build();\r\n        \r\n        arr.push({ answerName: answerName, answer: answerThing });\r\n    }\r\n\r\n    return arr;\r\n}\r\n\r\nfunction addTextToAnswerBasedOnLang(answerThingBuilder: ThingBuilder<ThingLocal>, questionModel: QuestionCreateModel, answerOption: AnswerCreateModel) {\r\n    if (questionModel.multiLang) {\r\n        answerThingBuilder.addStringWithLocale(ANSWER_TEXT, answerOption.textEn, \"en\")\r\n                          .addStringWithLocale(ANSWER_TEXT, answerOption.textHu, \"hu\");\r\n    }\r\n    else if (questionModel.lang === 'hu') {\r\n        answerThingBuilder.addStringNoLocale(ANSWER_TEXT, answerOption.textHu);\r\n    }\r\n    else{\r\n        answerThingBuilder.addStringNoLocale(ANSWER_TEXT, answerOption.textEn);\r\n    }\r\n}\r\n\r\nfunction addTextToQuestionBasedOnLang(questionThingBuilder: ThingBuilder<ThingLocal>, questionModel: QuestionCreateModel) {\r\n    if (questionModel.multiLang) {\r\n        questionThingBuilder.addStringWithLocale(QUESTION_TEXT, questionModel.textEn, \"en\")\r\n                          .addStringWithLocale(QUESTION_TEXT, questionModel.textHu, \"hu\");\r\n    }\r\n    else if (questionModel.lang === 'hu') {\r\n        questionThingBuilder.addStringNoLocale(QUESTION_TEXT, questionModel.textHu);\r\n    }\r\n    else{\r\n        questionThingBuilder.addStringNoLocale(QUESTION_TEXT, questionModel.textEn);\r\n    }\r\n}\r\n\r\nfunction addAnswersToQuestion(questionThingBuilder: ThingBuilder<ThingLocal>, answerOptions: AnswerCreateModel[], quizUri: string, correctAnswerId: string) {\r\n    const correctAnswerUri = getCorrectAnswerUri(answerOptions, quizUri, correctAnswerId);\r\n    questionThingBuilder.addUrl(SOLIDQUIZ.correctAnswerOption.value, correctAnswerUri);\r\n\r\n    for (let i = 0; i < answerOptions.length; i++) {\r\n        const answer = answerOptions[i];\r\n        \r\n        //this will be the answers uri, inside quizzes dataset (#answer_answerId), this is a thing\r\n        //this is just an estimation, because currently theese are local datas, after save will be permanent\r\n        const answerFutureUri = `${quizUri}#${createAnswerName(answer)}`;\r\n\r\n        questionThingBuilder.addUrl(SOLIDQUIZ.answerOption.value, answerFutureUri);\r\n    }\r\n}\r\n\r\nfunction getCorrectAnswerUri(answerOptions: AnswerCreateModel[], quizUri: string, correctAnswerId: string): string {\r\n    const correctAnswer = answerOptions.find((item) => item.answerId === correctAnswerId);\r\n\r\n    if (correctAnswer === undefined) {\r\n        throw new Error('Correct answer with answerId: 0; is missing!');\r\n    }\r\n\r\n    return `${quizUri}#${createAnswerName(correctAnswer)}`;\r\n}\r\n\r\nfunction getMultiLangTextFromThing(multiLang: boolean, lang: string, thing: Thing, propertyUrl: string): MultiLangText {\r\n    if (multiLang) {\r\n        const textEn = getStringWithLocale(thing, propertyUrl, \"en\") ?? \"\";\r\n        const textHu = getStringWithLocale(thing, propertyUrl, \"hu\") ?? \"\";\r\n        return { textEn , textHu };\r\n    }\r\n    else{\r\n        const text = getStringNoLocale(thing, propertyUrl) ?? \"\";\r\n\r\n        if (lang === 'hu') {\r\n            return { textEn: \"\" , textHu: text };\r\n        }\r\n        else{\r\n            return { textEn: text , textHu: \"\" };\r\n        }\r\n    }\r\n}\r\n","import { Thing, getBoolean, getUrlAll, getUrl, removeUrl } from '@inrupt/solid-client';\r\nimport { SolidDataset_Type } from '../constants/SolidDatasetType';\r\nimport { QuizContainer } from './../models/QuizContainer';\r\nimport * as questionService from '../services/QuestionService';\r\nimport * as quizService from '../services/QuizService';\r\nimport * as workspaceService from '../services/WorkspaceService';\r\nimport { QuizFormModel } from './../models/QuizFormModel';\r\nimport { ANSWER_TEXT, MULTI_LANGUAGE_SUPPORT, QUESTION_TEXT, TITLE } from '../constants/SolidQuizMissingValues';\r\nimport { getMutliLang } from './LangReader';\r\nimport { QuestionContainer } from '../models/QuestionContainer';\r\nimport SOLIDQUIZ from './SOLIDQUIZ';\r\nimport { AnswerContainer } from './../models/AnswerContainer';\r\nimport { QuestionCreateModel } from '../models/QuestionCreateModel';\r\nimport { AnswerCreateModel } from './../models/AnswerCreateModel';\r\n\r\nexport function convert(quizThing: Thing, quizDataset: SolidDataset_Type, lang: string): QuizContainer {  \r\n    const multiLang = getBoolean(quizThing, MULTI_LANGUAGE_SUPPORT) ?? false; \r\n\r\n    const quizContainer = createQuizContainer(quizThing, multiLang, lang);\r\n\r\n    quizContainer.questions = createQuestionContainers(quizThing, quizDataset, multiLang, lang);\r\n\r\n    return quizContainer;\r\n}\r\n\r\nfunction createQuizContainer(quizThing: Thing, multiLang: boolean, lang: string): QuizContainer {\r\n    const quizFormModel = createQuizFormModel(quizThing, multiLang, lang);\r\n    const quizName = quizService.createQuizResourceName(quizFormModel);\r\n\r\n    const questionUris = getUrlAll(quizThing, SOLIDQUIZ.quizQuestion.value);\r\n    for (let i = 0; i < questionUris.length; i++) {\r\n        const uri = questionUris[i];\r\n        quizThing = removeUrl(quizThing, SOLIDQUIZ.quizQuestion.value, uri);\r\n    }\r\n\r\n    return {quizName, quizFormModel, quiz: quizThing, questions: []};\r\n}\r\n\r\nfunction createQuizFormModel(quizThing: Thing, multiLang: boolean, lang: string): QuizFormModel {\r\n    const multiLangData = getMutliLang(quizThing, TITLE, multiLang, lang);\r\n\r\n    return { quizTitleEn: multiLangData.textEn, quizTitleHu: multiLangData.textHu, multiLang, lang}\r\n}\r\n\r\nfunction createQuestionContainers(quizThing: Thing, quizDataset: SolidDataset_Type, multiLang: boolean, lang: string): QuestionContainer[] {\r\n    const questionUris = getUrlAll(quizThing, SOLIDQUIZ.quizQuestion.value);\r\n    \r\n    const questionThings = workspaceService.getAllThingByUris(quizDataset, questionUris);\r\n\r\n    const questionContainers: QuestionContainer[] = [];\r\n\r\n    questionThings.forEach((questionThing) => {\r\n        const quiestionContainer = createQuiestionContainer(questionThing, quizDataset, multiLang, lang);\r\n\r\n        questionContainers.push(quiestionContainer);\r\n    });\r\n\r\n    return questionContainers;\r\n}\r\n\r\nfunction createQuiestionContainer(questionThing: Thing, quizDataset: SolidDataset_Type, multiLang: boolean, lang: string): QuestionContainer {\r\n    const questionName = getFragmentFromUri(questionThing.url);\r\n\r\n    const answerContainers = createAnswerContainers(questionThing, quizDataset);\r\n\r\n    const questionModel = createQuestionCreateModel(questionThing, questionName, answerContainers, multiLang, lang);\r\n\r\n    return { questionName, questionModel, question: questionThing, answers: answerContainers };\r\n}\r\n\r\nfunction createQuestionCreateModel(questionThing: Thing, questionName: string, answerContainers: AnswerContainer[], multiLang: boolean, lang: string): QuestionCreateModel {\r\n    const questionNumber = questionService.getQuestionNumber(questionName);\r\n    \r\n    const multiLangData = getMutliLang(questionThing, QUESTION_TEXT, multiLang, lang);\r\n\r\n    const correctAnswerUri = getUrl(questionThing, SOLIDQUIZ.correctAnswerOption) ?? \"error\";\r\n    const correctAnswerName = getFragmentFromUri(correctAnswerUri);\r\n    const correctAnswerId = questionService.getAnswerNumber(correctAnswerName).toString(); \r\n\r\n    const answerModels = createAnswerCreateModels(answerContainers, multiLang, lang);\r\n\r\n    return { questionNumber, textEn: multiLangData.textEn, textHu: multiLangData.textHu, answerOptions: answerModels, correctAnswerId, multiLang, lang };\r\n}\r\n\r\nfunction createAnswerCreateModels(answerContainers: AnswerContainer[], multiLang: boolean, lang: string): AnswerCreateModel[] {\r\n    const answerModels: AnswerCreateModel[] = [];\r\n\r\n    answerContainers.forEach(answerContainer => {\r\n        const answerModel = createAnswerCreateModel(answerContainer, multiLang, lang);\r\n\r\n        answerModels.push(answerModel);\r\n    })\r\n\r\n    return answerModels;\r\n}\r\n\r\nfunction createAnswerCreateModel(answerContainer: AnswerContainer, multiLang: boolean, lang: string): AnswerCreateModel {\r\n    const answerId = questionService.getAnswerNumber(answerContainer.answerName).toString();\r\n\r\n    const multiLangData = getMutliLang(answerContainer.answer, ANSWER_TEXT, multiLang, lang);\r\n\r\n    return { answerId, textEn: multiLangData.textEn, textHu: multiLangData.textHu };\r\n}\r\n\r\nfunction createAnswerContainers(questionThing: Thing, quizDataset: SolidDataset_Type): AnswerContainer[] {\r\n    const answerUris = getUrlAll(questionThing, SOLIDQUIZ.answerOption.value);\r\n    \r\n    const answerThings = workspaceService.getAllThingByUris(quizDataset, answerUris);\r\n\r\n    const answerContainers: AnswerContainer[] = [];\r\n\r\n    answerThings.forEach(answerThing => {\r\n        const answerContainer = createAnswerContainer(answerThing);\r\n\r\n        answerContainers.push(answerContainer);\r\n    })\r\n\r\n    return answerContainers;\r\n}\r\n\r\nfunction createAnswerContainer(answerThing: Thing): AnswerContainer {\r\n    const answerName = getFragmentFromUri(answerThing.url);\r\n\r\n    return { answerName, answer: answerThing };\r\n}\r\n\r\nfunction getFragmentFromUri(uri:string): string {\r\n    const indexOfSeparator = uri.indexOf('#');\r\n\r\n    return uri.substring(indexOfSeparator + 1);\r\n}\r\n","import React from \"react\";\r\nimport { QuizContainer } from './../models/QuizContainer';\r\n\r\nexport interface IQuestionCreationContext {\r\n    questionNumber: number,     //questions order number (not for playing)\r\n    setQuestionNumber: (delegate: (val: number) => number) => void,\r\n    answerNumber: number,       //available answer option number (its an identificator), after use need to increase\r\n    setAnswerNumber: (delegate: (val: number) => number) => void,\r\n\r\n    getQuizContainer: () => QuizContainer,\r\n    isCrurrentQuestionCreatedYet: () => boolean,\r\n    isNextQuestionNew: () => boolean\r\n  }\r\n  \r\nexport const defaultQuestionCreationState = {\r\n    questionNumber: 1,\r\n    setQuestionNumber: () => {},\r\n    answerNumber: 3,     //head start, first two are always there (answer options)\r\n    setAnswerNumber: () => {},\r\n\r\n    getQuizContainer: () => {throw new Error(\"you should not call this (defaultQuestionCreationState.getQuizContainer)!\")},\r\n    isCrurrentQuestionCreatedYet: () => {throw new Error(\"you should not call this (defaultQuestionCreationState.isCrurrentLastQuestion)!\")},\r\n    isNextQuestionNew: () => {throw new Error(\"you should not call this (defaultQuestionCreationState.isNextQuestionExists)!\")}\r\n  };\r\n  \r\nexport const QuestionCreationContext = React.createContext<IQuestionCreationContext>(defaultQuestionCreationState);","import React, { useContext, useState, useEffect } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { FloatingLabel, Form } from 'react-bootstrap';\r\nimport { QuestionCreationContext } from '../../../../contexts/QuestionCreationContext';\r\n\r\nexport const AnswerInput: React.FC<Props> = ({ label, defaultValue, onChange}) => {\r\n\tconst [actValue, setActValue] = useState(defaultValue);\r\n\tconst { questionNumber } = useContext(QuestionCreationContext);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetActValue(defaultValue);\r\n\t}, [defaultValue, questionNumber]);\r\n\t\r\n\tconst handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetActValue(event.target.value);\r\n\t\tonChange(event.target.value);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<FloatingLabel\r\n\t\t\tcontrolId=\"floatingInput\"\r\n\t\t\tlabel={label}\r\n\t\t\tclassName=\"mb-3\"\r\n\t\t\t>\r\n\t\t\t\t<Form.Control type=\"text\" placeholder={label} onChange={handleChange} value={actValue} />\t\t\t\t\r\n\t\t</FloatingLabel>\r\n\t);\r\n}","import React, { useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { IoMdCheckmark } from \"@react-icons/all-files/io/IoMdCheckmark\";\r\nimport { ToggleButton } from 'react-bootstrap';\r\n\r\nexport const ToggleBtnCheck: React.FC<Props> = (props: Props) => {\r\n\tconst [checked, setChecked] = useState(props.defaultChecked)\r\n\r\n\tconst handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetChecked(event.target.checked);\r\n\r\n\t\tprops.onChange(props.value, event.target.checked);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ToggleButton\r\n\t\t\t\tkey={props.value}\r\n\t\t\t\tid={`radio-${props.value}`}\r\n\t\t\t\ttype=\"radio\"\r\n\t\t\t\tvariant=\"outline-success\"\r\n\t\t\t\tname=\"radio\"\r\n\t\t\t\tvalue={props.value}\r\n\t\t\t\tchecked={checked}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tdisabled={props.disabled}\r\n\t\t\t>\r\n\t\t\t\t<IoMdCheckmark />\r\n\t\t\t</ToggleButton>\r\n\t\t</>\r\n\t);\r\n}","import React from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { CloseButton, Col, Row } from 'react-bootstrap';\r\nimport { AnswerInput } from '../../../../../../../common/quizModification/answerInput';\r\nimport { ToggleBtnCheck } from '../../../../../../../common/quizModification/toggleBtnCheck';\r\n\r\nexport const LangQuestionAnswer: React.FC<Props> = (props: Props) => {\r\n\t\r\n\tconst handleOnCloseClick = () => {\r\n\t\tif (props.onCloseAnswer !== undefined) {\r\n\t\t\tprops.onCloseAnswer(props.answerId);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col md=\"1\" className='check-button-style'>\r\n\t\t\t\t\t<ToggleBtnCheck value={props.answerId} defaultChecked={props.answerId === props.correctAnswerId.toString()} onChange={() => {}} disabled={true} />\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md=\"10\">\r\n\t\t\t\t\t\t<AnswerInput label={props.labelEn} onChange={props.onChangeEn} defaultValue={props.defaultValueEn} />\r\n\t\t\t\t\t\t<AnswerInput label={props.labelHu} onChange={props.onChangeHu} defaultValue={props.defaultValueHu} />\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md=\"1\" className='close-button-style'>\r\n\t\t\t\t\t<CloseButton onClick={handleOnCloseClick} disabled={props.onCloseAnswer === undefined} />\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</>\r\n\t);\r\n}","import React from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { CloseButton, Col, Row } from 'react-bootstrap';\r\nimport { AnswerInput } from '../../../../../../../common/quizModification/answerInput';\r\nimport { ToggleBtnCheck } from '../../../../../../../common/quizModification/toggleBtnCheck';\r\n\r\nexport const QuestionAnswer: React.FC<Props> = (props: Props) => {\t\r\n\r\n\tconst handleOnCloseClick = () => {\r\n\t\tif (props.onCloseAnswer !== undefined) {\r\n\t\t\tprops.onCloseAnswer(props.answerId);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Row>\r\n\t\t\t<Col md=\"1\" className='check-button-style'>\r\n\t\t\t\t<ToggleBtnCheck value={props.answerId} defaultChecked={props.answerId === props.correctAnswerId.toString()} onChange={() => {}} disabled={true} />\r\n\t\t\t</Col>\r\n\t\t\t<Col md=\"10\">\r\n\t\t\t\t<AnswerInput label={props.label} onChange={props.onChange} defaultValue={props.defaultValue} /> \r\n\t\t\t</Col>\r\n\t\t\t<Col md=\"1\" className='close-button-style'>\r\n\t\t\t\t<CloseButton onClick={handleOnCloseClick} disabled={props.onCloseAnswer === undefined} />\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t);\r\n}","import { AnswerCreateModel } from \"../models/AnswerCreateModel\";\r\n\r\nexport function getOCreateAnswerInArray(arr: AnswerCreateModel[], answerId: string): AnswerCreateModel {\r\n    let result: AnswerCreateModel | null = null;\r\n    \r\n    for (let i = 0; i < arr.length; i++) {\r\n        const item = arr[i];\r\n        if (item.answerId === answerId) {\r\n            result = item;\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (result === null) {\r\n        result = { answerId, textEn: \"\", textHu: \"\" };\r\n        arr.push(result);\r\n    }\r\n\r\n    return result;\r\n}","import React, { useContext, useCallback } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { LangQuestionAnswer } from './langQuestionAnswer';\r\nimport { TranslateContext } from '../../../../../../../contexts/TranslateContext';\r\nimport { QuestionAnswer } from './questionAnswer';\r\nimport * as answerArrayHelper from '../../../../../../../helpers/AnswerArrayHelper';\r\n\r\nexport const QuestionAnswerSelector: React.FC<Props> = ({ multiLang, onChange, answerId, correctAnswerId, onCloseAnswer, defaultValue, defaultValueEn, defaultValueHu }) => {\r\n\tconst { t, lang } = useContext(TranslateContext);\r\n\r\n\tconst handleChange = useCallback((value: string) => {\r\n\t\tonChange((model) => {\r\n\t\t\tlet rv = {\r\n\t\t\t\t...model\r\n\t\t\t};\r\n\r\n\t\t\tconst answerResult = answerArrayHelper.getOCreateAnswerInArray(rv.answerOptions, answerId);\r\n\r\n\t\t\tif (lang === 'hu'){\r\n\t\t\t\tanswerResult.textHu = value;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tanswerResult.textEn = value;\r\n\t\t\t}\r\n\r\n\t\t\treturn rv;\r\n\t\t});\r\n\t}, [lang, onChange, answerId]);\r\n\r\n\tconst handleChangeEn = useCallback((value: string) => {\r\n\t\tonChange((model) => {\r\n\t\t\tlet rv = {\r\n\t\t\t\t...model\r\n\t\t\t};\r\n\r\n\t\t\tconst answerResult = answerArrayHelper.getOCreateAnswerInArray(rv.answerOptions, answerId);\r\n\r\n\t\t\tanswerResult.textEn = value;\r\n\r\n\t\t\treturn rv;\r\n\t\t});\r\n\t}, [onChange, answerId]);\r\n\r\n\tconst handleChangeHu = useCallback((value: string) => {\r\n\t\tonChange((model) => {\r\n\t\t\tlet rv = {\r\n\t\t\t\t...model\r\n\t\t\t};\r\n\r\n\t\t\tconst answerResult = answerArrayHelper.getOCreateAnswerInArray(rv.answerOptions, answerId);\r\n\r\n\t\t\tanswerResult.textHu = value;\r\n\r\n\t\t\treturn rv;\r\n\t\t});\r\n\t}, [onChange, answerId]);\r\n\r\n\tconst content = multiLang ? \r\n\t\t<LangQuestionAnswer \r\n\t\t\tanswerId={answerId} \r\n\t\t\tcorrectAnswerId = {correctAnswerId}\r\n\t\t\tonCloseAnswer={onCloseAnswer} \r\n\t\t\tlabelEn={t(\"createQuiz.question.answerOptionEn\")} \r\n\t\t\tlabelHu={t(\"createQuiz.question.answerOptionHu\")}\r\n\t\t\tdefaultValueEn={defaultValueEn}\r\n\t\t\tdefaultValueHu={defaultValueHu}\r\n\t\t\tonChangeEn={handleChangeEn}\r\n\t\t\tonChangeHu={handleChangeHu} /> :\r\n\t\t<QuestionAnswer \r\n\t\t\tanswerId={answerId}\r\n\t\t\tcorrectAnswerId = {correctAnswerId} \r\n\t\t\tonCloseAnswer={onCloseAnswer} \r\n\t\t\tlabel={t(\"createQuiz.question.answerOption\")}\r\n\t\t\tonChange={handleChange}\r\n\t\t\tdefaultValue={defaultValue} />\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{content}\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { TranslateContext } from '../../../../../../contexts/TranslateContext';\r\nimport { QuestionAnswerSelector } from './questionAnswerSelector';\r\n\r\nexport const QuestionAnswerLoader: React.FC<Props> = (props: Props) => {\r\n\tconst { lang } = useContext(TranslateContext);\r\n\r\n\tconst defaultValue = lang === 'hu' ? props.multiLangText.textHu : props.multiLangText.textEn;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<QuestionAnswerSelector \r\n\t\t\t\tkey={props.answerId} \r\n\t\t\t\tanswerId={props.answerId}\r\n\t\t\t\tcorrectAnswerId={props.correctAnswerId}\r\n\t\t\t\tmultiLang={props.multiLang} \r\n\t\t\t\tonChange={props.onChange}\r\n\t\t\t\tonCloseAnswer={props.onCloseAnswer}\r\n\t\t\t\tdefaultValue={defaultValue}\r\n\t\t\t\tdefaultValueEn={props.multiLangText.textEn}\r\n\t\t\t\tdefaultValueHu={props.multiLangText.textHu} />\r\n\t\t</>\r\n\t);\r\n}","import React, { useCallback, useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Button, Col, Row } from 'react-bootstrap';\r\nimport { TranslateContext } from '../../../../../contexts/TranslateContext';\r\nimport { QuestionAnswerLoader } from './questionAnswerLoader';\r\nimport { QuestionCreationContext } from '../../../../../contexts/QuestionCreationContext';\r\nimport { AnswerCreateModel } from '../../../../../models/AnswerCreateModel';\r\n\r\nexport const QuestionAnswers: React.FC<Props> = ({ questionModel, onChange }) => {\r\n\tconst { t } = useContext(TranslateContext);\r\n\tconst { questionNumber, answerNumber, setAnswerNumber } = useContext(QuestionCreationContext);\r\n\tconst [answers, setAnswers] = useState<JSX.Element[]>([]);\r\n\r\n\tconst closeAnswer = useCallback((answerId: string) => {\r\n\t\tonChange(model => {\r\n\t\t\tlet rv = { ...model };\r\n\r\n\t\t\tconst toClose = rv.answerOptions.find((item) => item.answerId === answerId);\r\n\r\n\t\t\tif (toClose === undefined) { \r\n\t\t\t\treturn rv;\t\t\t//deref important! never return arr directly\r\n\t\t\t}\r\n\r\n\t\t\tconst toCloseIndex = rv.answerOptions.indexOf(toClose); \r\n\t\t\trv.answerOptions.splice(toCloseIndex, 1);\r\n\t\t\trv.answerOptions = [...rv.answerOptions];\t//splice doesn't trigger the useEffects reaload...\r\n\r\n\t\t\treturn rv;\r\n\t\t})\r\n\t}, [onChange]);\r\n\r\n\tconst addAnswer = useCallback(() => {\r\n\t\tonChange(model => {\r\n\t\t\tlet rv = { ...model };\r\n\r\n\t\t\trv.answerOptions = [...rv.answerOptions, { \r\n\t\t\t\tanswerId: answerNumber.toString(),\r\n\t\t\t\ttextEn: \"\",\r\n\t\t\t\ttextHu: \"\"\r\n\t\t\t }]\r\n\r\n\t\t\treturn rv;\r\n\t\t});\r\n\t\t\r\n\t\tsetAnswerNumber(act => act + 1);\r\n\t}, [answerNumber, onChange, setAnswerNumber]);\r\n\r\n\tconst isCloseDisabled = useCallback((answerOption: AnswerCreateModel) => {\r\n\t\treturn answerOption.answerId === questionModel.correctAnswerId ||\r\n\t\t\t   (+(answerOption.answerId) - 1).toString() === questionModel.correctAnswerId;\r\n\t}, [questionModel.correctAnswerId]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetAnswers(\r\n\t\t\tquestionModel.answerOptions.map((answerOption) => \r\n\t\t\t\t<QuestionAnswerLoader \r\n\t\t\t\t\tkey={answerOption.answerId} \r\n\t\t\t\t\tanswerId={answerOption.answerId}\r\n\t\t\t\t\tcorrectAnswerId={questionModel.correctAnswerId}\r\n\t\t\t\t\tmultiLang={questionModel.multiLang} \r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tonCloseAnswer={isCloseDisabled(answerOption) ? undefined : closeAnswer}\r\n\t\t\t\t\tmultiLangText={{ textEn: answerOption.textEn, textHu: answerOption.textHu }} />)\r\n\t\t);\r\n\t}, [questionNumber, closeAnswer, addAnswer, isCloseDisabled, onChange, questionModel.answerOptions, questionModel.multiLang, questionModel.correctAnswerId]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{answers}\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Button variant=\"secondary\" onClick={addAnswer}>{t(\"createQuiz.question.addAnswerOption\")}</Button>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</>\r\n\t);\r\n}","import { QuestionCreateModel } from './../models/QuestionCreateModel';\r\n\r\nexport function validateModel(model: QuestionCreateModel): string | null {\r\n    let error = validateText(model);\r\n\r\n    if (error !== null) {\r\n        return error;\r\n    }\r\n\r\n    error = validateAnswers(model);\r\n\r\n    return error;\r\n}\r\n\r\nfunction validateText(model: QuestionCreateModel): string | null {\r\n    if (model.multiLang) {\r\n        if (model.textEn.length <= 0 || model.textHu.length <= 0) {\r\n            return \"createQuiz.question.bothLanguageRequired\";\r\n        }\r\n    }\r\n    else if (model.lang === 'hu') {\r\n        if (model.textHu.length <= 0) {\r\n            return \"createQuiz.question.textRequired\";\r\n        }\r\n    }\r\n    else {\r\n        if (model.textEn.length <= 0) {\r\n            return \"createQuiz.question.textRequired\";\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction validateAnswers(model: QuestionCreateModel): string | null {\r\n    if (model.answerOptions.length < 2) {\r\n        return \"createQuiz.question.answerCountRequired\";\r\n    }\r\n\r\n    const correctAnswer = model.answerOptions.find((item) => item.answerId === model.correctAnswerId);\r\n\r\n    if (correctAnswer === undefined) {\r\n        return \"createQuiz.question.correctAnswerRequired\";\r\n    }\r\n\r\n    if (correctAnswer.textEn.length <= 0 && correctAnswer.textHu.length <= 0) {\r\n        return \"createQuiz.question.correctAnswerRequired\";\r\n    }\r\n\r\n    for (let i = 0; i < model.answerOptions.length; i++) {\r\n        const answerOption = model.answerOptions[i];\r\n        \r\n        if (answerOption.textEn.length <= 0 && answerOption.textHu.length <= 0) {\r\n            return \"createQuiz.question.answerRequired\";\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Alert, Button, Col, Row } from 'react-bootstrap';\r\nimport { TranslateContext } from '../../../../../contexts/TranslateContext';\r\nimport * as questionCreateModelValidator from '../../../../../helpers/QuestionCreateModelValidator'\r\nimport { QuestionCreationContext } from '../../../../../contexts/QuestionCreationContext';\r\n\r\nexport const QuestionNavigationButtons: React.FC<Props> = (props: Props) => {\r\n\tconst { t } = useContext(TranslateContext);\r\n\tconst { questionNumber, isCrurrentQuestionCreatedYet } = useContext(QuestionCreationContext);\r\n\tconst [alert, setAlert] = useState<string | null>(null);\r\n\r\n\tconst onPrevClick = () => {\r\n\t\tif (questionNumber === 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tprops.onPrev();\r\n\t}\r\n\r\n\tconst onNextClick = () => {\r\n\t\tconst error = questionCreateModelValidator.validateModel(props.questionModel);\r\n\t\tif (error !== null) {\r\n\t\t\tsetAlert(t(error)); \r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tsetAlert(null);\r\n\r\n\t\tif (isCrurrentQuestionCreatedYet()) {\r\n\t\t\tprops.onNextNew();\r\n\t\t}\r\n\t\telse{\r\n\t\t\tprops.onNext();\r\n\t\t}\r\n\t}\r\n\r\n\tconst onFinishClick = () => {\r\n\t\tconst error = questionCreateModelValidator.validateModel(props.questionModel);\r\n\t\tif (error === null) {\r\n\t\t\tif (isCrurrentQuestionCreatedYet()) {\r\n\t\t\t\tprops.onNextNew();\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tprops.onNext();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tprops.onFinishClick();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Row className='question-btn-row'>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Button variant=\"secondary\" size='lg' className='question-btn' onClick={onPrevClick}>{t(\"createQuiz.question.prevQuestion\")}</Button>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Button variant=\"secondary\" size='lg' className='question-btn' onClick={onNextClick}>{t(\"createQuiz.question.nextQuestion\")}</Button>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t{alert !== null && \r\n\t\t\t<Row className='alert-row'><Alert variant='danger'>{alert}</Alert></Row>}\r\n\r\n\t\t\t<Row className='finish-btn-row'>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Button variant=\"success\" size='lg' onClick={onFinishClick}>{t(\"createQuiz.question.finishQuiz\")}</Button>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { FloatingLabel, Form } from 'react-bootstrap';\r\nimport { QuestionCreationContext } from '../../../../contexts/QuestionCreationContext';\r\n\r\nexport const QuestionTextInput: React.FC<Props> = ({ label, defaultValue, onChange}) => {\r\n\tconst [actValue, setActValue] = useState(defaultValue);\r\n\tconst { questionNumber } = useContext(QuestionCreationContext);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetActValue(defaultValue);\r\n\t}, [defaultValue, questionNumber]);\r\n\r\n\tconst handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetActValue(event.target.value);\r\n\t\tonChange(event.target.value);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<FloatingLabel controlId=\"floatingTextarea\" label={label} className=\"mb-3\">\r\n\t\t\t<Form.Control as=\"textarea\"\tplaceholder={label} className='textarea-style' onChange={handleChange} value={actValue} />\r\n\t\t</FloatingLabel>\r\n\t);\r\n}","import React from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { QuestionTextInput } from '../../../../../../common/quizModification/questionTextInput';\r\n\r\nexport const LangText: React.FC<Props> = (props: Props) => {\t\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<QuestionTextInput label={props.labelEn} onChange={props.onChangeEn} defaultValue={props.defaultValueEn} />\r\n\t\t\t<QuestionTextInput label={props.labelHu} onChange={props.onChangeHu} defaultValue={props.defaultValueHu} />\r\n\t\t</>\r\n\t);\r\n}","import React from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { QuestionTextInput } from '../../../../../../common/quizModification/questionTextInput';\r\n\r\nexport const MonoText: React.FC<Props> = (props: Props) => {\t\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<QuestionTextInput label={props.label} onChange={props.onChange} defaultValue={props.defaultValue} />\r\n\t\t</>\r\n\t);\r\n}","import React, { useCallback, useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { TranslateContext } from '../../../../../../contexts/TranslateContext';\r\nimport { LangText } from './langText';\r\nimport { MonoText } from './monoText';\r\n\r\nexport const QuestionText: React.FC<Props> = ({ multiLang, onChange, defaultValue, defaultValueEn, defaultValueHu }) => {\r\n\tconst { t, lang } = useContext(TranslateContext);\r\n\r\n\tconst handleChange = useCallback((value: string) => {\r\n\t\tonChange((model) => {\r\n\t\t\tlet rv = {\r\n\t\t\t\t...model\r\n\t\t\t};\r\n\r\n\t\t\tif (lang === 'hu'){\r\n\t\t\t\trv.textHu = value;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\trv.textEn = value;\r\n\t\t\t}\r\n\r\n\t\t\treturn rv;\r\n\t\t});\r\n\t}, [lang, onChange]);\r\n\r\n\tconst handleChangeEn = useCallback((value: string) => {\r\n\t\tonChange((model) => {\r\n\t\t\treturn {\r\n\t\t\t\t...model,\r\n\t\t\t\ttextEn: value\r\n\t\t\t};\r\n\t\t});\r\n\t}, [onChange]);\r\n\r\n\tconst handleChangeHu = useCallback((value: string) => {\r\n\t\tonChange((model) => {\r\n\t\t\treturn {\r\n\t\t\t\t...model,\r\n\t\t\t\ttextHu: value\r\n\t\t\t};\r\n\t\t});\r\n\t}, [onChange]);\r\n\r\n\tconst content = multiLang ? \r\n\t\t<LangText \r\n\t\t\tlabelEn={t(\"createQuiz.question.textEn\")} \r\n\t\t\tlabelHu={t(\"createQuiz.question.textHu\")} \r\n\t\t\tdefaultValueEn={defaultValueEn}\r\n\t\t\tdefaultValueHu={defaultValueHu}\r\n\t\t\tonChangeEn={handleChangeEn}\r\n\t\t\tonChangeHu={handleChangeHu} /> :\r\n\t\t<MonoText label={t(\"createQuiz.question.text\")} defaultValue={defaultValue} onChange={handleChange} />\r\n\r\n\treturn (\r\n\t\t<Row>\r\n\t\t\t<Col>\r\n\t\t\t\t{content}\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t);\r\n}","import React, { useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { TranslateContext } from '../../../../../contexts/TranslateContext';\r\nimport { QuestionText } from './questionText';\r\n\r\nexport const QuestionTextLoader: React.FC<Props> = (props: Props) => {\r\n\tconst { lang } = useContext(TranslateContext);\r\n\r\n\tconst defaultValue = lang === 'hu' ? props.questionModel.textHu : props.questionModel.textEn;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<QuestionText \r\n\t\t\t\tmultiLang={props.questionModel.multiLang} \r\n\t\t\t\tonChange={props.onChange} \r\n\t\t\t\tdefaultValue={defaultValue}\r\n\t\t\t\tdefaultValueEn={props.questionModel.textEn}\r\n\t\t\t\tdefaultValueHu={props.questionModel.textHu} />\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Container } from 'react-bootstrap';\r\nimport { TranslateContext } from '../../../../contexts/TranslateContext';\r\nimport { QuestionAnswers } from './questionAnswers';\r\nimport { QuestionCreateModel } from '../../../../models/QuestionCreateModel';\r\nimport { QuestionCreationContext } from '../../../../contexts/QuestionCreationContext';\r\nimport { QuestionNavigationButtons } from './questionNavigationButtons';\r\nimport { QuestionTextLoader } from './questionTextLoader';\r\nimport * as questionService from '../../../../services/QuestionService';\r\n\r\nexport const QuestionForm: React.FC<Props> = (props: Props) => {\r\n\tconst { t, lang } = useContext(TranslateContext);\r\n\tconst { questionNumber, setQuestionNumber, answerNumber, setAnswerNumber, \r\n\t\t\tgetQuizContainer, isCrurrentQuestionCreatedYet, isNextQuestionNew } = useContext(QuestionCreationContext);\r\n\tconst [questionModel, setQuestionModel] = useState<QuestionCreateModel>(\r\n\t\t\t{ questionNumber: questionNumber, \r\n\t\t\t\ttextEn: \"\", \r\n\t\t\t\ttextHu: \"\", \r\n\t\t\t\tanswerOptions: [{answerId: \"1\", textEn: \"\", textHu: \"\"},\r\n\t\t\t\t\t\t\t\t{answerId: \"2\", textEn: \"\", textHu: \"\"}], \r\n\t\t\t\tcorrectAnswerId: \"1\", \r\n\t\t\t\tmultiLang: props.multiLang, \r\n\t\t\t\tlang }\r\n\t);\r\n\tconst [titleCreateOrModify, setTitleCreateOrModify] = useState(t(\"createQuiz.question.titleCreate\"));\r\n\r\n\tuseEffect(() => {\r\n\t\tif (props.questionCreateModel !== undefined) {\r\n\t\t\tsetQuestionModel(props.questionCreateModel);\r\n\t\t}\r\n\t}, [props.questionCreateModel]);\r\n\r\n\tconst setToNewEmptyForm = () => {\r\n\t\tsetQuestionModel({ \r\n\t\t\tquestionNumber: questionNumber + 1, \r\n\t\t\ttextEn: \"\", \r\n\t\t\ttextHu: \"\", \r\n\t\t\tanswerOptions: [ {answerId: answerNumber.toString(), textEn: \"\", textHu: \"\"},\r\n\t\t\t\t\t\t\t {answerId: (answerNumber + 1).toString(), textEn: \"\", textHu: \"\"}\r\n\t\t \t], \r\n\t\t\tcorrectAnswerId: answerNumber.toString(), \r\n\t\t\tmultiLang: props.multiLang, \r\n\t\t\tlang \r\n\t\t});\r\n\r\n\t\tsetQuestionNumber(act => act + 1);\r\n\t\tsetAnswerNumber(act => act + 2);\t\t\t//increase to the next available (after the 2 def)\t\r\n\t\tsetTitleCreateOrModify(t(\"createQuiz.question.titleCreate\"));\r\n\t}\r\n\r\n\tconst onPrev = () => {\r\n\t\tif (!isCrurrentQuestionCreatedYet()) {\r\n\t\t\tprops.questionSubmitted(questionModel);\r\n\t\t}\r\n\r\n\t\tconst prevQuestionModel = questionService.getQuestionContainer(questionNumber - 1, getQuizContainer()).questionModel;\r\n\t\tsetQuestionModel(prevQuestionModel);\r\n\r\n\t\tsetQuestionNumber(act => act - 1);\r\n\t\tsetTitleCreateOrModify(t(\"createQuiz.question.titleModify\"));\r\n\t}\r\n\r\n\tconst onNext = () => {\r\n\t\tprops.questionSubmitted(questionModel);\r\n\r\n\t\tif (isNextQuestionNew()) {\r\n\t\t\tsetToNewEmptyForm();\r\n\t\t}\r\n\t\telse{\r\n\t\t\tconst nextQuestionModel = questionService.getQuestionContainer(questionNumber + 1, getQuizContainer()).questionModel;\r\n\t\t\tsetQuestionModel(nextQuestionModel);\r\n\r\n\t\t\tsetQuestionNumber(act => act + 1);\r\n\t\t\tsetTitleCreateOrModify(t(\"createQuiz.question.titleModify\"));\r\n\t\t}\r\n\t}\r\n\r\n\tconst onNextNew = () => {\r\n\t\tprops.questionSubmitted(questionModel);\r\n\r\n\t\tsetToNewEmptyForm();\t\t\r\n\t}\r\n\r\n\tconst handleClickFinish = () => {\r\n\t\tprops.finishQuiz();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container className=\"justify-content-md-center\">\r\n\t\t\t<h3 className='main-title'>{questionNumber.toString()}. {titleCreateOrModify}</h3>\r\n\r\n\t\t\t<QuestionTextLoader questionModel={questionModel} onChange={setQuestionModel} />\r\n\t\t\t<QuestionAnswers questionModel={questionModel} onChange={setQuestionModel} /> \r\n\r\n\t\t\t<QuestionNavigationButtons questionModel={questionModel} onPrev={onPrev} onNext={onNext} onNextNew={onNextNew} onFinishClick={handleClickFinish} />\r\n\t\t</Container>\r\n\t);\r\n}","import React, { useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { defaultQuestionCreationState, QuestionCreationContext } from '../../../contexts/QuestionCreationContext';\r\n\r\nexport const QuestionCreationContextComponent: React.FC<Props> = (props: Props) => {\r\n\tconst [questionNumber, setQuestionNumber] = useState(defaultQuestionCreationState.questionNumber);\r\n\tconst [answerNumber, setAnswerNumber] = useState(defaultQuestionCreationState.answerNumber);\r\n\r\n\tconst getQuizContainer = () => {\r\n\t\treturn props.quizContainer;\r\n\t}\r\n\r\n\tconst isCrurrentQuestionCreatedYet = () => {\r\n\t\treturn props.quizContainer.questions.length < questionNumber;\t\t//questionNumber is larger then the length, means its not inside it\r\n\t}\r\n\r\n\tconst isNextQuestionNew = () => {\r\n\t\treturn props.quizContainer.questions.length < (questionNumber + 1);\t\t//questionNumber is larger then the length, means its not inside it\r\n\t}\r\n\r\n\treturn (\r\n\t\t<QuestionCreationContext.Provider value={{\r\n\t\t\tquestionNumber,\r\n\t\t\tsetQuestionNumber,\r\n\t\t\tanswerNumber,\r\n\t\t\tsetAnswerNumber,\r\n\r\n\t\t\tgetQuizContainer,\r\n\t\t\tisCrurrentQuestionCreatedYet,\r\n\t\t\tisNextQuestionNew\r\n\t\t}}>\r\n\t\t\t{props.children}\r\n\t\t</QuestionCreationContext.Provider>\r\n\t);\r\n}","import React, { useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Button, Col, Container, Modal, Row } from 'react-bootstrap';\r\nimport { TranslateContext } from '../../../../contexts/TranslateContext';\r\n\r\nexport const QuizShareModeModal: React.FC<Props> = (props: Props) => {\r\n\tconst { t } = useContext(TranslateContext);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal show={props.show} onHide={props.onHide} centered>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>{t(\"shareQuiz.modal.publish.title\")}</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t{t(\"shareQuiz.modal.publish.text\")}\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<Button variant=\"primary\" className='btn-style' onClick={() => props.onConfirm(false)}>{t(\"shareQuiz.modal.publish.share\")}</Button>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<Button variant=\"primary\" className='btn-style' onClick={() => props.onConfirm(true)}>{t(\"shareQuiz.modal.publish.publish\")}</Button>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n}","import React, { useCallback, useEffect, useState, useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { FloatingLabel, Form, Row, ToggleButton } from 'react-bootstrap';\r\nimport { TranslateContext } from '../../../../../contexts/TranslateContext';\r\n\r\nexport const QuizShareModalBody: React.FC<Props> = ({ friendList, setSelected }) => {\r\n\tconst { t } = useContext(TranslateContext);\r\n\tconst [elements, setElements] = useState<JSX.Element[]>([]);\r\n\tconst [elementActive, setElementActive] = useState(\"\");\r\n\t\r\n\tconst onSelectChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetElementActive(event.target.value);\r\n\t\tsetSelected(event.target.value);\r\n\t}, [setSelected]);\r\n\t\r\n\tconst onSelectClick = useCallback((value: string) => {\r\n\t\tsetElementActive(value);\r\n\t\tsetSelected(value);\r\n\t}, [setSelected]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetElements(\r\n\t\t\tfriendList.map((friend, indx) => \r\n\t\t\t\t<Row key={\"row\" + indx} className='row-style'>\r\n\t\t\t\t\t<ToggleButton \r\n\t\t\t\t\t\tkey={\"btnKey\" + indx} \r\n\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\tvariant=\"outline-dark\" \r\n\t\t\t\t\t\tchecked={friend === elementActive}\r\n        \t\t\t\tvalue={friend}\r\n\t\t\t\t\t\tonChange={onSelectChange} \r\n\t\t\t\t\t\tonClick={() => {onSelectClick(friend)}}>\r\n\t\t\t\t\t\t\t{friend}\r\n\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t</Row>)\r\n\t\t);\r\n\t}, [friendList, elementActive, onSelectChange, onSelectClick]);\r\n\r\n\treturn (\r\n\t\t<>\t\t\t\r\n\t\t\t{elements}\r\n\r\n\t\t\t<FloatingLabel\r\n\t\t\t\tcontrolId=\"floatingInput\"\r\n\t\t\t\tlabel={t(\"shareQuiz.modal.share.webid\")}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Form.Control type=\"text\" placeholder={t(\"shareQuiz.modal.share.webid\")} onChange={onSelectChange} value={elementActive} />\t\t\t\t\r\n\t\t\t</FloatingLabel>\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Button, Container, Modal, Row } from 'react-bootstrap';\r\nimport { TranslateContext } from '../../../../contexts/TranslateContext';\r\nimport { QuizShareModalBody } from './quizShareModalBody';\r\n\r\nexport const QuizShareModal: React.FC<Props> = (props: Props) => {\r\n\tconst { t } = useContext(TranslateContext);\r\n\tconst [selectedPerson, setSelectedPerson] = useState<string | null>(null);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal show={props.show} onHide={props.onHide} centered>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>{t(\"shareQuiz.modal.share.title\")}</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t{t(\"shareQuiz.modal.share.text\")}\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<QuizShareModalBody friendList={props.friendList} setSelected={setSelectedPerson} />\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button variant=\"secondary\" className='btn-style' onClick={props.onHide}>{t(\"shareQuiz.modal.share.cancel\")}</Button>\r\n\t\t\t\t\t<Button \r\n\t\t\t\t\t\tvariant=\"primary\" \r\n\t\t\t\t\t\tclassName='btn-style' \r\n\t\t\t\t\t\tonClick={() => props.onConfirm(selectedPerson ?? \"error\")} \r\n\t\t\t\t\t\tdisabled={selectedPerson === null}>\r\n\t\t\t\t\t\t\t{t(\"shareQuiz.modal.share.share\")}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n}","import React, { useState, useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport { IoMdShare } from \"@react-icons/all-files/io/IoMdShare\";\r\nimport { QuizShareModeModal } from './quizShareModeModal';\r\nimport { SpinnerContext } from '../../../contexts/SpinnerContext';\r\nimport { checkForQuizShare, getFriendsList, handlePublishQuiz, shareQuizWithFriend } from '../../../helpers/SharesHelper';\r\nimport { useSession } from '@inrupt/solid-ui-react';\r\nimport { InfoModal } from '../infoModal';\r\nimport { TranslateContext } from '../../../contexts/TranslateContext';\r\nimport { WorkspaceContext } from '../../../contexts/WorkspaceContext';\r\nimport { QuizShareModal } from './quizShareModal';\r\n\r\nexport const QuizShare: React.FC<Props> = (props: Props) => {\r\n\tconst { session } = useSession();\r\n\tconst { t } = useContext(TranslateContext);\r\n\tconst { SpinAround } = useContext(SpinnerContext);\r\n\tconst { workspaceUrl, webId } = useContext(WorkspaceContext);\r\n\tconst [shareModeModalShow, setShareModeModalShow] = useState(false);\r\n\tconst [infoModal, setInfoModal] = useState<string | null>(null);\r\n\tconst [shareModalShow, setShareModalShow] = useState(false);\r\n\tconst [friendList, setFriendList] = useState<string[]>([]);\r\n\r\n\tconst handleConfirm = (isPublish: boolean) => {\r\n\t\tsetShareModeModalShow(false);\r\n\r\n\t\tif (isPublish) {\r\n\t\t\thandlePublish();\r\n\t\t}\r\n\t\telse{\r\n\t\t\tSpinAround(async () => {\r\n\t\t\t\tconst friendList = await getFriendsList(webId, session.fetch);\r\n\t\t\t\t\r\n\t\t\t\tsetFriendList(friendList);\r\n\t\t\t\tsetShareModalShow(true);\r\n\t\t\t});\t\r\n\t\t}\r\n\t};\r\n\r\n\tconst handlePublish = () => {\t\t\t\r\n\t\tSpinAround(async () => {\r\n\t\t\tconst quizAlreadyshared = await checkForQuizShare(props.datasetAndThing, session.fetch);\r\n\r\n\t\t\tif (quizAlreadyshared) {\r\n\t\t\t\tsetInfoModal(t(\"shareQuiz.modal.publish.alreadyPublished\"));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tawait handlePublishQuiz(webId, workspaceUrl, props.datasetAndThing, session.fetch);\r\n\t\r\n\t\t\t\tsetInfoModal(t(\"shareQuiz.modal.publish.ok\"));\r\n\t\t\t}\r\n\t\t});\t\r\n\t};\r\n\r\n\tconst handleShare = (agentUri: string) => {\r\n\t\tsetShareModalShow(false);\r\n\r\n\t\tSpinAround(async () => {\r\n\t\t\tconst quizAlreadyshared = await checkForQuizShare(props.datasetAndThing, session.fetch);\r\n\r\n\t\t\tif (quizAlreadyshared) {\r\n\t\t\t\tsetInfoModal(t(\"shareQuiz.modal.publish.alreadyPublished\"));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tawait shareQuizWithFriend(webId, agentUri, workspaceUrl, props.datasetAndThing, session.fetch);\r\n\t\r\n\t\t\t\tsetInfoModal(t(\"shareQuiz.modal.share.ok\"));\r\n\t\t\t}\r\n\t\t});\t\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button variant='light' onClick={() => setShareModeModalShow(true)}><IoMdShare /></Button>\r\n\t\t\t\r\n\t\t\t<QuizShareModeModal show={shareModeModalShow} onHide={() => setShareModeModalShow(false)} onConfirm={handleConfirm} />\r\n\r\n\t\t\t<QuizShareModal show={shareModalShow} onHide={() => setShareModalShow(false)} onConfirm={handleShare} friendList={friendList} />\r\n\r\n\t\t\t<InfoModal show={infoModal !== null} onHide={() => setInfoModal(null)} body={infoModal ?? \"error\"} />\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Button, Row } from 'react-bootstrap';\r\nimport { TranslateContext } from '../../../../contexts/TranslateContext';\r\nimport { PageSwitcherContext } from '../../../../contexts/PageSwitcherContext';\r\nimport { getString } from './../../../../helpers/LangReader';\r\nimport { getBoolean, getInteger } from '@inrupt/solid-client';\r\nimport { TITLE, MULTI_LANGUAGE_SUPPORT, NUMBER_OF_QUESTIONS } from './../../../../constants/SolidQuizMissingValues';\r\nimport { QuizShare } from '../../../common/quizShare';\r\n\r\nexport const CreationResult: React.FC<Props> = (props: Props) => {\r\n\tconst { t, lang } = useContext(TranslateContext);\t\r\n\tconst { GoBack } = useContext(PageSwitcherContext);\r\n\tconst [title, setTitle] = useState(\"\");\r\n\tconst [questionNumber, setQuestionNumber] = useState(\"\");\r\n\r\n\tuseEffect(() => {\r\n\t\tconst multiLang = getBoolean(props.quizData.thing, MULTI_LANGUAGE_SUPPORT) ?? false;\r\n\t\tconst actTitle = getString(props.quizData.thing, TITLE, multiLang, lang);\r\n\t\tconst actQuestionNumber = getInteger(props.quizData.thing, NUMBER_OF_QUESTIONS) ?? -1;\r\n\r\n\t\tsetTitle(actTitle);\r\n\t\tsetQuestionNumber(actQuestionNumber.toString());\r\n\t}, [props.quizData.thing, lang]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className='main-title'>{t(\"createQuiz.result.title\")}</h3>\r\n\r\n\t\t\t<Row>\r\n\t\t\t\t<p className='quizTitle-text'>{t(\"createQuiz.result.quizTitle\")} {title}</p>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<p className='questionNumber-text'>{t(\"createQuiz.result.questionNumber\")} {questionNumber}</p>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<p className='sharing-text'>{t(\"createQuiz.result.share\")}</p>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\t\t\t\t\r\n\t\t\t\t<QuizShare datasetAndThing={props.quizData} />\r\n\t\t\t</Row>\r\n\r\n\t\t\t<Button variant='light' className='back-btn' onClick={() => GoBack()}>{t(\"page.common.back\")}</Button>\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { TranslateContext } from '../../../contexts/TranslateContext';\r\nimport { PageSwitcherContext } from '../../../contexts/PageSwitcherContext';\r\nimport { Alert, Button } from 'react-bootstrap';\r\nimport { QuizForm } from './quizForm';\r\nimport { QuizContainer } from './../../../models/QuizContainer';\r\nimport * as quizService from '../../../services/QuizService'\r\nimport * as quizResultService from '../../../services/QuizResultService'\r\nimport * as questionService from '../../../services/QuestionService'\r\nimport * as quizContainerConverter from '../../../helpers/QuizContainerConverter'\r\nimport { QuizFormModel } from '../../../models/QuizFormModel';\r\nimport { WorkspaceContext } from './../../../contexts/WorkspaceContext';\r\nimport { QuestionForm } from './questionForm';\r\nimport { useSession } from '@inrupt/solid-ui-react';\r\nimport { SpinnerContext } from '../../../contexts/SpinnerContext';\r\nimport { QuestionCreateModel } from './../../../models/QuestionCreateModel';\r\nimport { QuestionCreationContextComponent } from '../../common/questionCreationContextComponent';\r\nimport { InfoModal } from '../../common/infoModal';\r\nimport { CreationResult } from './creationResult';\r\nimport { DatasetAndThing } from '../../../models/DatasetAndThing';\r\n\r\nexport const CreateQuiz: React.FC<Props> = (props: Props) => {\r\n\tconst { session } = useSession();\r\n\tconst { t, lang } = useContext(TranslateContext);\r\n\tconst { GoBack } = useContext(PageSwitcherContext);\r\n\tconst { workspaceUrl, webId } = useContext(WorkspaceContext);\r\n\tconst { SpinAround } = useContext(SpinnerContext);\r\n\tconst [alert, setAlert] = useState<string | null>(null);\r\n\tconst [quizContainer, setQuizContainer] = useState<QuizContainer | null>(null);\r\n\tconst [firstFormModel, setFirstFormModel] = useState<QuestionCreateModel | undefined>(undefined);\r\n\tconst [modalErrorMsg, setModalErrorMsg] = useState<string | null>(null);\r\n\tconst [creationResult, setCreationResult] = useState<DatasetAndThing | null>(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (props.datasetAndThing !== undefined) {\r\n\t\t\tlet propQuizContainer: QuizContainer | null = null;\r\n\r\n\t\t\ttry {\r\n\t\t\t\tpropQuizContainer = quizContainerConverter.convert(props.datasetAndThing.thing, props.datasetAndThing.dataset, lang);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tsetModalErrorMsg(t(\"modifyQuiz.modal.modificationFailed\"));\r\n\t\t\t}\r\n\r\n\t\t\tsetQuizContainer(propQuizContainer);\r\n\t\t\tif (propQuizContainer !== null) {\r\n\t\t\t\tsetFirstFormModel(propQuizContainer.questions.find((item) => item.questionModel.questionNumber === 1)?.questionModel);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [props.datasetAndThing, lang, t]);\r\n\r\n\tconst quizFormSubmitted = (quizFormModel: QuizFormModel) => {\r\n\t\tSpinAround(async () => {\r\n\t\t\t//create quizName and check if reserved\r\n\t\t\tconst quizName = quizService.createQuizResourceName(quizFormModel); //lets be the quiz things name and also the datasets name\r\n\t\t\tconst nameIsAlreadyReserved = await quizService.checkQuizTitleIsAlreadyReserved(quizName, workspaceUrl, session.fetch);\r\n\r\n\t\t\tif (nameIsAlreadyReserved) {\r\n\t\t\t\tsetAlert(t(\"createQuiz.quiz.nameIsAlreadyReserved\"));\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t//if not reserved create container\r\n\t\t\t\tsetQuizContainer(quizService.createQuizContainer(quizName, quizFormModel, webId));\r\n\t\t\t\tsetAlert(null);\r\n\t\t\t}\r\n\t\t});\t\t\r\n\t}\r\n\r\n\tconst questionSubmitted = (questionModel: QuestionCreateModel) => {\r\n\t\tif (quizContainer === null) {\r\n\t\t\tconsole.log(\"questionSubmitted called when quizContainer is missing!\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//create question container\r\n\t\tconst quizUri = quizService.getSpecificQuizUri(workspaceUrl, quizContainer.quizName);\r\n\t\tconst questionContainer = questionService.createQuestionContainer(questionModel, quizUri);\r\n\r\n\t\t//update container\r\n\t\tsetQuizContainer((model) => {\r\n\t\t\tif( model === null){\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tlet rv = {\r\n\t\t\t\t...model\r\n\t\t\t};\r\n\r\n\t\t\t//replace or push new to questions\r\n\t\t\tconst element = rv.questions.find((item) => item.questionName === questionContainer.questionName);\r\n\t\t\tif (element !== undefined) {\r\n\t\t\t\tconst indexOf = rv.questions.indexOf(element);\r\n\t\t\t\trv.questions[indexOf] = questionContainer;\r\n\t\t\t}\r\n\t\t\telse{ \r\n\t\t\t\trv.questions.push(questionContainer);\r\n\t\t\t}\r\n\r\n\t\t\treturn rv;\r\n\t\t});\r\n\t}\r\n\r\n\tconst finishQuiz = () => {\r\n\t\tSpinAround(async () => {\t\r\n\t\t\tif (quizContainer === null) {\r\n\t\t\t\tconsole.log(\"finishQuiz called when quizContainer is null!\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst savedQuizThing = await quizService.saveNewQuiz(quizContainer, workspaceUrl, session.fetch);\r\n\t\t\tawait quizResultService.createQuizResultsContainer(workspaceUrl, quizContainer.quizName, session.fetch); \r\n\r\n\t\t\tsetCreationResult(savedQuizThing);\r\n\t\t});\t\r\n\t}\r\n\r\n\tif (creationResult !== null) {\r\n\t\treturn <CreationResult quizData={creationResult} />;\r\n\t}\r\n\r\n\tconst content = quizContainer === null ? \r\n\t\t<QuizForm afterFormSubmit={quizFormSubmitted} /> : \r\n\t\t<QuestionCreationContextComponent quizContainer={quizContainer}> \r\n\t\t\t<QuestionForm \r\n\t\t\t\tmultiLang={quizContainer.quizFormModel.multiLang} \r\n\t\t\t\tquestionSubmitted={questionSubmitted} \r\n\t\t\t\tfinishQuiz={finishQuiz} \r\n\t\t\t\tquestionCreateModel={firstFormModel} />\r\n\t\t</QuestionCreationContextComponent>\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{content}\r\n\t\t\t{alert !== null && \r\n\t\t\t<Alert variant='danger'>{alert}</Alert>}\r\n\t\t\t<Button variant='light' className='back-btn' onClick={() => GoBack()}>{t(\"page.common.back\")}</Button>\r\n\r\n\t\t\t<InfoModal show={modalErrorMsg !== null} onHide={() => setModalErrorMsg(null)} body={modalErrorMsg ?? \"error\"} />\r\n\t\t</>\r\n\t);\r\n}","import { SolidDataset_Type, SolidFetch_Type } from '../constants/SolidDatasetType';\r\nimport * as shareLinksService from '../services/ShareLinksService';\r\nimport * as aclService from '../services/AclService';\r\nimport { getSolidDataset, getBoolean, removeThing, getStringNoLocale } from '@inrupt/solid-client';\r\nimport { getUrl } from '@inrupt/solid-client';\r\nimport SOLIDQUIZ from './SOLIDQUIZ';\r\nimport { getThing } from '@inrupt/solid-client';\r\nimport { MULTI_LANGUAGE_SUPPORT } from '../constants/SolidQuizMissingValues';\r\nimport { getString } from './LangReader';\r\nimport { TITLE } from './../constants/SolidQuizMissingValues';\r\nimport { ShareLinkModel } from '../models/ShareLinkModel';\r\nimport { SOLID_QUIZ_POD_PROFILE } from '../constants/DefaultValues';\r\nimport { Thing } from '@inrupt/solid-client';\r\nimport { saveSolidDatasetAt } from '@inrupt/solid-client';\r\nimport { FOAF } from '@inrupt/vocab-common-rdf';\r\nimport { ShareLinkFetchModel } from '../models/ShareLinkFetchModel';\r\n\r\nexport async function getAllShareThingByShareLink(workspaceUrl: string, fetch: SolidFetch_Type): Promise<ShareLinkModel[]> {\r\n    const shareLinks = await shareLinksService.getAllShareLink(workspaceUrl, fetch);\r\n\r\n    //fetch together\r\n    const promiseList: Promise<ShareLinkFetchModel>[] = [];\r\n    for (let i = 0; i < shareLinks.length; i++) {\r\n        const shareLink = shareLinks[i];\r\n\r\n        const resourceUri = getUrl(shareLink, SOLIDQUIZ.shareLinksLink.value) ?? \"error\";\r\n\r\n        promiseList.push(tryGetShare(resourceUri, shareLink, fetch));\r\n    }    \r\n    const fetchedPromises = await Promise.all(promiseList);\r\n\r\n    const rv: ShareLinkModel[] = [];\r\n\r\n    for (let i = 0; i < fetchedPromises.length; i++) {\r\n        const shareLinkFetchModel = fetchedPromises[i];\r\n\r\n        if (shareLinkFetchModel.shareDataset !== null) {\r\n            const thing = getThing(shareLinkFetchModel.shareDataset, shareLinkFetchModel.resourceUri);\r\n\r\n            if (thing !== null) {\r\n                const isPubliclyShared = checkIfPubliclyShared(shareLinkFetchModel.shareLink);\r\n\r\n                rv.push({ shareThing: thing, shareLinkThing: shareLinkFetchModel.shareLink, isPubliclyShared });\r\n            }\r\n        }\r\n    }\r\n\r\n    return rv;\r\n}\r\n\r\nasync function tryGetShare(resourceUri: string, shareLink: Thing, fetch: SolidFetch_Type): Promise<ShareLinkFetchModel> {\r\n    let shareDataset = await tryGetShareWhitoutFetch(resourceUri);\r\n    if (shareDataset === null) {\r\n        shareDataset = await tryGetShareWitchFetch(resourceUri, fetch);\r\n    }\r\n\r\n    return { resourceUri, shareLink, shareDataset };\r\n}\r\n\r\nexport async function fetchQuizTitle(quizUri: string, lang: string, fetch: SolidFetch_Type): Promise<string | null> {\r\n    try {        \r\n        const dataset = await getSolidDataset(quizUri, { fetch });\r\n        const thing = getThing(dataset, quizUri);\r\n\r\n        if (thing === null){\r\n            return \"fetch failed\";\r\n        }\r\n\r\n        const multiLang = getBoolean(thing, MULTI_LANGUAGE_SUPPORT) ?? false;\r\n        const title = getString(thing, TITLE, multiLang, lang);\r\n\r\n        return title;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function fetchQuizTitleFromResult(quizResultUri: string, lang: string, fetch: SolidFetch_Type): Promise<string | null> {\r\n    try {        \r\n        const dataset = await getSolidDataset(quizResultUri, { fetch });\r\n        const thing = getThing(dataset, quizResultUri);\r\n\r\n        if (thing === null){\r\n            return \"fetch failed\";\r\n        }\r\n\r\n        const quizUri = getUrl(thing, SOLIDQUIZ.quizResultOf.value) ?? \"error\";\r\n        \r\n        return fetchQuizTitle(quizUri, lang, fetch);\r\n    } catch (error) {\r\n        console.log(error);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function removeSharing(shareLinkModel: ShareLinkModel, fetch: SolidFetch_Type) {\r\n    //take away acl from resource (set the specified acls every right to false)\r\n    const resourceUri = getUrl(shareLinkModel.shareThing, SOLIDQUIZ.sharedResource.value) ?? \"error\";\r\n    if (shareLinkModel.isPubliclyShared) {\r\n        await aclService.takeAwayPublicAcl(resourceUri, fetch);\r\n    }\r\n    else {\r\n        const agentWebId = getUrl(shareLinkModel.shareLinkThing, SOLIDQUIZ.shareLinksIndividual.value) ?? \"error\";\r\n        await aclService.takeAwayAgentAcl(resourceUri, agentWebId, fetch);\r\n    }\r\n    \r\n    //remove shares source\r\n    if (shareLinkModel.isPubliclyShared) {\r\n        await removePublicShares(shareLinkModel.shareThing);\r\n    }\r\n    else {\r\n        await removeAgentShares(shareLinkModel.shareThing, fetch);\r\n    }\r\n\r\n    //remove link\r\n    removeShareLink(shareLinkModel.shareLinkThing, fetch);\r\n}\r\n\r\nexport async function tryGetName(webId: string): Promise<string | null> {\r\n    try {\r\n        const dataset = await getSolidDataset(webId);\r\n        const thing = getThing(dataset, webId);\r\n        if (thing === null) {\r\n            return null;\r\n        }\r\n\r\n        let name = getStringNoLocale(thing, FOAF.firstName);\r\n        if (name === null) {\r\n            name = getStringNoLocale(thing, FOAF.name);\r\n        }\r\n\r\n        return name;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n\r\n//privates\r\nasync function tryGetShareWhitoutFetch(datasetUri: string): Promise<SolidDataset_Type | null> {\r\n    try {\r\n        const shareDataset = await getSolidDataset(datasetUri);\r\n        return shareDataset;\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function tryGetShareWitchFetch(datasetUri: string, fetch: SolidFetch_Type): Promise<SolidDataset_Type | null> {\r\n    try {\r\n        const shareDataset = await getSolidDataset(datasetUri, { fetch });\r\n        return shareDataset;\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction checkIfPubliclyShared(shareLinkThing: Thing){\r\n    const individualWebId = getUrl(shareLinkThing, SOLIDQUIZ.shareLinksIndividual.value);\r\n\r\n    return individualWebId === SOLID_QUIZ_POD_PROFILE;\r\n}\r\n\r\nasync function removePublicShares(shareThing: Thing) {\r\n    let shareDataset = await getSolidDataset(shareThing.url);\r\n\r\n    shareDataset = removeThing(shareDataset, shareThing.url);\r\n\r\n    await saveSolidDatasetAt(shareThing.url, shareDataset);\r\n}\r\n\r\nasync function removeAgentShares(shareThing: Thing, fetch: SolidFetch_Type) {\r\n    let shareDataset = await getSolidDataset(shareThing.url, { fetch });\r\n\r\n    shareDataset = removeThing(shareDataset, shareThing.url);\r\n\r\n    await saveSolidDatasetAt(shareThing.url, shareDataset, { fetch });\r\n}\r\n\r\nasync function removeShareLink(shareLinkThing: Thing, fetch: SolidFetch_Type) {\r\n    let shareLinkDataset = await getSolidDataset(shareLinkThing.url, { fetch });\r\n\r\n    shareLinkDataset = removeThing(shareLinkDataset, shareLinkThing.url);\r\n\r\n    await saveSolidDatasetAt(shareLinkThing.url, shareLinkDataset, { fetch });\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Button, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { SpinnerContext } from './../../../contexts/SpinnerContext';\r\nimport { tryGetName } from '../../../helpers/ShareLinksHelper';\r\n\r\nexport const LinkWithTooltip: React.FC<Props> = ({href, tooltipText}) => {\r\n\tconst { SpinAround } = useContext(SpinnerContext);\r\n\tconst [name, setName] = useState(\"LINK\");\r\n\r\n\tuseEffect(() => {\r\n\t\tSpinAround(async () => {\r\n\t\t\tconst name = await tryGetName(href);\r\n\r\n\t\t\tif (name !== null) {\r\n\t\t\t\tsetName(name);\r\n\t\t\t}\r\n\t\t});\r\n\t}, [SpinAround, href]);\r\n\t\r\n\tconst renderTooltip = (props: any) => (\r\n\t\t<Tooltip id=\"button-tooltip\" {...props}>\r\n\t\t  {tooltipText}\r\n\t\t</Tooltip>\r\n\t  );\r\n\t  \r\n\treturn (\r\n\t\t<OverlayTrigger\r\n\t\t\tplacement=\"right\"\r\n\t\t\tdelay={{ show: 10, hide: 50 }}\r\n\t\t\toverlay={renderTooltip}\r\n\t\t>\r\n\t\t\t<Button href={href} target=\"_blank\" rel=\"noopener noreferrer\" variant='link'>{name}</Button>\r\n\t\t</OverlayTrigger>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { getDatetime, getInteger } from '@inrupt/solid-client';\r\nimport { NUMBER_OF_CORRECT_ANSWERS, QUIZ_RESULT_CREATED } from '../../../../../../constants/SolidQuizMissingValues';\r\nimport { TranslateContext } from '../../../../../../contexts/TranslateContext';\r\nimport { getUrl } from '@inrupt/solid-client';\r\nimport SOLIDQUIZ from './../../../../../../helpers/SOLIDQUIZ';\r\nimport { LinkWithTooltip } from '../../../../../common/linkWithTooltip';\r\n\r\nexport const ResultsListElement: React.FC<Props> = (props: Props) => {\r\n\tconst { lang } = useContext(TranslateContext);\t\r\n\tconst [correctAnswers, setCorrectAnswers] = useState(\"\");\r\n\tconst [createdBy, setCreatedBy] = useState(\"\");\r\n\tconst [created, setCreated] = useState(\"\");\r\n\r\n\tuseEffect(() => {\r\n\t\tconst actCorrectAnswers = getInteger(props.resultThing, NUMBER_OF_CORRECT_ANSWERS) ?? 0;\r\n\t\tconst actCreatedBy = getUrl(props.resultThing, SOLIDQUIZ.quizResultCreatedBy.value) ?? \"error\";\r\n\t\tconst actCreated = getDatetime(props.resultThing, QUIZ_RESULT_CREATED) ?? \"error\";\r\n\r\n\t\tsetCorrectAnswers(actCorrectAnswers.toString());\r\n\t\tsetCreatedBy(actCreatedBy);\r\n\t\tsetCreated(actCreated.toLocaleString(lang));\r\n\t}, [props.resultThing, lang]);\r\n\r\n\treturn (\r\n\t\t<Row className='row-style'>\r\n\t\t\t<Col md=\"3\">\r\n\t\t\t\t<p>{props.orderId + 1}</p>\r\n\t\t\t</Col>\r\n\t\t\t<Col md=\"3\">\t\t\t\t\r\n\t\t\t\t<p>{correctAnswers}</p>\r\n\t\t\t</Col>\r\n\t\t\t<Col md=\"3\">\r\n\t\t\t\t<LinkWithTooltip href={createdBy} tooltipText={createdBy} />\r\n\t\t\t</Col>\r\n\t\t\t<Col md=\"3\">\r\n\t\t\t\t<p>{created}</p>\t\t\t\t\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { TranslateContext } from '../../../../../contexts/TranslateContext';\r\nimport { getString } from './../../../../../helpers/LangReader';\r\nimport { MULTI_LANGUAGE_SUPPORT, TITLE } from './../../../../../constants/SolidQuizMissingValues';\r\nimport { getBoolean } from '@inrupt/solid-client';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { ResultsListElement } from './resultsListElement';\r\n\r\nexport const ResultsList: React.FC<Props> = (props: Props) => {\r\n\tconst { t, lang } = useContext(TranslateContext);\t\r\n\tconst [quizTitle, setQuizTitle] = useState(\"\");\r\n\tconst [elements, setElements] = useState<JSX.Element[]>([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst multiLang = getBoolean(props.quizData.thing, MULTI_LANGUAGE_SUPPORT) ?? false;\r\n\t\tconst loadedQuizTitle = getString(props.quizData.thing, TITLE, multiLang, lang);\r\n\r\n\t\tsetQuizTitle(loadedQuizTitle);\r\n\t\tsetElements(\r\n\t\t\tprops.quizResultDatasets.map((datasetAndThing, indx) => \r\n\t\t\t\t<ResultsListElement key={indx} orderId={indx} quizThing={props.quizData.thing} resultThing={datasetAndThing.thing} multiLang={multiLang} />)\r\n\t\t);\r\n\t}, [lang, props.quizData.thing, props.quizResultDatasets]);\r\n\r\n\tif (elements.length === 0) {\r\n\t\treturn <h2 className='empty-list-style'>{t(\"page.common.list.empty\")}</h2>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<h3 className='main-title'>{quizTitle} {t(\"leaderboard.quizResult.title\")}</h3>\r\n\r\n\t\t\t<Row className='row-style'>\r\n\t\t\t\t<Col md=\"3\">\r\n\t\t\t\t\t{t(\"leaderboard.quizResult.order\")}\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md=\"3\">\r\n\t\t\t\t\t{t(\"leaderboard.quizResult.correctAnswers\")}\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md=\"3\">\r\n\t\t\t\t\t{t(\"leaderboard.quizResult.createdBy\")}\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md=\"3\">\r\n\t\t\t\t\t{t(\"leaderboard.quizResult.created\")}\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\r\n\t\t\t{elements}\r\n\t\t</Container>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { useSession } from '@inrupt/solid-ui-react';\r\nimport { WorkspaceContext } from '../../../../contexts/WorkspaceContext';\r\nimport { SpinnerContext } from '../../../../contexts/SpinnerContext';\r\nimport * as quizResultsService from '../../../../services/QuizResultService';\r\nimport { getPublicQuizResultDatasets, getQuizNameFromQuizThing, getQuizResultsFromContainer, getQuizResultsFromDatasets, mergeQuizResults, sortQuizResultDatas } from '../../../../helpers/QuizResultsListHelper';\r\nimport { DatasetAndThing } from '../../../../models/DatasetAndThing';\r\nimport { ResultsList } from './resultsList';\r\n\r\nexport const ResultsLoader: React.FC<Props> = (props: Props) => {\r\n\tconst { session } = useSession();\r\n\tconst { workspaceUrl } = useContext(WorkspaceContext);\r\n\tconst { SpinAround } = useContext(SpinnerContext);\r\n\tconst [quizResultDatasets, setQuizResultDatasets] = useState<DatasetAndThing[]>([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tSpinAround(async () => {\r\n\t\t\t//load locales\r\n\t\t\tconst quizName = getQuizNameFromQuizThing(props.quizData.thing);\r\n\t\t\tconst quizzesContainerUri = quizResultsService.getQuizResultsContainer(workspaceUrl, quizName); \r\n\t\t\tconst fetchedQuizResultDatasets = await getQuizResultsFromContainer(quizzesContainerUri, session.fetch);\r\n\t\t\tconst filteredQuizResultsData = getQuizResultsFromDatasets(fetchedQuizResultDatasets, props.quizData.thing);\r\n\r\n\t\t\t//load public\r\n\t\t\tconst fetchedPublicQuizResultDatasets = await getPublicQuizResultDatasets(props.quizData.thing);\r\n\r\n\t\t\t//merge (filter out duplicates)\r\n\t\t\tconst mergedQuizResultsData = mergeQuizResults(filteredQuizResultsData, fetchedPublicQuizResultDatasets);\r\n\r\n\t\t\t//sort them\r\n\t\t\tsortQuizResultDatas(mergedQuizResultsData);\r\n\t\r\n\t\t\tsetQuizResultDatasets(mergedQuizResultsData);\r\n\t\t});\t\r\n\t}, [workspaceUrl, session.fetch, SpinAround, props.quizData.thing]);\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ResultsList quizData={props.quizData} quizResultDatasets={quizResultDatasets} />\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { TranslateContext } from '../../../contexts/TranslateContext';\r\nimport { QuizListLoader } from '../../common/quizListLoader';\r\nimport { DatasetAndThing } from '../../../models/DatasetAndThing';\r\nimport { ResultsLoader } from './resultsLoader';\r\nimport { Button } from 'react-bootstrap';\r\nimport { PageSwitcherContext } from '../../../contexts/PageSwitcherContext';\r\n\r\nexport const Leaderboard: React.FC<Props> = (props: Props) => {\r\n\tconst { t } = useContext(TranslateContext);\t\r\n\tconst [selectedQuiz, setSelectedQuiz] = useState<DatasetAndThing | null>(null);\r\n\tconst { GoBack } = useContext(PageSwitcherContext);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{\r\n\t\t\t\tselectedQuiz === null ?\r\n\t\t\t\t<>\r\n\t\t\t\t\t<h3 className='main-title'>{t(\"leaderboard.title\")}</h3>\r\n\t\t\t\t\t<QuizListLoader onQuizSelected={setSelectedQuiz} />\r\n\t\t\t\t</> :\r\n\t\t\t\t<>\r\n\t\t\t\t\t<ResultsLoader quizData={selectedQuiz} /> \r\n\t\t\t\t\t<Button variant='light' className='back-btn' onClick={() => GoBack()}>{t(\"page.common.back\")}</Button>\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { TranslateContext } from '../../../contexts/TranslateContext';\r\nimport { PageSwitcherContext } from '../../../contexts/PageSwitcherContext';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nexport const HelpPage: React.FC<Props> = (props: Props) => {\r\n\tconst { t } = useContext(TranslateContext);\r\n\tconst { GoBack } = useContext(PageSwitcherContext);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className='main-title'>{t(\"helpPage.title\")}</h3>\r\n\t\t\t<Button onClick={() => GoBack()}>{t(\"page.common.back\")}</Button>\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { getBoolean } from '@inrupt/solid-client';\r\nimport { MULTI_LANGUAGE_SUPPORT, TITLE } from '../../../../../../constants/SolidQuizMissingValues';\r\nimport { TranslateContext } from '../../../../../../contexts/TranslateContext';\r\nimport { getString } from '../../../../../../helpers/LangReader';\r\nimport { CustomButtonYesNo } from '../../../../../common/buttonToYesNoModal/customButtonYesNo';\r\nimport { PageSwitcherContext } from '../../../../../../contexts/PageSwitcherContext';\r\nimport { CreateQuiz } from '../../../../createQuiz';\r\n\r\nexport const QuizBtn: React.FC<Props> = (props: Props) => {\r\n\tconst { t, lang } = useContext(TranslateContext);\r\n\tconst { SwitchTo } = useContext(PageSwitcherContext);\r\n\tconst [quizTitle, setQuizTitle] = useState<string>(\"\");\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst multiLangSupport = getBoolean(props.datasetAndThing.thing, MULTI_LANGUAGE_SUPPORT);\r\n\r\n\t\tlet title = getString(props.datasetAndThing.thing, TITLE, multiLangSupport ?? false, lang);\r\n\r\n\t\tsetQuizTitle(title);\r\n\t}, [props.datasetAndThing.thing, lang]);\r\n\r\n\treturn (\r\n\t\t<div className=\"d-grid\">\r\n\t\t\t<CustomButtonYesNo \r\n\t\t\t\tvariant=\"secondary\" \r\n\t\t\t\tmodalText={t(\"modifyQuiz.modal.text\")} \r\n\t\t\t\tonConfirm={() => SwitchTo(<CreateQuiz datasetAndThing={props.datasetAndThing} />)}>\r\n\t\t\t\t\t{quizTitle}\r\n\t\t\t</CustomButtonYesNo>\r\n\t\t</div>\r\n\t);\r\n}","import React, { useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { CloseButton } from 'react-bootstrap';\r\nimport { YesNoModal } from '../yesNoModal';\r\n\r\nexport const CloseButtonYesNo: React.FC<Props> = (props: Props) => {\r\n\tconst [modalShow, setModalShow] = useState(false);\r\n\r\n\tconst handleConfirm = () => {\r\n\t\tsetModalShow(false);\r\n\t\tprops.onConfirm();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<CloseButton onClick={() => setModalShow(true)} />\r\n\t\r\n\t\t\t<YesNoModal\r\n\t\t\t\tshow={modalShow}\r\n\t\t\t\tonHide={() => setModalShow(false)}\r\n\t\t\t\tbody={props.modalText}\r\n\t\t\t\tonConfirm={handleConfirm}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { QuizBtn } from './quizBtn';\r\nimport { CloseButtonYesNo } from '../../../../common/buttonToYesNoModal/closeButtonYesNo';\r\nimport { TranslateContext } from '../../../../../contexts/TranslateContext';\r\nimport { QuizShare } from '../../../../common/quizShare';\r\n\r\nexport const QuizRow: React.FC<Props> = (props: Props) => {\r\n\tconst { t } = useContext(TranslateContext);\r\n\r\n\treturn (\r\n\t\t<Row>\r\n\t\t\t<Col md=\"1\" className='share-button-style'>\r\n\t\t\t\t<QuizShare datasetAndThing={props.datasetAndThing} />\r\n\t\t\t</Col>\r\n\t\t\t<Col md=\"10\" className='content-style'>\r\n\t\t\t\t<QuizBtn datasetAndThing={props.datasetAndThing} />\r\n\t\t\t</Col>\r\n\t\t\t<Col md=\"1\" className='close-button-style'>\r\n\t\t\t\t<CloseButtonYesNo modalText={t(\"page.common.yesno.confirmDeleteText\")} onConfirm={() => props.handleDelete(props.datasetAndThing)} />\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t);\r\n}","import React, { useEffect, useState, useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Container } from 'react-bootstrap';\r\nimport { QuizRow } from './quizRow';\r\nimport { getQuizzesFromDatasets } from '../../../../helpers/QuizListHelper';\r\nimport { TranslateContext } from './../../../../contexts/TranslateContext';\r\n\r\nexport const QuizList: React.FC<Props> = (props: Props) => {\r\n\tconst { t } = useContext(TranslateContext);\r\n\tconst [quizRows, setQuizRows] = useState<JSX.Element[]>([]);\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst quizData = getQuizzesFromDatasets(props.quizDatasets);\r\n\r\n\t\tsetQuizRows(\r\n\t\t\tquizData.map((datasetAndThing, indx) => \r\n\t\t\t\t<QuizRow key={indx} datasetAndThing={datasetAndThing} handleDelete={props.handleDelete} />)\r\n\t\t);\r\n\t}, [props.quizDatasets, props.handleDelete]);\r\n\r\n\tif (quizRows.length === 0) {\r\n\t\treturn <h2 className='empty-list-style'>{t(\"page.common.list.empty\")}</h2>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container className=\"justify-content-md-center\">\r\n\t\t\t{quizRows}\r\n\t\t</Container>\r\n\t);\r\n}","import React, { useCallback, useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { TranslateContext } from '../../../contexts/TranslateContext';\r\nimport { PageSwitcherContext } from '../../../contexts/PageSwitcherContext';\r\nimport { Button } from 'react-bootstrap'\r\nimport * as workspaceService from '../../../services/WorkspaceService';\r\nimport { useSession } from '@inrupt/solid-ui-react';\r\nimport { WorkspaceContext } from '../../../contexts/WorkspaceContext';\r\nimport { SolidDataset_Type } from '../../../constants/SolidDatasetType';\r\nimport { SpinnerContext } from '../../../contexts/SpinnerContext';\r\nimport { QuizList } from './quizList';\r\nimport { DatasetAndThing } from './../../../models/DatasetAndThing';\r\nimport { getOwnQuizzes } from '../../../helpers/QuizListHelper';\r\n\r\nexport const ModifyQuiz: React.FC<Props> = (props: Props) => {\r\n\tconst { session } = useSession();\r\n\tconst { t } = useContext(TranslateContext);\r\n\tconst { GoBack } = useContext(PageSwitcherContext);\r\n\tconst { workspaceUrl } = useContext(WorkspaceContext);\r\n\tconst { SpinAround } = useContext(SpinnerContext);\r\n\tconst [quizDatasets, setQuizDatasets] = useState<SolidDataset_Type[]>([]);\r\n\tconst [syncState, setSyncState] = useState(0);\r\n\r\n\tuseEffect(() => {\r\n\t\tSpinAround(async () => {\r\n\t\t\t//just owned quizzes\r\n\t\t\tconst fetchedQuizDatasets = await getOwnQuizzes(workspaceUrl, session.fetch);\r\n\t\r\n\t\t\tsetQuizDatasets(fetchedQuizDatasets);\r\n\t\t});\t\r\n\t}, [workspaceUrl, session.fetch, SpinAround, syncState]);\r\n\r\n\tconst handleDelete = useCallback((datasetAndThing: DatasetAndThing) => {\r\n\t\tSpinAround(async () => {\r\n\t\t\tawait workspaceService.deleteDataset(datasetAndThing.dataset, session.fetch);\r\n\t\t\tsetSyncState(act => act + 1);\r\n\t\t});\r\n\t}, [session.fetch, SpinAround]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className='main-title'>{t(\"modifyQuiz.title\")}</h3>\r\n\r\n\t\t\t{quizDatasets.length > 0 &&\r\n\t\t\t<QuizList quizDatasets={quizDatasets} handleDelete={handleDelete} />}\r\n\r\n\t\t\t<Button variant='light' className='back-btn' onClick={() => GoBack()}>{t(\"page.common.back\")}</Button>\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Col } from 'react-bootstrap';\r\nimport { useSession } from '@inrupt/solid-ui-react';\r\nimport { TranslateContext } from '../../../../../../contexts/TranslateContext';\r\nimport { SpinnerContext } from '../../../../../../contexts/SpinnerContext';\r\nimport { fetchQuizTitle, fetchQuizTitleFromResult } from '../../../../../../helpers/ShareLinksHelper';\r\nimport { getUrl } from '@inrupt/solid-client';\r\nimport SOLIDQUIZ from './../../../../../../helpers/SOLIDQUIZ';\r\n\r\nexport const ShareTypeSpecific: React.FC<Props> = (props: Props) => {\r\n\tconst { session } = useSession();\r\n\tconst { t, lang } = useContext(TranslateContext);\r\n\tconst { SpinAround } = useContext(SpinnerContext);\r\n\tconst [title, setTitle] = useState(\"\");\r\n\t\r\n\tuseEffect(() => {\r\n\t\tSpinAround(async () => {\r\n\t\t\tconst resourceUri = getUrl(props.shareThing, SOLIDQUIZ.sharedResource.value) ?? \"error\";\r\n\t\t\tlet actTitle: string | null = null;\r\n\r\n\t\t\tif (props.isQuizShare) {\r\n\t\t\t\tactTitle = await fetchQuizTitle(resourceUri, lang, session.fetch);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tactTitle = await fetchQuizTitleFromResult(resourceUri, lang, session.fetch);\r\n\t\t\t}\r\n\r\n\t\t\t//fetch failed\r\n\t\t\tif (actTitle === null) {\r\n\t\t\t\tactTitle = t(\"shares.element.fetchFailed\");\r\n\t\t\t}\r\n\r\n\t\t\tsetTitle(actTitle);\r\n\t\t});\t\r\n\t}, [session.fetch, SpinAround, lang, t, props.isQuizShare, props.shareThing]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Col md=\"3\">\t\t\t\t\r\n\t\t\t\t<p>{title}</p>\r\n\t\t\t</Col>\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { CloseButtonYesNo } from '../../../../common/buttonToYesNoModal/closeButtonYesNo';\r\nimport { TranslateContext } from '../../../../../contexts/TranslateContext';\r\nimport { getDatetime, getUrl } from '@inrupt/solid-client';\r\nimport SOLIDQUIZ from './../../../../../helpers/SOLIDQUIZ';\r\nimport { ShareTypeSpecific } from './shareTypeSpecific';\r\nimport { SHARE_CREATED } from '../../../../../constants/SolidQuizMissingValues';\r\nimport { removeSharing } from '../../../../../helpers/ShareLinksHelper';\r\nimport { useSession } from '@inrupt/solid-ui-react';\r\nimport { InfoModal } from '../../../../common/infoModal';\r\nimport { SpinnerContext } from '../../../../../contexts/SpinnerContext';\r\nimport { LinkWithTooltip } from '../../../../common/linkWithTooltip';\r\n\r\nexport const ShareRow: React.FC<Props> = (props: Props) => {\r\n\tconst { session } = useSession();\r\n\tconst { t, lang } = useContext(TranslateContext);\t\r\n\tconst { SpinAround } = useContext(SpinnerContext);\r\n\tconst [isQuizShare, setIsQuizShare] = useState<boolean | null>(null);\r\n\tconst [created, setCreated] = useState(\"\");\r\n\tconst [individual, setIndividual] = useState(\"\");\r\n\tconst [showInfoModal, setShowInfoModal] = useState(false);\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst typeUri = getUrl(props.shareLinkModel.shareThing, SOLIDQUIZ.sharedResourceType.value) ?? \"error\";\r\n\t\t\r\n\t\tif (typeUri === SOLIDQUIZ.Quiz.value) {\r\n\t\t\tsetIsQuizShare(true);\r\n\t\t}\r\n\t\telse if (typeUri === SOLIDQUIZ.QuizResult.value) {\r\n\t\t\tsetIsQuizShare(false);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tconsole.log(\"Error, typeUri is not recognizable\" + typeUri)\r\n\t\t}\r\n\r\n\t\tconst actCreated = getDatetime(props.shareLinkModel.shareThing, SHARE_CREATED) ?? \"error\";\r\n\t\tconst actIndividual = getUrl(props.shareLinkModel.shareLinkThing, SOLIDQUIZ.shareLinksIndividual.value) ?? \"error\";\r\n\r\n\t\tsetCreated(actCreated.toLocaleString(lang));\r\n\t\tsetIndividual(actIndividual);\r\n\t}, [props.shareLinkModel, lang]);\r\n\r\n\tconst onRemove = () => {\r\n\t\tSpinAround(async () => {\r\n\t\t\tawait removeSharing(props.shareLinkModel, session.fetch);\r\n\r\n\t\t\tsetShowInfoModal(true);\r\n\t\t});\t\r\n\t}\r\n\r\n\tconst onInfoHide = () => {\r\n\t\tsetShowInfoModal(false);\r\n\t\tprops.setSyncState(act => act + 1);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{(isQuizShare !== null) &&\r\n\t\t\t<Row className='row-style'>\r\n\t\t\t\t<Col md=\"2\">\r\n\t\t\t\t\t<p>{isQuizShare ? t(\"shares.list.typeQuiz\") : t(\"shares.list.typeQuizResult\")}</p>\r\n\t\t\t\t</Col>\r\n\t\t\t\t\r\n\t\t\t\t<ShareTypeSpecific shareThing={props.shareLinkModel.shareThing} isQuizShare={isQuizShare} />\r\n\r\n\t\t\t\t<Col md=\"3\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tprops.shareLinkModel.isPubliclyShared ?\r\n\t\t\t\t\t\t<p>{t(\"shares.list.shareTypePublic\")}</p> :\r\n\t\t\t\t\t\t<LinkWithTooltip href={individual} tooltipText={individual} />\r\n\t\t\t\t\t}\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md=\"3\">\r\n\t\t\t\t\t<p>{created}</p>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md=\"1\">\r\n\t\t\t\t\t<CloseButtonYesNo modalText={t(\"shares.list.modal.text\")} onConfirm={onRemove} />\t\t\t\t\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>}\r\n\r\n\t\t\t<InfoModal show={showInfoModal} onHide={onInfoHide} body={t(\"shares.list.modal.shareOk\")} />\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { TranslateContext } from '../../../../contexts/TranslateContext';\r\nimport { ShareRow } from './shareRow';\r\n\r\nexport const ShareList: React.FC<Props> = (props: Props) => {\r\n\tconst { t } = useContext(TranslateContext);\t\r\n\tconst [elements, setElements] = useState<JSX.Element[]>([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetElements(\r\n\t\t\tprops.shareLinkModels.map((shareLinkModel, indx) => \r\n\t\t\t\t<ShareRow key={indx} shareLinkModel={shareLinkModel} setSyncState={props.setSyncState}  />)\r\n\t\t);\r\n\t}, [props.shareLinkModels, props.setSyncState]);\r\n\r\n\tif (props.shareLinkModels.length === 0) {\r\n\t\treturn <h2 className='empty-list-style'>{t(\"page.common.list.empty\")}</h2>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Row className='row-style'>\r\n\t\t\t\t<Col md=\"2\">\r\n\t\t\t\t\t{t(\"shares.listCol.type\")}\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md=\"3\">\r\n\t\t\t\t\t{t(\"shares.listCol.title\")}\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md=\"3\">\r\n\t\t\t\t\t{t(\"shares.listCol.shareType\")}\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md=\"3\">\r\n\t\t\t\t\t{t(\"shares.listCol.created\")}\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\r\n\t\t\t{elements}\r\n\t\t</Container>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { TranslateContext } from '../../../contexts/TranslateContext';\r\nimport { PageSwitcherContext } from '../../../contexts/PageSwitcherContext';\r\nimport { Button } from 'react-bootstrap';\r\nimport { WorkspaceContext } from '../../../contexts/WorkspaceContext';\r\nimport { useSession } from '@inrupt/solid-ui-react';\r\nimport { getAllShareThingByShareLink } from '../../../helpers/ShareLinksHelper';\r\nimport { SpinnerContext } from '../../../contexts/SpinnerContext';\r\nimport { ShareList } from './shareList';\r\nimport { ShareLinkModel } from '../../../models/ShareLinkModel';\r\n\r\nexport const Shares: React.FC<Props> = (props: Props) => {\r\n\tconst { session } = useSession();\r\n\tconst { t } = useContext(TranslateContext);\r\n\tconst { GoBack } = useContext(PageSwitcherContext);\r\n\tconst { workspaceUrl } = useContext(WorkspaceContext);\r\n\tconst { SpinAround } = useContext(SpinnerContext);\r\n\tconst [shareLinkModels, setShareLinkModels] = useState<ShareLinkModel[]>([]);\r\n\tconst [syncState, setSyncState] = useState(0);\r\n\r\n\tuseEffect(() => {\r\n\t\tSpinAround(async () => {\r\n\t\t\tconst actShareLinkModels = await getAllShareThingByShareLink(workspaceUrl, session.fetch);\r\n\r\n\t\t\tsetShareLinkModels(actShareLinkModels);\r\n\t\t});\t\r\n\t}, [workspaceUrl, session.fetch, SpinAround, syncState]);\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className='main-title'>{t(\"shares.title\")}</h3>\r\n\r\n\t\t\t<ShareList shareLinkModels={shareLinkModels} setSyncState={setSyncState} /> \r\n\r\n\t\t\t<Button className='back-btn' onClick={() => GoBack()}>{t(\"page.common.back\")}</Button>\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport { TranslateContext } from '../../../contexts/TranslateContext';\r\nimport { PageSwitcherContext } from '../../../contexts/PageSwitcherContext';\r\nimport { PlayGame } from '../playGame';\r\nimport { CreateQuiz } from './../createQuiz/index';\r\nimport { Leaderboard } from './../leaderboard/index';\r\nimport { HelpPage } from './../helpPage/index';\r\nimport { ModifyQuiz } from '../modifyQuiz';\r\nimport { LogoutButton } from '@inrupt/solid-ui-react';\r\nimport { Shares } from '../shares';\r\n\r\nexport const MainMenu: React.FC<Props> = (props: Props) => {\r\n\tconst { t } = useContext(TranslateContext);\r\n\tconst { SwitchTo } = useContext(PageSwitcherContext);\r\n\r\n\tconst switchToPlayGame = () => SwitchTo(<PlayGame />);\r\n\tconst switchToCreateQuiz = () => SwitchTo(<CreateQuiz />);\r\n\tconst switchToModifyQuiz = () => SwitchTo(<ModifyQuiz />);\r\n\tconst switchToLeaderboard = () => SwitchTo(<Leaderboard />);\r\n\tconst switchToSharesPage = () => SwitchTo(<Shares />);\r\n\tconst switchToHelpPage = () => SwitchTo(<HelpPage />);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className='main-title'>{t(\"mainMenu.title\")}</h3>\r\n\t\t\t<div className=\"d-grid gap-4\">\r\n\t\t\t\t<Button variant=\"primary\" size=\"lg\" onClick={switchToPlayGame}>{t(\"mainMenu.btn.playGame\")}</Button>\r\n\t\t\t\t<Button variant=\"secondary\" size=\"lg\" onClick={switchToCreateQuiz}>{t(\"mainMenu.btn.createQuiz\")}</Button>\r\n\t\t\t\t<Button variant=\"secondary\" size=\"lg\" onClick={switchToModifyQuiz}>{t(\"mainMenu.btn.modifyQuiz\")}</Button>\r\n\t\t\t\t<Button variant=\"outline-secondary\" size=\"lg\" onClick={switchToLeaderboard}>{t(\"mainMenu.btn.leaderboard\")}</Button>\r\n\t\t\t\t<Button variant=\"outline-primary\" size=\"lg\" onClick={switchToSharesPage}>{t(\"mainMenu.btn.shares\")}</Button>\r\n\t\t\t\t<Button variant=\"info\" size=\"lg\" onClick={switchToHelpPage}>{t(\"mainMenu.btn.helpPage\")}</Button>\r\n\t\t\t</div>\r\n\t\t\t<LogoutButton>\r\n\t\t\t\t<div className=\"logout-btn-row d-grid gap-4\">\r\n\t\t\t\t\t\t<Button variant=\"outline-dark\" size=\"lg\">{t(\"mainMenu.btn.logout\")}</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</LogoutButton>\r\n\t\t</>\r\n\t);\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { SolidDataset_Type } from '../../../constants/SolidDatasetType';\r\nimport { defaultWorkspaceContext, WorkspaceContext } from '../../../contexts/WorkspaceContext';\r\nimport { SpinnerContext } from '../../../contexts/SpinnerContext';\r\nimport { useSession } from '@inrupt/solid-ui-react';\r\nimport * as workspaceService from '../../../services/WorkspaceService';\r\nimport * as quizService from '../../../services/QuizService';\r\nimport * as sharesService from '../../../services/SharesService';\r\n\r\nexport const WorkspaceContextComponent: React.FC<Props> = (props: Props) => {\r\n\tconst { session } = useSession();\r\n\tconst { SpinAround } = useContext(SpinnerContext);\r\n\tconst [workspace, setWorkspace] = useState<SolidDataset_Type | null>(defaultWorkspaceContext.workspace);\r\n\tconst [workspaceUrl, setWorkspaceUrl] = useState(defaultWorkspaceContext.workspaceUrl);\r\n\tconst [webId, setWebId] = useState(defaultWorkspaceContext.webId);\r\n\r\n\tconst getWorkspace = () => {\r\n\t\tif (workspace === null) {\r\n\t\t\treturn defaultWorkspaceContext.getWorkspace();\r\n\t\t}\r\n\r\n\t\treturn workspace;\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!session || !session.info.isLoggedIn) return;\r\n\r\n\t\tSpinAround(async () => {\r\n\t\t\t\r\n\t\t\tif (session.info.webId === undefined) {\r\n\t\t\t\tthrow new Error(\"WebId cannot be determined!\");\r\n\t\t\t}\r\n\r\n\t\t\tsetWebId(session.info.webId);\r\n\r\n\t\t\tconst profileThing = await workspaceService.getProfileThing(session.info.webId, session.fetch);\r\n\r\n\t\t\tconst workSpaceLocation = workspaceService.getWorkSpaceLocation(profileThing);\r\n\r\n\t\t\tconst fetchedWorkspace = await workspaceService.getOrCreateWorkSpace(workSpaceLocation, session.fetch);\r\n\r\n\t\t\tawait quizService.createQuizzesContainer(workSpaceLocation, session.fetch);\r\n\t\t\tawait sharesService.createSharesIndexForPublic(workSpaceLocation, session.info.webId, session.fetch);\r\n\r\n\t\t\tsetWorkspaceUrl(workSpaceLocation);\r\n\t\t\tsetWorkspace(fetchedWorkspace);\r\n\t\t});\r\n\t  }, [session, session.info.isLoggedIn, webId, SpinAround]);\r\n\r\n\treturn (\r\n\t\t<WorkspaceContext.Provider value={{\r\n\t\t\tworkspace,\r\n\t\t\tgetWorkspace,\r\n\t\t\tworkspaceUrl,\r\n\t\t\twebId\r\n\t\t}}>\r\n\t\t\t{props.children}\r\n\t\t</WorkspaceContext.Provider>\r\n\t);\r\n}","import React, { useContext } from 'react';\r\nimport { Props } from './types';\r\nimport './styles.scoped.css';\r\nimport { Container } from 'react-bootstrap';\r\nimport { TranslateContext } from '../../contexts/TranslateContext';\r\nimport { PageSwitcherComponent } from '../common/pageSwitcherComponent';\r\nimport { MainMenu } from './mainMenu';\r\nimport { WorkspaceContextComponent } from './../common/workspaceContextComponent/index';\r\n\r\nexport const Page: React.FC<Props> = (props: Props) => {\r\n\tconst { t } = useContext(TranslateContext);\r\n\r\n  const getDefaultPage = () => <MainMenu />;\r\n\r\n\treturn (\r\n    <Container className='square-box d-flex flex-column text-center'>\r\n      <Container className='px-4 inner-box'>\r\n        <WorkspaceContextComponent>\r\n          <h1>{t(\"page.title\")}</h1>\r\n          <PageSwitcherComponent defaultPage={getDefaultPage()} />\r\n        </WorkspaceContextComponent>\r\n      </Container>\r\n    </Container>\r\n\t);\r\n}","import { useSession } from '@inrupt/solid-ui-react';\nimport './App.css';\nimport { Authenticate } from './auth';\nimport { SpinnerContextComponent } from './common/spinnerContextComponent';\nimport { TranslateContextComponent } from './common/translateContextComponent';\nimport { Page } from './page';\n\nfunction App() {\n  const { session } = useSession();\n\n  const appContent = session.info.isLoggedIn ? <Page /> : <Authenticate />;\n\n  return (\n    <TranslateContextComponent>\n      <SpinnerContextComponent>\n        {appContent}\n      </SpinnerContextComponent>\n    </TranslateContextComponent>\n  );\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.css'\r\nimport 'bootstrap/dist/js/bootstrap.bundle'\r\nimport React from 'react';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { SessionProvider } from '@inrupt/solid-ui-react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <SessionProvider>\r\n      <App />\r\n    </SessionProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}